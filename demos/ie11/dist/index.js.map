{"version":3,"file":"index.js","sources":["../src/client/vertex.tsx","../src/client/graph.ts","../src/client/table.ts","../src/client/editor.ts","../src/server/graphdb.ts","../src/server/index.ts","../src/client/dashboard.ts","../src/client/index.ts"],"sourcesContent":["import { Utility } from \"@hpcc-js/common\";\r\nimport { Icon, TextBox, VertexProps, React } from \"@hpcc-js/react\";\r\n\r\ninterface CustomVertexProps extends VertexProps {\r\n    origData: any;\r\n}\r\n\r\nexport const CustomVertex: React.FunctionComponent<CustomVertexProps> = ({\r\n    categoryID = \"\",\r\n    text = \"\",\r\n    textHeight = 10,\r\n    textPadding = 4,\r\n    icon = {},\r\n    annotationsHeight = 12,\r\n    annotationIDs = [],\r\n    textFill = \"#287EC4\",\r\n    textboxFill = \"white\",\r\n    textboxStroke = \"#CCCCCC\",\r\n    textFontFamily = \"Verdana\",\r\n    showLabel = true,\r\n    origData = {}\r\n}) => {\r\n    const textboxStrokeWidth = 1;\r\n    const cornerRadius = 3;\r\n    const noLabelRadius = 5;\r\n\r\n    icon = {\r\n        height: 50,\r\n        imageChar: \"?\",\r\n        imageFontFamily: \"FontAwesome\",\r\n        imageCharFill: \"#555555\",\r\n        fill: \"transparent\",\r\n        strokeWidth: 0,\r\n        ...icon\r\n    };\r\n\r\n    const subText = React.useMemo(() => {\r\n        return {\r\n            text: \"\" + ((origData?.payload?.neighbors?.company ?? 0) + (origData?.payload?.neighbors?.person ?? 0) - (origData?.neighborCount ?? 0)),\r\n            fill: \"white\",\r\n            textFill: \"#555555\"\r\n        };\r\n    }, [origData?.neighborCount, origData?.payload?.neighbors?.company, origData?.payload?.neighbors?.person]);\r\n    let fullAnnotationWidth = 0;\r\n\r\n    const annoOffsetY = 0;\r\n\r\n    const labelWidth = React.useMemo(() => {\r\n        return Utility.textSize(text, textFontFamily, textHeight, false).width;\r\n    }, [text, textFontFamily, textHeight]);\r\n\r\n    let labelShapeWidth = 0;\r\n    if (text !== \"\") {\r\n        labelShapeWidth = labelWidth + (textPadding * 2) + (textboxStrokeWidth * 2);\r\n    }\r\n    fullAnnotationWidth += labelShapeWidth;\r\n    const textOffsetX = fullAnnotationWidth - (labelShapeWidth / 2);\r\n\r\n    const textShapeHeight = textHeight + (textPadding * 2) + (textboxStrokeWidth * 2);\r\n    const textElement = React.useMemo(() => {\r\n        return <g transform={`translate(${textOffsetX} ${annoOffsetY})`}>\r\n            {!showLabel || text === \"\" ?\r\n                <circle r={noLabelRadius} stroke={textboxStroke} fill={textFill} /> :\r\n                <>\r\n                    <TextBox\r\n                        text={text}\r\n                        height={textHeight}\r\n                        padding={textPadding}\r\n                        strokeWidth={textboxStrokeWidth}\r\n                        stroke={textboxStroke}\r\n                        fill={textboxFill}\r\n                        textFill={textFill}\r\n                        fontFamily={textFontFamily}\r\n                        cornerRadius={cornerRadius}\r\n                    />\r\n                </>\r\n            }\r\n        </g>;\r\n    }, [showLabel, text, textFill, textFontFamily, textHeight, textOffsetX, textPadding, textboxFill, textboxStroke]);\r\n\r\n    const iconHeight = icon.height || 20;\r\n    const iconStrokeWidth = icon.strokeWidth || 0;\r\n    const iconOffsetX = 0;\r\n    let iconOffsetY = 0;\r\n\r\n    const subTextOffsetX = 0;\r\n    let subTextOffsetY = textShapeHeight;\r\n\r\n    if (text !== \"\") {\r\n        iconOffsetY = - (iconHeight / 2) - (iconStrokeWidth) - (textShapeHeight / 2);\r\n    } else if (subText.text !== \"\") {\r\n        subTextOffsetY = (iconHeight / 2) + iconStrokeWidth;\r\n    }\r\n\r\n    const subtextElement = React.useMemo(() => subText.text === \"\" ? null :\r\n        <g transform={`translate(${subTextOffsetX} ${subTextOffsetY})`}>\r\n            <TextBox\r\n                fill={subText.fill || \"#FFFFFF\"}\r\n                textFill={subText.textFill || textFill}\r\n                {...subText}\r\n                height={textHeight}\r\n                padding={textPadding}\r\n                strokeWidth={0}\r\n                stroke={textboxStroke}\r\n                fontFamily={textFontFamily}\r\n                cornerRadius={cornerRadius}\r\n            />\r\n        </g>, [subText, subTextOffsetY, textFill, textFontFamily, textHeight, textPadding, textboxStroke]);\r\n    return <g>\r\n        <g transform={`translate(${iconOffsetX} ${iconOffsetY})`}>\r\n            <Icon {...icon} />\r\n        </g>\r\n        <g transform={`translate(${-fullAnnotationWidth / 2} ${annoOffsetY})`}>\r\n            {textElement}\r\n        </g>\r\n        {subtextElement}\r\n    </g>;\r\n};\r\n\r\nexport const CustomCentroidVertex: React.FunctionComponent<CustomVertexProps> = function ({\r\n    categoryID = \"\",\r\n    text = \"\",\r\n    icon = {},\r\n    annotationsHeight = 12,\r\n    annotationIDs = [],\r\n    textHeight = 12,\r\n    textPadding = 10,\r\n    textFill = \"#287EC4\",\r\n    textboxFill = \"white\",\r\n    textboxStroke = \"#CCCCCC\",\r\n    textFontFamily = \"Verdana\",\r\n    origData = {}\r\n}) {\r\n    icon = {\r\n        height: 91,\r\n        padding: 40,\r\n        imageCharFill: \"#555555\",\r\n        imageFontFamily: \"FontAwesome\",\r\n        fill: \"#FFCC33\",\r\n        stroke: \"#DFDFDF\",\r\n        imageChar: \"?\",\r\n        strokeWidth: 4,\r\n        yOffset: -15,\r\n        ...icon\r\n    };\r\n    const props = {\r\n        categoryID,\r\n        text,\r\n        icon,\r\n        annotationsHeight,\r\n        annotationIDs,\r\n        textHeight,\r\n        textPadding,\r\n        textFill,\r\n        textboxFill,\r\n        textboxStroke,\r\n        textFontFamily,\r\n        origData\r\n    };\r\n    return <CustomVertex\r\n        {...props}\r\n        icon={icon}\r\n    />;\r\n};\r\n\r\n","import { DataGraph, SankeyGraph } from \"@hpcc-js/graph\";\r\nimport { Edge, Vertex, VertexType } from \"../server\";\r\nimport { CustomCentroidVertex, CustomVertex } from \"./vertex\";\r\n\r\nconst typeFAChar = (type: VertexType) => {\r\n\r\n    switch (type) {\r\n        case \"company\":\r\n            return \"fa-industry\";\r\n        case \"person\":\r\n            return \"fa-user\";\r\n    }\r\n    return \"?\";\r\n};\r\n\r\nfunction values<T>(obj: { [key: string]: T }): T[] {\r\n    return Object.keys(obj).map(key => obj[key]);\r\n}\r\n\r\nfunction merge<T extends { id: number }>(items1: T[], items2: T[]) {\r\n    const vIdx: { [id: string]: T } = {};\r\n    for (const v of [...items1, ...items2]) {\r\n        vIdx[v.id] = v;\r\n    }\r\n    return values(vIdx);\r\n}\r\n\r\nexport class MainGraph extends DataGraph {\r\n\r\n    constructor() {\r\n        super();\r\n        this\r\n            .vertexColumns([\"fachar\", \"id\", \"name\", \"centroid\", \"neighborCount\", \"tooltip\", \"payload\"])\r\n            .vertexFACharColumn(\"fachar\")\r\n            .vertexIDColumn(\"id\")\r\n            .vertexLabelColumn(\"name\")\r\n            .vertexCentroidColumn(\"centroid\")\r\n            .vertexRenderer(CustomVertex as any)\r\n            .centroidRenderer(CustomCentroidVertex as any)\r\n            .edgeColumns([\"id\", \"sourceID\", \"targetID\", \"weight\", \"tooltip\", \"payload\"])\r\n            .edgeIDColumn(\"id\")\r\n            .edgeSourceColumn(\"sourceID\")\r\n            .edgeTargetColumn(\"targetID\")\r\n            .edgeLabelColumn(\"weight\")\r\n            .edgeArcDepth(10)\r\n            .showToolbar(true)\r\n            .layout(\"ForceDirectedHybrid\")\r\n            .treeRankDirection(\"TB\")\r\n            .highlightSelectedPathToCentroid(true)\r\n            .applyScaleOnLayout(false)\r\n            .allowDragging(true)\r\n            .wasmFolder(\"https://raw.githack.com/Gordonsmith/Visualization/IE_11/demos/ie11/dist/\")\r\n            ;\r\n    }\r\n\r\n    mapVertex(v: Vertex, edges: Edge[]) {\r\n        return [typeFAChar(v.type), v.id, v.name, v.centroid, edges.filter(e => e.sourceID === v.id || e.targetID === v.id).length, \"\", v as any];\r\n    }\r\n\r\n    mapEdge(e: Edge) {\r\n        return [e.id, e.sourceID, e.targetID, e.weight, \"\", e as any];\r\n    }\r\n\r\n    loadData(vertices: Vertex[], edges: Edge[]) {\r\n        this.vertices(vertices.map(v => this.mapVertex(v, edges)));\r\n        this.edges(edges.map(e => this.mapEdge(e)));\r\n        return this;\r\n    }\r\n\r\n    mergeData(vertices: Vertex[], edges: Edge[]) {\r\n        const merged_vertices = merge(this.vertices().map(v => v[v.length - 1] as unknown as Vertex), vertices);\r\n        const merged_edges = merge(this.edges().map(e => e[e.length - 1] as unknown as Edge), edges);\r\n        this.loadData(merged_vertices, merged_edges);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class MainSankey extends SankeyGraph {\r\n    constructor() {\r\n        super();\r\n        this\r\n            .vertexColumns([\"type\", \"id\", \"name\", \"payload\"])\r\n            .vertexIDColumn(\"id\")\r\n            .vertexLabelColumn(\"name\")\r\n            .vertexCategoryColumn(\"type\")\r\n            .edgeColumns([\"id\", \"sourceID\", \"targetID\", \"weight\", \"payload\"])\r\n            .edgeIDColumn(\"id\")\r\n            //  Reversed  ---\r\n            .edgeSourceColumn(\"sourceID\")\r\n            .edgeTargetColumn(\"targetID\")\r\n            .edgeWeightColumn(\"weight\")\r\n            .vertexPadding(10)\r\n            ;\r\n    }\r\n\r\n    loadData(vertices: Vertex[], edges: Edge[]) {\r\n        this.vertices(vertices.map(row => [row.type, row.id, row.name, row as any]));\r\n        this.edges(edges.map(row => [row.id, row.sourceID, row.targetID, row.weight, row as any]));\r\n        return this;\r\n    }\r\n\r\n    mergeData(vertices: Vertex[], edges: Edge[]) {\r\n        const merged_vertices = merge(this.vertices().map(v => v[v.length - 1] as unknown as Vertex), vertices);\r\n        const merged_edges = merge(this.edges().map(e => e[e.length - 1] as unknown as Edge), edges);\r\n        this.loadData(merged_vertices, merged_edges);\r\n        return this;\r\n    }\r\n}\r\n","import { Table } from \"@hpcc-js/dgrid\";\r\n\r\nexport type Address = [string, string, string];\r\nexport type Company = [string, string, Address[], number, number, any];\r\nexport type Person = [string, Address[], number, number, any];\r\n\r\nexport class CompanyTable extends Table {\r\n\r\n    constructor() {\r\n        super();\r\n        this.columns([\"Name\", \"Duns\", { label: \"Address\", columns: [\"Country\", \"Locality\", \"Region\", \"PostalCode\"] }, \"Direct Ownership\", \"Implied Ownership\"]);\r\n    }\r\n\r\n    loadData(data: Company[]) {\r\n        this.data(data);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class PersonTable extends Table {\r\n\r\n    constructor() {\r\n        super();\r\n        this.columns([\"Name\", { label: \"Address\", columns: [\"Country\", \"Locality\", \"Region\", \"PostalCode\"] }, \"Direct Ownership\", \"Implied Ownership\"]);\r\n    }\r\n\r\n    loadData(data: Person[]) {\r\n        this.data(data);\r\n        return this;\r\n    }\r\n}\r\n","import { JSONEditor } from \"@hpcc-js/codemirror\";\r\n\r\nexport class DataEditor extends JSONEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","import { Graph2 } from \"@hpcc-js/util\";\r\n//@ts-ignore\r\nimport devData from \"./data/bmw_pretty.json\";\r\n\r\nexport { devData };\r\nexport type RawDataT = typeof devData;\r\n\r\nexport type VertexType = \"company\" | \"person\";\r\n\r\nexport interface Vertex {\r\n    type: VertexType;\r\n    id: number;\r\n    name: string;\r\n    centroid: boolean;\r\n    neighbors?: {\r\n        company: number,\r\n        person: number\r\n    },\r\n    payload: any;\r\n}\r\n\r\nexport interface Edge {\r\n    type: \"relationship\",\r\n    id: number;\r\n    sourceID: number;\r\n    targetID: number;\r\n    weight: number;\r\n    payload: any;\r\n}\r\n\r\nclass GraphContainer extends Graph2<Vertex, Edge> {\r\n\r\n    constructor() {\r\n        super();\r\n        this\r\n            .idFunc(d => d.id)\r\n            .sourceFunc(d => d.sourceID)\r\n            .targetFunc(d => d.targetID)\r\n            ;\r\n    }\r\n}\r\n\r\nexport class GraphDB {\r\n\r\n    protected _graph: GraphContainer;\r\n    protected _centroids: Vertex[] = [];\r\n\r\n    constructor() {\r\n        this._graph = new GraphContainer();\r\n    }\r\n\r\n    load(rawData: RawDataT) {\r\n        this._graph.clear();\r\n        rawData?.organization?.beneficialOwnership?.beneficialOwners?.forEach(row => {\r\n            this._graph.addVertex({\r\n                type: !!row.duns ? \"company\" : \"person\",\r\n                id: row.memberID,\r\n                name: row.name,\r\n                centroid: row.duns === rawData.inquiryDetail.duns,\r\n                payload: row\r\n            });\r\n        });\r\n        rawData?.organization?.beneficialOwnership?.relationships?.forEach(row => {\r\n            this._graph.addEdge({\r\n                type: \"relationship\",\r\n                id: row.relationshipID,\r\n                sourceID: row.sourceMemberID,\r\n                targetID: row.targetMemberID,\r\n                weight: row.sharePercentage ?? 0,\r\n                payload: row\r\n            });\r\n        });\r\n        this.updateNeighbors();\r\n        return this;\r\n    }\r\n\r\n    subgraph(memberID?: number, depth: number = 1) {\r\n        const retVal = new GraphContainer();\r\n        const vertices = this._graph.vertices();\r\n        const edges = this._graph.edges();\r\n        const roots = memberID ? vertices.filter(row => row.id === memberID) : vertices.filter(row => row.centroid);\r\n        roots.forEach(root => {\r\n            retVal.addVertex(root);\r\n            let queue = [root];\r\n            let level = 0;\r\n            while (queue.length && level < depth) {\r\n                const nextLevel = [];\r\n                queue.forEach(v => {\r\n                    edges.forEach(e => {\r\n                        let target: Vertex;\r\n                        if (e.sourceID === v.id) {\r\n                            target = this._graph.vertex(e.targetID);\r\n                        } else if (e.targetID === v.id) {\r\n                            target = this._graph.vertex(e.sourceID);\r\n                        }\r\n                        if (target) {\r\n                            if (!retVal.vertexExists(target.id)) {\r\n                                retVal.addVertex(target);\r\n                                nextLevel.push(target);\r\n                            }\r\n                            if (!retVal.edgeExists(e.id)) {\r\n                                retVal.addEdge(e);\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n                queue = nextLevel;\r\n                level++;\r\n            }\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    companies() {\r\n        return this._graph.vertices()\r\n            .filter(row => row.type === \"company\")\r\n            ;\r\n    }\r\n\r\n    people() {\r\n        return this._graph.vertices()\r\n            .filter(row => row.type === \"person\")\r\n            ;\r\n    }\r\n\r\n    updateNeighbors() {\r\n        this._graph.vertices().forEach(v => {\r\n            v.neighbors = {\r\n                company: 0,\r\n                person: 0\r\n            };\r\n            this._graph.neighbors(v.id).forEach(n => {\r\n                switch (n.type) {\r\n                    case \"company\":\r\n                        ++v.neighbors.company;\r\n                        break;\r\n                    case \"person\":\r\n                        ++v.neighbors.person;\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    vertices(): Vertex[] {\r\n        return this._graph.vertices();\r\n    }\r\n\r\n    edges(): Edge[] {\r\n        return this._graph.edges();\r\n    }\r\n}\r\n","import { devData, GraphDB, RawDataT } from \"./graphdb\";\r\n\r\nexport { Edge, Vertex, VertexType, RawDataT } from \"./graphdb\";\r\n\r\nlet m_rawData = devData;\r\nconst db = new GraphDB()\r\n    .load(m_rawData)\r\n    ;\r\n\r\nexport function rawData(): RawDataT;\r\nexport function rawData(_?: RawDataT): void;\r\nexport function rawData(_?: RawDataT): RawDataT | void {\r\n    if (!arguments.length) return m_rawData;\r\n    m_rawData = _;\r\n    db.load(_);\r\n}\r\n\r\nexport function fetchGraph(memberID?: number, depth: number = 1) {\r\n    const subgraph = db.subgraph(memberID, depth);\r\n    return Promise.resolve({\r\n        vertices: subgraph.vertices(),\r\n        edges: subgraph.edges()\r\n    });\r\n}\r\n\r\nexport function fetchCompanies() {\r\n    return Promise.resolve(db.companies());\r\n}\r\n\r\nexport function fetchPeople() {\r\n    return Promise.resolve(db.people());\r\n}\r\n","import { DockPanel } from \"@hpcc-js/phosphor\";\r\nimport { MainGraph, MainSankey } from \"./graph\";\r\nimport { Company, Person, CompanyTable, PersonTable } from \"./table\";\r\nimport { DataEditor } from \"./editor\";\r\nimport { fetchCompanies, fetchGraph, fetchPeople, rawData, RawDataT } from \"../server\";\r\n\r\n//  Dock Panel ---\r\nexport class Dashboard extends DockPanel {\r\n\r\n    // protected _data = new DataWrangler();\r\n    protected _mainGraph = new MainGraph()\r\n        .on(\"vertex_dblclick\", (row, col, sel) => {\r\n            this.fetchGraph(row.id);\r\n        })\r\n        ;\r\n\r\n    protected _mainSankey = new MainSankey()\r\n        .on(\"dblclick\", (row, col, sel) => {\r\n            this.fetchGraph(row.id);\r\n        })\r\n        ;\r\n\r\n    protected _companyTable = new CompanyTable()\r\n        .on(\"click\", () => this.tableSelection(this._companyTable.selection()))\r\n        ;\r\n\r\n    protected _personTable = new PersonTable()\r\n        .on(\"click\", () => this.tableSelection(this._personTable.selection()))\r\n        ;\r\n\r\n    protected _dataEditor = new DataEditor().json(rawData());\r\n\r\n    constructor(target: string) {\r\n        super();\r\n\r\n        this\r\n            .target(target)\r\n            .addWidget(this._mainGraph, \"Graph\")\r\n            .addWidget(this._companyTable, \"Companies\", \"split-bottom\", this._mainGraph)\r\n            .addWidget(this._mainSankey, \"Sankey\", \"tab-after\", this._mainGraph)\r\n            .addWidget(this._personTable, \"People\", \"tab-after\", this._companyTable)\r\n            .addWidget(this._dataEditor, \"Data (paste here!!!)\", \"tab-after\", this._personTable)\r\n            .render()\r\n            ;\r\n\r\n        this._dataEditor.on(\"changes\", () => {\r\n            rawData(this._dataEditor.json() as RawDataT);\r\n            this.reset();\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        fetchCompanies().then(companies => {\r\n            this._companyTable\r\n                .loadData(companies.map((row): Company => {\r\n                    return [row.name, row.payload.duns, [[row.payload.address?.addressCountry?.name, row.payload.address?.addressLocality?.name, row.payload.address?.postalCode]], row.payload.directOwnershipPercentage, row.payload.impliedDirectOwnershipPercentage, row];\r\n                }))\r\n                ;\r\n        });\r\n\r\n        fetchPeople().then(people => {\r\n            this._personTable\r\n                .loadData(people.map((row): Person => {\r\n                    return [row.name, [[row.payload.address?.addressCountry?.name, row.payload.address?.addressLocality?.name, row.payload.address?.postalCode]], row.payload.directOwnershipPercentage, row.payload.impliedDirectOwnershipPercentage, row];\r\n                }));\r\n        });\r\n\r\n        this._mainGraph.resetLayout();\r\n        fetchGraph().then(graph => {\r\n            this._mainGraph\r\n                .loadData(graph.vertices, graph.edges)\r\n                ;\r\n\r\n            this._mainSankey\r\n                .loadData(graph.vertices, graph.edges)\r\n                ;\r\n\r\n            this.lazyRender();\r\n        });\r\n    }\r\n\r\n    fetchGraph(id: number) {\r\n        fetchGraph(id, 1).then(graph => {\r\n            this._mainGraph\r\n                .mergeData(graph.vertices, graph.edges)\r\n                .resetLayout()\r\n                .lazyRender()\r\n                ;\r\n            this._mainSankey\r\n                .mergeData(graph.vertices, graph.edges)\r\n                .lazyRender()\r\n                ;\r\n        });\r\n    }\r\n\r\n    tableSelection(selection: any) {\r\n        if (selection.length) {\r\n            this._mainGraph\r\n                .selection([selection[0].__lparam])\r\n                .centerOnItem(selection[0].__lparam.id)\r\n                ;\r\n        }\r\n    }\r\n}\r\n","import { Dashboard } from \"./dashboard\";\r\n\r\nconst app = new Dashboard(\"placeholder\").lazyRender();\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    app\r\n        .resize()\r\n        .lazyRender()\r\n        ;\r\n});\r\n"],"names":["React","Utility","TextBox","Icon","DataGraph","SankeyGraph","Table","JSONEditor","Graph2","DockPanel"],"mappings":";;;;;IAOO,MAAM,YAAY,GAA+C,CAAC,EACrE,UAAU,GAAG,EAAE,EACf,IAAI,GAAG,EAAE,EACT,UAAU,GAAG,EAAE,EACf,WAAW,GAAG,CAAC,EACf,IAAI,GAAG,EAAE,EACT,iBAAiB,GAAG,EAAE,EACtB,aAAa,GAAG,EAAE,EAClB,QAAQ,GAAG,SAAS,EACpB,WAAW,GAAG,OAAO,EACrB,aAAa,GAAG,SAAS,EACzB,cAAc,GAAG,SAAS,EAC1B,SAAS,GAAG,IAAI,EAChB,QAAQ,GAAG,EAAE,EAChB;;QACG,MAAM,kBAAkB,GAAG,CAAC,CAAC;QAC7B,MAAM,YAAY,GAAG,CAAC,CAAC;QACvB,MAAM,aAAa,GAAG,CAAC,CAAC;QAExB,IAAI,GAAG;YACH,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,GAAG;YACd,eAAe,EAAE,aAAa;YAC9B,aAAa,EAAE,SAAS;YACxB,IAAI,EAAE,aAAa;YACnB,WAAW,EAAE,CAAC;YACd,GAAG,IAAI;SACV,CAAC;QAEF,MAAM,OAAO,GAAGA,WAAK,CAAC,OAAO,CAAC;;YAC1B,OAAO;gBACH,IAAI,EAAE,EAAE,IAAI,CAAC,MAAA,MAAA,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,0CAAE,SAAS,0CAAE,OAAO,mCAAI,CAAC,KAAK,MAAA,MAAA,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,0CAAE,SAAS,0CAAE,MAAM,mCAAI,CAAC,CAAC,IAAI,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,mCAAI,CAAC,CAAC,CAAC;gBACxI,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,SAAS;aACtB,CAAC;SACL,EAAE,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,EAAE,MAAA,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,0CAAE,SAAS,0CAAE,OAAO,EAAE,MAAA,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,0CAAE,SAAS,0CAAE,MAAM,CAAC,CAAC,CAAC;QAC3G,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAE5B,MAAM,WAAW,GAAG,CAAC,CAAC;QAEtB,MAAM,UAAU,GAAGA,WAAK,CAAC,OAAO,CAAC;YAC7B,OAAOC,cAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC;SAC1E,EAAE,CAAC,IAAI,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;QAEvC,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,IAAI,KAAK,EAAE,EAAE;YACb,eAAe,GAAG,UAAU,IAAI,WAAW,GAAG,CAAC,CAAC,IAAI,kBAAkB,GAAG,CAAC,CAAC,CAAC;SAC/E;QACD,mBAAmB,IAAI,eAAe,CAAC;QACvC,MAAM,WAAW,GAAG,mBAAmB,IAAI,eAAe,GAAG,CAAC,CAAC,CAAC;QAEhE,MAAM,eAAe,GAAG,UAAU,IAAI,WAAW,GAAG,CAAC,CAAC,IAAI,kBAAkB,GAAG,CAAC,CAAC,CAAC;QAClF,MAAM,WAAW,GAAGD,WAAK,CAAC,OAAO,CAAC;YAC9B,OAAOA,iCAAG,SAAS,EAAE,aAAa,WAAW,IAAI,WAAW,GAAG,IAC1D,CAAC,SAAS,IAAI,IAAI,KAAK,EAAE;gBACtBA,sCAAQ,CAAC,EAAE,aAAa,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,GAAI;gBACnEA;oBACIA,0BAACE,aAAO,IACJ,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,UAAU,EAClB,OAAO,EAAE,WAAW,EACpB,WAAW,EAAE,kBAAkB,EAC/B,MAAM,EAAE,aAAa,EACrB,IAAI,EAAE,WAAW,EACjB,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,cAAc,EAC1B,YAAY,EAAE,YAAY,GAC5B,CACH,CAEP,CAAC;SACR,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC;QAElH,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QACrC,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;QAC9C,MAAM,WAAW,GAAG,CAAC,CAAC;QACtB,IAAI,WAAW,GAAG,CAAC,CAAC;QAEpB,MAAM,cAAc,GAAG,CAAC,CAAC;QACzB,IAAI,cAAc,GAAG,eAAe,CAAC;QAErC,IAAI,IAAI,KAAK,EAAE,EAAE;YACb,WAAW,GAAG,EAAG,UAAU,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,IAAI,eAAe,GAAG,CAAC,CAAC,CAAC;SAChF;aAAM,IAAI,OAAO,CAAC,IAAI,KAAK,EAAE,EAAE;YAC5B,cAAc,GAAG,CAAC,UAAU,GAAG,CAAC,IAAI,eAAe,CAAC;SACvD;QAED,MAAM,cAAc,GAAGF,WAAK,CAAC,OAAO,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI;YACjEA,iCAAG,SAAS,EAAE,aAAa,cAAc,IAAI,cAAc,GAAG;gBAC1DA,0BAACE,aAAO,IACJ,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,SAAS,EAC/B,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,QAAQ,KAClC,OAAO,EACX,MAAM,EAAE,UAAU,EAClB,OAAO,EAAE,WAAW,EACpB,WAAW,EAAE,CAAC,EACd,MAAM,EAAE,aAAa,EACrB,UAAU,EAAE,cAAc,EAC1B,YAAY,EAAE,YAAY,GAC5B,CACF,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC;QACvG,OAAOF;YACHA,iCAAG,SAAS,EAAE,aAAa,WAAW,IAAI,WAAW,GAAG;gBACpDA,0BAACG,UAAI,OAAK,IAAI,GAAI,CAClB;YACJH,iCAAG,SAAS,EAAE,aAAa,CAAC,mBAAmB,GAAG,CAAC,IAAI,WAAW,GAAG,IAChE,WAAW,CACZ;YACH,cAAc,CACf,CAAC;IACT,CAAC,CAAC;IAEK,MAAM,oBAAoB,GAA+C,UAAU,EACtF,UAAU,GAAG,EAAE,EACf,IAAI,GAAG,EAAE,EACT,IAAI,GAAG,EAAE,EACT,iBAAiB,GAAG,EAAE,EACtB,aAAa,GAAG,EAAE,EAClB,UAAU,GAAG,EAAE,EACf,WAAW,GAAG,EAAE,EAChB,QAAQ,GAAG,SAAS,EACpB,WAAW,GAAG,OAAO,EACrB,aAAa,GAAG,SAAS,EACzB,cAAc,GAAG,SAAS,EAC1B,QAAQ,GAAG,EAAE,EAChB;QACG,IAAI,GAAG;YACH,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,aAAa,EAAE,SAAS;YACxB,eAAe,EAAE,aAAa;YAC9B,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,GAAG;YACd,WAAW,EAAE,CAAC;YACd,OAAO,EAAE,CAAC,EAAE;YACZ,GAAG,IAAI;SACV,CAAC;QACF,MAAM,KAAK,GAAG;YACV,UAAU;YACV,IAAI;YACJ,IAAI;YACJ,iBAAiB;YACjB,aAAa;YACb,UAAU;YACV,WAAW;YACX,QAAQ;YACR,WAAW;YACX,aAAa;YACb,cAAc;YACd,QAAQ;SACX,CAAC;QACF,OAAOA,0BAAC,YAAY,OACZ,KAAK,EACT,IAAI,EAAE,IAAI,GACZ,CAAC;IACP,CAAC;;IC/JD,MAAM,UAAU,GAAG,CAAC,IAAgB;QAEhC,QAAQ,IAAI;YACR,KAAK,SAAS;gBACV,OAAO,aAAa,CAAC;YACzB,KAAK,QAAQ;gBACT,OAAO,SAAS,CAAC;SACxB;QACD,OAAO,GAAG,CAAC;IACf,CAAC,CAAC;IAEF,SAAS,MAAM,CAAI,GAAyB;QACxC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,SAAS,KAAK,CAA2B,MAAW,EAAE,MAAW;QAC7D,MAAM,IAAI,GAAwB,EAAE,CAAC;QACrC,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,GAAG,MAAM,CAAC,EAAE;YACpC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAClB;QACD,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;UAEY,SAAU,SAAQI,eAAS;QAEpC;YACI,KAAK,EAAE,CAAC;YACR,IAAI;iBACC,aAAa,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;iBAC1F,kBAAkB,CAAC,QAAQ,CAAC;iBAC5B,cAAc,CAAC,IAAI,CAAC;iBACpB,iBAAiB,CAAC,MAAM,CAAC;iBACzB,oBAAoB,CAAC,UAAU,CAAC;iBAChC,cAAc,CAAC,YAAmB,CAAC;iBACnC,gBAAgB,CAAC,oBAA2B,CAAC;iBAC7C,WAAW,CAAC,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;iBAC3E,YAAY,CAAC,IAAI,CAAC;iBAClB,gBAAgB,CAAC,UAAU,CAAC;iBAC5B,gBAAgB,CAAC,UAAU,CAAC;iBAC5B,eAAe,CAAC,QAAQ,CAAC;iBACzB,YAAY,CAAC,EAAE,CAAC;iBAChB,WAAW,CAAC,IAAI,CAAC;iBACjB,MAAM,CAAC,qBAAqB,CAAC;iBAC7B,iBAAiB,CAAC,IAAI,CAAC;iBACvB,+BAA+B,CAAC,IAAI,CAAC;iBACrC,kBAAkB,CAAC,KAAK,CAAC;iBACzB,aAAa,CAAC,IAAI,CAAC;iBACnB,UAAU,CAAC,0EAA0E,CAAC,CACtF;SACR;QAED,SAAS,CAAC,CAAS,EAAE,KAAa;YAC9B,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,CAAQ,CAAC,CAAC;SAC7I;QAED,OAAO,CAAC,CAAO;YACX,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,CAAQ,CAAC,CAAC;SACjE;QAED,QAAQ,CAAC,QAAkB,EAAE,KAAa;YACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC;SACf;QAED,SAAS,CAAC,QAAkB,EAAE,KAAa;YACvC,MAAM,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAsB,CAAC,EAAE,QAAQ,CAAC,CAAC;YACxG,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAoB,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7F,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,UAAW,SAAQC,iBAAW;QACvC;YACI,KAAK,EAAE,CAAC;YACR,IAAI;iBACC,aAAa,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;iBAChD,cAAc,CAAC,IAAI,CAAC;iBACpB,iBAAiB,CAAC,MAAM,CAAC;iBACzB,oBAAoB,CAAC,MAAM,CAAC;iBAC5B,WAAW,CAAC,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;iBAChE,YAAY,CAAC,IAAI,CAAC;;iBAElB,gBAAgB,CAAC,UAAU,CAAC;iBAC5B,gBAAgB,CAAC,UAAU,CAAC;iBAC5B,gBAAgB,CAAC,QAAQ,CAAC;iBAC1B,aAAa,CAAC,EAAE,CAAC,CACjB;SACR;QAED,QAAQ,CAAC,QAAkB,EAAE,KAAa;YACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAU,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,GAAU,CAAC,CAAC,CAAC,CAAC;YAC3F,OAAO,IAAI,CAAC;SACf;QAED,SAAS,CAAC,QAAkB,EAAE,KAAa;YACvC,MAAM,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAsB,CAAC,EAAE,QAAQ,CAAC,CAAC;YACxG,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAoB,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7F,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;;;UCpGQ,YAAa,SAAQC,WAAK;QAEnC;YACI,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC,EAAE,EAAE,kBAAkB,EAAE,mBAAmB,CAAC,CAAC,CAAC;SAC3J;QAED,QAAQ,CAAC,IAAe;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChB,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,WAAY,SAAQA,WAAK;QAElC;YACI,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC,EAAE,EAAE,kBAAkB,EAAE,mBAAmB,CAAC,CAAC,CAAC;SACnJ;QAED,QAAQ,CAAC,IAAc;YACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChB,OAAO,IAAI,CAAC;SACf;;;UC3BQ,UAAW,SAAQC,qBAAU;QACtyBL,MAAM,cAAe,SAAQC,WAAoB;QAE7C;YACI,KAAK,EAAE,CAAC;YACR,IAAI;iBACC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;iBACjB,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;iBAC3B,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAC3B;SACR;KACJ;UAEY,OAAO;QAKhB;YAFU,eAAU,GAAa,EAAE,CAAC;YAGhC,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;SACtC;QAED,IAAI,CAAC,OAAiB;;YAClB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACpB,MAAA,MAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,0CAAE,mBAAmB,0CAAE,gBAAgB,0CAAE,OAAO,CAAC,GAAG;gBACrE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;oBAClB,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,SAAS,GAAG,QAAQ;oBACvC,EAAE,EAAE,GAAG,CAAC,QAAQ;oBAChB,IAAI,EAAE,GAAG,CAAC,IAAI;oBACd,QAAQ,EAAE,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,aAAa,CAAC,IAAI;oBACjD,OAAO,EAAE,GAAG;iBACf,CAAC,CAAC;aACN,CAAC,CAAC;YACH,MAAA,MAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,0CAAE,mBAAmB,0CAAE,aAAa,0CAAE,OAAO,CAAC,GAAG;;gBAClE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;oBAChB,IAAI,EAAE,cAAc;oBACpB,EAAE,EAAE,GAAG,CAAC,cAAc;oBACtB,QAAQ,EAAE,GAAG,CAAC,cAAc;oBAC5B,QAAQ,EAAE,GAAG,CAAC,cAAc;oBAC5B,MAAM,EAAE,MAAA,GAAG,CAAC,eAAe,mCAAI,CAAC;oBAChC,OAAO,EAAE,GAAG;iBACf,CAAC,CAAC;aACN,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;QAED,QAAQ,CAAC,QAAiB,EAAE,QAAgB,CAAC;YACzC,MAAM,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;YACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACxC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAClC,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,QAAQ,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC5G,KAAK,CAAC,OAAO,CAAC,IAAI;gBACd,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACvB,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;gBACnB,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,OAAO,KAAK,CAAC,MAAM,IAAI,KAAK,GAAG,KAAK,EAAE;oBAClC,MAAM,SAAS,GAAG,EAAE,CAAC;oBACrB,KAAK,CAAC,OAAO,CAAC,CAAC;wBACX,KAAK,CAAC,OAAO,CAAC,CAAC;4BACX,IAAI,MAAc,CAAC;4BACnB,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,EAAE,EAAE;gCACrB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;6BAC3C;iCAAM,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,EAAE,EAAE;gCAC5B,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;6BAC3C;4BACD,IAAI,MAAM,EAAE;gCACR,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;oCACjC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oCACzB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iCAC1B;gCACD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;oCAC1B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iCACrB;6BACJ;yBACJ,CAAC,CAAC;qBACN,CAAC,CAAC;oBACH,KAAK,GAAG,SAAS,CAAC;oBAClB,KAAK,EAAE,CAAC;iBACX;aACJ,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACjB;QAED,SAAS;YACL,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;iBACxB,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,CACrC;SACR;QAED,MAAM;YACF,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;iBACxB,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,CACpC;SACR;QAED,eAAe;YACX,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC;gBAC5B,CAAC,CAAC,SAAS,GAAG;oBACV,OAAO,EAAE,CAAC;oBACV,MAAM,EAAE,CAAC;iBACZ,CAAC;gBACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;oBACjC,QAAQ,CAAC,CAAC,IAAI;wBACV,KAAK,SAAS;4BACV,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC;4BACtB,MAAM;wBACV,KAAK,QAAQ;4BACT,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;4BACrB,MAAM;qBACb;iBACJ,CAAC,CAAC;aACN,CAAC,CAAC;SACN;QAED,QAAQ;YACJ,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;SACjC;QAED,KAAK;YACD,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SAC9B;;;IClJL,IAAI,SAAS,GAAG,OAAO,CAAC;IACxB,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE;SACnB,IAAI,CAAC,SAAS,CAAC,CACf;aAIW,OAAO,CAAC,CAAY;QAChC,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO,SAAS,CAAC;QACxC,SAAS,GAAG,CAAC,CAAC;QACd,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACf,CAAC;aAEe,UAAU,CAAC,QAAiB,EAAE,QAAgB,CAAC;QAC3D,MAAM,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC9C,OAAO,OAAO,CAAC,OAAO,CAAC;YACnB,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE;YAC7B,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE;SAC1B,CAAC,CAAC;IACP,CAAC;aAEe,cAAc;QAC1B,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC;IAC3C,CAAC;aAEe,WAAW;QACvB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;IACxC;;ICzBA;UACa,SAAU,SAAQC,kBAAS;QAyBpC,YAAY,MAAc;YACtB,KAAK,EAAE,CAAC;;YAvBF,eAAU,GAAG,IAAI,SAAS,EAAE;iBACjC,EAAE,CAAC,iBAAiB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;gBACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;aAC3B,CAAC,CACD;YAEK,gBAAW,GAAG,IAAI,UAAU,EAAE;iBACnC,EAAE,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;gBAC1B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;aAC3B,CAAC,CACD;YAEK,kBAAa,GAAG,IAAI,YAAY,EAAE;iBACvC,EAAE,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,CACtE;YAEK,iBAAY,GAAG,IAAI,WAAW,EAAE;iBACrC,EAAE,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC,CACrE;YAEK,gBAAW,GAAG,IAAI,UAAU,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;YAKrD,IAAI;iBACC,MAAM,CAAC,MAAM,CAAC;iBACd,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC;iBACnC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC;iBAC3E,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC;iBACnE,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC;iBACvE,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,sBAAsB,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC;iBACnF,MAAM,EAAE,CACR;YAEL,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,SAAS,EAAE;gBAC3B,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAc,CAAC,CAAC;gBAC7C,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB,CAAC,CAAC;SACN;QAED,KAAK;YACD,cAAc,EAAE,CAAC,IAAI,CAAC,SAAS;gBAC3B,IAAI,CAAC,aAAa;qBACb,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG;;oBACxB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,MAAA,MAAA,GAAG,CAAC,OAAO,CAAC,OAAO,0CAAE,cAAc,0CAAE,IAAI,EAAE,MAAA,MAAA,GAAG,CAAC,OAAO,CAAC,OAAO,0CAAE,eAAe,0CAAE,IAAI,EAAE,MAAA,GAAG,CAAC,OAAO,CAAC,OAAO,0CAAE,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,yBAAyB,EAAE,GAAG,CAAC,OAAO,CAAC,gCAAgC,EAAE,GAAG,CAAC,CAAC;iBAC7P,CAAC,CAAC,CACF;aACR,CAAC,CAAC;YAEH,WAAW,EAAE,CAAC,IAAI,CAAC,MAAM;gBACrB,IAAI,CAAC,YAAY;qBACZ,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG;;oBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,MAAA,MAAA,GAAG,CAAC,OAAO,CAAC,OAAO,0CAAE,cAAc,0CAAE,IAAI,EAAE,MAAA,MAAA,GAAG,CAAC,OAAO,CAAC,OAAO,0CAAE,eAAe,0CAAE,IAAI,EAAE,MAAA,GAAG,CAAC,OAAO,CAAC,OAAO,0CAAE,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,yBAAyB,EAAE,GAAG,CAAC,OAAO,CAAC,gCAAgC,EAAE,GAAG,CAAC,CAAC;iBAC3O,CAAC,CAAC,CAAC;aACX,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YAC9B,UAAU,EAAE,CAAC,IAAI,CAAC,KAAK;gBACnB,IAAI,CAAC,UAAU;qBACV,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CACrC;gBAEL,IAAI,CAAC,WAAW;qBACX,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CACrC;gBAEL,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB,CAAC,CAAC;SACN;QAED,UAAU,CAAC,EAAU;YACjB,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;gBACxB,IAAI,CAAC,UAAU;qBACV,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC;qBACtC,WAAW,EAAE;qBACb,UAAU,EAAE,CACZ;gBACL,IAAI,CAAC,WAAW;qBACX,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC;qBACtC,UAAU,EAAE,CACZ;aACR,CAAC,CAAC;SACN;QAED,cAAc,CAAC,SAAc;YACzB,IAAI,SAAS,CAAC,MAAM,EAAE;gBAClB,IAAI,CAAC,UAAU;qBACV,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;qBAClC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CACtC;aACR;SACJ;;;ICpGL,MAAM,GAAG,GAAG,IAAI,SAAS,CAAC,aAAa,CAAC,CAAC,UAAU,EAAE,CAAC;IAEtD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;QAC9B,GAAG;aACE,MAAM,EAAE;aACR,UAAU,EAAE,CACZ;IACT,CAAC,CAAC;;;;"}