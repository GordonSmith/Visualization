{"version":3,"file":"undefined.js","sources":["src/pem/trustwave.ts","src/__package__.ts","../../node_modules/tslib/tslib.es6.mjs","src/connection.ts","src/espConnection.ts","src/services/wsdl/FileSpray/v1.26/FileSpray.ts","src/services/fileSpray.ts","src/services/wsdl/ws_access/v1.17/ws_access.ts","src/services/wsAccess.ts","src/services/wsdl/ws_account/v1.06/ws_account.ts","src/services/wsAccount.ts","src/services/wsdl/WsCloud/v1/WsCloud.ts","src/services/wsCloud.ts","src/services/wsCodesign.ts","src/services/wsdl/WsDali/v1.07/WsDali.ts","src/services/wsDali.ts","src/services/wsdl/WsDfu/v1.65/WsDfu.ts","src/services/wsDFU.ts","src/services/wsDFUXRef.ts","src/services/wsEcl.ts","src/services/wsdl/ws_elk/v1/ws_elk.ts","src/services/wsElk.ts","src/services/wsdl/ws_logaccess/v1.05/ws_logaccess.ts","src/services/wsLogaccess.ts","../../node_modules/d3-array/src/ascending.js","../../node_modules/d3-array/src/bisector.js","../../node_modules/d3-array/src/bisect.js","../../node_modules/d3-array/src/number.js","../../node_modules/d3-array/src/max.js","../../node_modules/d3-array/src/mean.js","src/services/wsdl/ws_machine/v1.17/ws_machine.ts","src/services/wsMachine.ts","src/services/wsdl/WsPackageProcess/v1.04/WsPackageProcess.ts","src/services/wsPackageProcess.ts","src/services/wsdl/WsResources/v1.01/WsResources.ts","src/services/wsResources.ts","src/services/wsdl/WsSasha/v1.01/WsSasha.ts","src/services/wsSasha.ts","src/services/wsdl/WsSMC/v1.27/WsSMC.ts","src/services/wsSMC.ts","src/services/wsStore.ts","src/services/wsdl/WsTopology/v1.32/WsTopology.ts","src/services/wsTopology.ts","src/services/wsdl/WsWorkunits/v2/WsWorkunits.ts","src/services/wsWorkunits.ts","../../node_modules/d3-format/src/formatDecimal.js","../../node_modules/d3-format/src/exponent.js","../../node_modules/d3-format/src/formatGroup.js","../../node_modules/d3-format/src/formatNumerals.js","../../node_modules/d3-format/src/formatSpecifier.js","../../node_modules/d3-format/src/formatTrim.js","../../node_modules/d3-format/src/formatPrefixAuto.js","../../node_modules/d3-format/src/formatRounded.js","../../node_modules/d3-format/src/formatTypes.js","../../node_modules/d3-format/src/identity.js","../../node_modules/d3-format/src/locale.js","../../node_modules/d3-format/src/defaultLocale.js","../../node_modules/d3-time/src/interval.js","../../node_modules/d3-time/src/duration.js","../../node_modules/d3-time/src/day.js","../../node_modules/d3-time/src/week.js","../../node_modules/d3-time/src/year.js","../../node_modules/d3-time/src/utcDay.js","../../node_modules/d3-time/src/utcWeek.js","../../node_modules/d3-time/src/utcYear.js","../../node_modules/d3-time-format/src/locale.js","../../node_modules/d3-time-format/src/defaultLocale.js","src/ecl/graph.ts","src/ecl/resource.ts","src/ecl/xsdParser.ts","src/ecl/result.ts","src/ecl/scope.ts","src/ecl/sourceFile.ts","src/ecl/timer.ts","src/ecl/workunit.ts","src/ecl/activity.ts","src/ecl/logicalFile.ts","src/ecl/machine.ts","src/ecl/targetCluster.ts","src/ecl/topology.ts","src/ecl/queryGraph.ts","src/ecl/query.ts","src/ecl/store.ts","src/ecl/dfuWorkunit.ts","src/clienttools/eclMeta.ts","src/clienttools/eclcc.ts","src/index.node.ts"],"sourcesContent":["export const trustwave = `\r\nTrustwave Secure Global Extended Validation CA, Level 1\r\nSecureTrust Corporation\r\n00F6F61CE4A3635BB0CA8AACEEFCB2D0F0\r\n-----BEGIN CERTIFICATE-----\r\nMIIE+DCCA+CgAwIBAgIRAPb2HOSjY1uwyoqs7vyy0PAwDQYJKoZIhvcNAQELBQAw\r\nSjELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1NlY3VyZVRydXN0IENvcnBvcmF0aW9u\r\nMRkwFwYDVQQDExBTZWN1cmUgR2xvYmFsIENBMB4XDTE1MDgxMjIwMTcyOVoXDTI1\r\nMDgwOTIwMTcyOVowgbgxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhJbGxpbm9pczEQ\r\nMA4GA1UEBxMHQ2hpY2FnbzEhMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJ\r\nbmMuMUAwPgYDVQQDEzdUcnVzdHdhdmUgU2VjdXJlIEdsb2JhbCBFeHRlbmRlZCBW\r\nYWxpZGF0aW9uIENBLCBMZXZlbCAxMR8wHQYJKoZIhvcNAQkBFhBjYUB0cnVzdHdh\r\ndmUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx6D45slgLGq8\r\n2G/NPFnuFscv7UM1eRoQyx3h0DdSTfoRvHkkNv4Gf6OudZDOXqwV86v/SjcNEP87\r\nnjMOEqQ7dKQPtiYzEkK0MOrjbRySFC5dvCTI9T8tnBgFpYA9YXwbpUqXxEi0Ayoq\r\nhA7UQhS7Q+YGrVwZaJ6LiWrQw+x8ACPLqEvPmMZhrxagKwrsKbylMsAQ1ljk8X74\r\nJ76TSxi/AZpxos7tHD0XbO8elXFZexfsgPLDRpMs6jREVeQj1jVCWLtg9twiXzcI\r\naUCchBsTSc92WGkKwBnH70dlL2N8kT/BNe3tAsXuBpZRILANY59jLrLnHEJNfado\r\nt6ZpougolQIDAQABo4IBaDCCAWQwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4E\r\nFgQUx33qXRmrVNT6P+ZKc956sjwdbC4wDgYDVR0PAQH/BAQDAgGGMD0GA1UdIAQ2\r\nMDQwMgYEVR0gADAqMCgGCCsGAQUFBwIBFhxodHRwczovL3NzbC50cnVzdHdhdmUu\r\nY29tL0NBMDIGA1UdHwQrMCkwJ6AloCOGIWh0dHA6Ly9jcmwudHJ1c3R3YXZlLmNv\r\nbS9TR0NBLmNybDBsBggrBgEFBQcBAQRgMF4wJQYIKwYBBQUHMAGGGWh0dHA6Ly9v\r\nY3NwLnRydXN0d2F2ZS5jb20wNQYIKwYBBQUHMAKGKWh0dHA6Ly9zc2wudHJ1c3R3\r\nYXZlLmNvbS9pc3N1ZXJzL1NHQ0EuY3J0MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggr\r\nBgEFBQcDATAfBgNVHSMEGDAWgBSvRATCQX5Ig9tOOQLs7IR65s7JpDANBgkqhkiG\r\n9w0BAQsFAAOCAQEAkn/4wKQRLo41fDRkZtfF+3o8JtUmfQXf2zoo9Ll29hhCiz8k\r\nBOpIek9MrFd/cdNgUw1nckIi+J3udyFrbO5p64JBvtc0K4kAOPFSKpHssFcnRLPx\r\nFXgGxXq6ohD4Py+xaEApslYFfMy89N6DKs/v/10/+/xD831RFEUMUoQxBimsmmNf\r\n+cLoMwF5bpoSz9JcWqCmSlK0Nla1dPphaoA/MObLN2iQPpeM3yF5dTUm1tPxe39W\r\nOlr6nLU1xO+yRDrlGLXrVDP1l1/qGVuwi+xufIAcdFycLLBjSSNX7LOIK3tbva7A\r\nWctLUs+qhIlUrbPyFERm7YOY4SttWdozeYFNfg==\r\n-----END CERTIFICATE-----\r\n\r\nSecureTrust Domain Validation CA, Level 1\r\nSecureTrust Corporation\r\n06F1EC00E80B1BAF9870A7C4B6CBE401A32D68\r\n-----BEGIN CERTIFICATE-----\r\nMIIEfzCCA2egAwIBAgITBvHsAOgLG6+YcKfEtsvkAaMtaDANBgkqhkiG9w0BAQsF\r\nADBIMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRp\r\nb24xFzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTE5MDEyOTEyNTk1OVoXDTI5\r\nMDEyOTEyNTk1OVowfDEyMDAGA1UEAxMpU2VjdXJlVHJ1c3QgRG9tYWluIFZhbGlk\r\nYXRpb24gQ0EsIExldmVsIDExFDASBgNVBAoTC1NlY3VyZVRydXN0MRAwDgYDVQQH\r\nEwdDaGljYWdvMREwDwYDVQQIEwhJbGxpbm9pczELMAkGA1UEBhMCVVMwggEiMA0G\r\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCjRHBw8iIivBBrfE6HqexQK0oMt2Y/\r\nx8jO3fN96KEazZwEoGidwloRBk2Q7VfVvZ0ZDk+qwJZGLZJLS1ntGaZLH4/Iel+r\r\nPnp36IVF7J5MNDB+K81a/y9svEMfDu0p3FdlBUyhHvizZ/zFNP3tolmQfZ7T0mGL\r\n7lutlNAzFYoVTUlVeF5cSC8Yca906TEKyizYXuXcY8Diee+t+fQRHmSI5Hk5kyXD\r\nYFWcf2tXEfdkuFlDjJ7HPdFyfJzrNjD+cbqt8R5rZKnK1GNVP1dXm0cIYS+BMlMa\r\nCC1yF18oygbnOZLw5fDv9bxs4MOgF8E/Iypw0hLQHVkuD8wAvxVgPsqvAgMBAAGj\r\nggEsMIIBKDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjATBgNV\r\nHSUEDDAKBggrBgEFBQcDATAdBgNVHQ4EFgQUYt6tehfefLfDfCMXo7Em5UbXOvQw\r\nHwYDVR0jBBgwFoAUQjK2FvoE/f5dS3rD/fdMQB1aQ68wQQYDVR0gBDowODA2BgRV\r\nHSAAMC4wLAYIKwYBBQUHAgEWIGh0dHBzOi8vY2VydHMuc2VjdXJldHJ1c3QuY29t\r\nL0NBMDIGA1UdHwQrMCkwJ6AloCOGIWh0dHA6Ly9jcmwudHJ1c3R3YXZlLmNvbS9T\r\nVENBLmNybDA2BggrBgEFBQcBAQQqMCgwJgYIKwYBBQUHMAGGGmh0dHA6Ly9vY3Nw\r\nLnRydXN0d2F2ZS5jb20vMA0GCSqGSIb3DQEBCwUAA4IBAQAHXPYhl+++o//di2Qm\r\naWGmC1ijxbGbKA4jOSDRvQfxlWOVkqPF11Dpxz+V8Rxw7QFFVoJ5mHpfoXtQOijV\r\ntsCFknxTKgzQeArNkZrkXBNpYOJAcuc5v0eX0OllBWgVdIvZRl2TM5L/u1WFrlPr\r\nqwWdEYTkinQwgAHXVV/7WZi6c4StcqNnlw93mlvN6Vspzaf/mWtcYp+aqT9vrqHt\r\nyNR1k8Ri5eIRPIU0B8woiXTj3bifLg6/O217SY5cWwQKCMFsa6nGWoRVCJ0JJXa0\r\nZ+m3mPQD2OcW5YMrynhL2VWohyfZAjB8l/NZaeRT7M+vki56fxbx3Bk2lqy8Z1Zz\r\nWd5m\r\n-----END CERTIFICATE-----\r\n\r\nSecureTrust Extended Validation CA, Level 1\r\nSecureTrust Corporation\r\n06F1EC00E31E46D341B2B2633CE480D915F81D\r\n-----BEGIN CERTIFICATE-----\r\nMIIEizCCA3OgAwIBAgITBvHsAOMeRtNBsrJjPOSA2RX4HTANBgkqhkiG9w0BAQsF\r\nADBIMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRp\r\nb24xFzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTE5MDEyOTEyNTk1OVoXDTI5\r\nMDEyOTEyNTk1OVowfjE0MDIGA1UEAxMrU2VjdXJlVHJ1c3QgRXh0ZW5kZWQgVmFs\r\naWRhdGlvbiBDQSwgTGV2ZWwgMTEUMBIGA1UEChMLU2VjdXJlVHJ1c3QxEDAOBgNV\r\nBAcTB0NoaWNhZ28xETAPBgNVBAgTCElsbGlub2lzMQswCQYDVQQGEwJVUzCCASIw\r\nDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANS6vRtFpCJBJ7zJODH07Y3k54Qn\r\nVIBhnQmmWoqFqzCVMX97GAyAfzjcQrhl/TNiJiRCrVQWPI4n0R8eUd91Ab1Qzfsr\r\nnp+0NRbagVDa6+nF0KcNxbSZ6/iZQ7Ac3HyhCvJS2rH2CVYlzqdsrxDXcZk69jOO\r\ndPV8+w+7eNIn34BKpB/ZF7iXApDoAKG81kg1VtpGOxJhxTsKLuJmURT4pQjtZqF+\r\nF6rN64j5T2DOK0gOA4G7BLoTdOQuXkPS38LXKgZ43lKqEenjmiOaMF/XuLYzaHrW\r\nGYgCM2wJsykgdB9hCsTTEwsHRZzt2q9mLBDvYYWVhql1/kR4K/RN4JdESEECAwEA\r\nAaOCATYwggEyMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQDAgGGMB0G\r\nA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAdBgNVHQ4EFgQUA6uAxlUKKpWh\r\n4Nf+GubAynjMsJYwHwYDVR0jBBgwFoAUQjK2FvoE/f5dS3rD/fdMQB1aQ68wQQYD\r\nVR0gBDowODA2BgRVHSAAMC4wLAYIKwYBBQUHAgEWIGh0dHBzOi8vY2VydHMuc2Vj\r\ndXJldHJ1c3QuY29tL0NBMDIGA1UdHwQrMCkwJ6AloCOGIWh0dHA6Ly9jcmwudHJ1\r\nc3R3YXZlLmNvbS9TVENBLmNybDA2BggrBgEFBQcBAQQqMCgwJgYIKwYBBQUHMAGG\r\nGmh0dHA6Ly9vY3NwLnRydXN0d2F2ZS5jb20vMA0GCSqGSIb3DQEBCwUAA4IBAQB1\r\nfzAmGGmtbJyIvOfjq2McCpUoYkXAq6JTN51+nb9NDAihhDoTKMde+801bC1/l54h\r\nxPPm4HImM6GK6LFckDew/FGwbdRbEznUOJ7uVL5ploNBIjte23kTBUZa9fx3+aXK\r\nhUTAipSyPtNjnOwVVBVXzrMynfMhdsyRRe7gLXNFYCXIxtks3IkIpuYnc86NAuV9\r\nnBLFlZzgmbAsW+tMc5QsNvQJ9pQ539K8cqZaM+HFCScreDERxmNtHHbMw+hCa2yL\r\nOj4ntekgWLO8KQbE0lPUNLIM17QK8aktJavj+GezBztKMmJJwhVYQy9nxS388ApX\r\nxcZsEgIzOCeH0SOWg4FA\r\n-----END CERTIFICATE-----\r\n\r\nSecureTrust Organization Validation CA, Level 1\r\nSecureTrust Corporation\r\n06F1EC00E58E9ADD372C871D25843FDAB852D9\r\n-----BEGIN CERTIFICATE-----\r\nMIIEkDCCA3igAwIBAgITBvHsAOWOmt03LIcdJYQ/2rhS2TANBgkqhkiG9w0BAQsF\r\nADBIMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRp\r\nb24xFzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTE5MDEyOTEyNTk1OVoXDTI5\r\nMDEyOTEyNTk1OVowgYIxODA2BgNVBAMTL1NlY3VyZVRydXN0IE9yZ2FuaXphdGlv\r\nbiBWYWxpZGF0aW9uIENBLCBMZXZlbCAxMRQwEgYDVQQKEwtTZWN1cmVUcnVzdDEQ\r\nMA4GA1UEBxMHQ2hpY2FnbzERMA8GA1UECBMISWxsaW5vaXMxCzAJBgNVBAYTAlVT\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4QVBCdYToXFIfzd1SQfi\r\nTEgg1bwHXM2cE2VsyxwWK8NEFH8zMYdKy2hYOAjbfpm0xE6q4TQzS8KL2vAtCNyY\r\nVrwX7d3IvKR25H5s1LUDeQXSl1JBBZCtgJf2caJcwaYa6n2pZ0EKt3wBB+QteSFn\r\n57ENB37T13y7Nn8gCt9ZZaPYqRWxHcPaIWO3CVzQZ3tXjCLqzJMCV2KqhK85DZk3\r\nwo33Zb6cyYDkerDbWyric+10dJ/wdgE49dkfyZxVxEGpHg1SCSJdHjGb4z85Zx/u\r\neBpxBS6g3dfrkDjjT3MUxyNS4EaRTZp7o/2EqVCYDWJDM1HcOZL64kyWyi0d9jqA\r\n7wIDAQABo4IBNjCCATIwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMC\r\nAYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMB0GA1UdDgQWBBR/QuNI\r\nbljpLrlhyGp3tPcDuM1qWjAfBgNVHSMEGDAWgBRCMrYW+gT9/l1LesP990xAHVpD\r\nrzBBBgNVHSAEOjA4MDYGBFUdIAAwLjAsBggrBgEFBQcCARYgaHR0cHM6Ly9jZXJ0\r\ncy5zZWN1cmV0cnVzdC5jb20vQ0EwMgYDVR0fBCswKTAnoCWgI4YhaHR0cDovL2Ny\r\nbC50cnVzdHdhdmUuY29tL1NUQ0EuY3JsMDYGCCsGAQUFBwEBBCowKDAmBggrBgEF\r\nBQcwAYYaaHR0cDovL29jc3AudHJ1c3R3YXZlLmNvbS8wDQYJKoZIhvcNAQELBQAD\r\nggEBAIwGM/ejz4Hbjf7Vc11gS8jzf+BwtZq9N4t1Nibj4rIDsW2G2jDE0S7fCN2m\r\nMhq76xkfnwfXhBbXDEKz6rj/M0G2u1kHw4Y8ZtKSzYEyRtgpeBFm4qU6voCSREpD\r\nFJXsL+Go2/YLRSE6xkWVSocklxppx4hi5o/RVdMMQept6ooOSFzBpH5XZYUoblKi\r\n99Yj0FUe8egIa9qSts42TObTpH1YVRMDnH3k2MNX3rcgPf9v/QO9Cf8W6RQ2+X3R\r\nCaYMPdL5OIKh4RGYjxXe3LpgiTKBWik/ZWTFL5sZSjetrJFl50NONzTc8E+BJtrx\r\nVCHAI2OcWyloxrYd4zMipw0YjDw=\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Domain Validation SHA256 CA, Level 1\r\nSecureTrust Corporation\r\n00DDEDF6F64298490E694C36EFA422C88F\r\n-----BEGIN CERTIFICATE-----\r\nMIIE7jCCA9agAwIBAgIRAN3t9vZCmEkOaUw276QiyI8wDQYJKoZIhvcNAQELBQAw\r\nSDELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1NlY3VyZVRydXN0IENvcnBvcmF0aW9u\r\nMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTAeFw0xNDEwMDExOTIyMzJaFw0yNDA5\r\nMjgxOTIyMzJaMIGvMQswCQYDVQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAO\r\nBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5j\r\nLjE3MDUGA1UEAxMuVHJ1c3R3YXZlIERvbWFpbiBWYWxpZGF0aW9uIFNIQTI1NiBD\r\nQSwgTGV2ZWwgMTEfMB0GCSqGSIb3DQEJARYQY2FAdHJ1c3R3YXZlLmNvbTCCASIw\r\nDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALNr4Z91k7AKM+Pz5XXWTIuVeMts\r\nPU2W/pI4WdEHG9Zab1EOWPLbthB6fzUJLLLBBk1wy2OM9yG1HywB/CwfGHcoKS8Z\r\n/efGV+ZKTzEpIestriUWx7wUnzxKzGML48Xv7sNuY1Crru5Hgce1Ax5uOfP7OB6t\r\norbMunvKQC10WcSrqFg6LapZ0UhgGmQzdjYguOBF6WZJR3QLghQaNrSUZuA6neXR\r\ncUsBgmzrxiEVHyzt+lmnYFMFvKVwGOyIZ2RU2LAFthS6UDDrSLGsJysxc1MK1Sti\r\n/VP8e8wj9rJdmiWNfA+lz6hDAPzRbv+WVJNoHEGbIx8rai+rVMiLy2HIbPsCAwEA\r\nAaOCAWkwggFlMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPQc4jqvtqTk\r\n2emd/u8cd6VjPe+IMA4GA1UdDwEB/wQEAwIBhjBIBgNVHSAEQTA/MD0GDysGAQQB\r\nge0YAwMDAwQFAzAqMCgGCCsGAQUFBwIBFhxodHRwczovL3NzbC50cnVzdHdhdmUu\r\nY29tL0NBMDIGA1UdHwQrMCkwJ6AloCOGIWh0dHA6Ly9jcmwudHJ1c3R3YXZlLmNv\r\nbS9TVENBLmNybDBsBggrBgEFBQcBAQRgMF4wJQYIKwYBBQUHMAGGGWh0dHA6Ly9v\r\nY3NwLnRydXN0d2F2ZS5jb20wNQYIKwYBBQUHMAKGKWh0dHA6Ly9zc2wudHJ1c3R3\r\nYXZlLmNvbS9pc3N1ZXJzL1NUQ0EuY3J0MBMGA1UdJQQMMAoGCCsGAQUFBwMBMB8G\r\nA1UdIwQYMBaAFEIythb6BP3+XUt6w/33TEAdWkOvMA0GCSqGSIb3DQEBCwUAA4IB\r\nAQAjoDrTysopn7t+onDZ6rZSQW8rYlWZQpSiNHrq9xAAcMExrhcN0bQC9OQ+VRci\r\noMDascvwum7hVkyh2w2Ad7lC3Ir9gIuA8HycjqQJ4t1eSF3geYyf8lp259ztZ/TO\r\nxSAwJ9W0Szc8fslOA0SWlyA3lnRVcYVu54Idc1dPXXBxwlQ1NUCYgcsXZs+6QjLL\r\nYhYL85DhuitQSddoYemGpfVJnaYH9tBiWmwtzwc4qsVqTsKEJ/1zYAy2GrEAv8sB\r\nFKSfMNMopBmmDA8/aCIW/tH6KTD2DC15QQwL6yAUbSa5mhzFSA9O8zmF881YwBVG\r\nn+z3isMPClgpNw/eWSbaSLZ+\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Domain Validation SHA256 CA, Level 1\r\nSecureTrust Corporation\r\n390A3F7EECA8FB4347DCAF701861662B\r\n-----BEGIN CERTIFICATE-----\r\nMIIE/zCCA+egAwIBAgIQOQo/fuyo+0NH3K9wGGFmKzANBgkqhkiG9w0BAQsFADBI\r\nMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x\r\nFzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTE2MDkwMTE0MzUzMloXDTI0MDky\r\nOTE0MzUzMlowga8xCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhJbGxpbm9pczEQMA4G\r\nA1UEBxMHQ2hpY2FnbzEhMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJbmMu\r\nMTcwNQYDVQQDEy5UcnVzdHdhdmUgRG9tYWluIFZhbGlkYXRpb24gU0hBMjU2IENB\r\nLCBMZXZlbCAxMR8wHQYJKoZIhvcNAQkBFhBjYUB0cnVzdHdhdmUuY29tMIIBIjAN\r\nBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs2vhn3WTsAoz4/PlddZMi5V4y2w9\r\nTZb+kjhZ0Qcb1lpvUQ5Y8tu2EHp/NQksssEGTXDLY4z3IbUfLAH8LB8YdygpLxn9\r\n58ZX5kpPMSkh6y2uJRbHvBSfPErMYwvjxe/uw25jUKuu7keBx7UDHm458/s4Hq2i\r\ntsy6e8pALXRZxKuoWDotqlnRSGAaZDN2NiC44EXpZklHdAuCFBo2tJRm4Dqd5dFx\r\nSwGCbOvGIRUfLO36WadgUwW8pXAY7IhnZFTYsAW2FLpQMOtIsawnKzFzUwrVK2L9\r\nU/x7zCP2sl2aJY18D6XPqEMA/NFu/5ZUk2gcQZsjHytqL6tUyIvLYchs+wIDAQAB\r\no4IBezCCAXcwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU9BziOq+2pOTZ\r\n6Z3+7xx3pWM974gwDgYDVR0PAQH/BAQDAgGGMDIGA1UdHwQrMCkwJ6AloCOGIWh0\r\ndHA6Ly9jcmwudHJ1c3R3YXZlLmNvbS9TVENBLmNybDA9BgNVHSAENjA0MDIGBFUd\r\nIAAwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly9zc2wudHJ1c3R3YXZlLmNvbS9DQTBs\r\nBggrBgEFBQcBAQRgMF4wJQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnRydXN0d2F2\r\nZS5jb20wNQYIKwYBBQUHMAKGKWh0dHA6Ly9zc2wudHJ1c3R3YXZlLmNvbS9pc3N1\r\nZXJzL1NUQ0EuY3J0MBMGA1UdJQQMMAoGCCsGAQUFBwMBMB8GA1UdIwQYMBaAFEIy\r\nthb6BP3+XUt6w/33TEAdWkOvMBsGA1UdEQQUMBKBEGNhQHRydXN0d2F2ZS5jb20w\r\nDQYJKoZIhvcNAQELBQADggEBAFcdG0/3P/CkeGb76tz/mn1viDZiftD05i9Jw70k\r\nH9ulRwdCHgzhSZVN5zHvG919oHA9WHbxH04J+iAnVl1+FjoDNN+A+2icy2WXqH9w\r\ngaNUGyUwLdo0JCfgUeGbrCF6WUYCj47pS7zAY02CdGlstZZsqouXK3RnOMKOD3Dq\r\nf5kiSh56KvhW/F0OZY7PAbdV79LVAiSTiAFdoe/jMjmj8fqXOiCIjllqH/O9/DAm\r\nRwQStFpauwR+nBbFhq4sYwlZQvJ0NvIxN5JOTECTkMM+X21kf8mrwRdxBfw0YEPa\r\nUTeZhFr48Fwvnt4jpo7gqpJzt7jjsbWPd1FHtey2Q8zmSHY=\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Extended Validation SHA256 CA, Level 1\r\nSecureTrust Corporation\r\n00C1BD27B383958D0D8BCA5E4F08D009D9\r\n-----BEGIN CERTIFICATE-----\r\nMIIFGDCCBACgAwIBAgIRAMG9J7ODlY0Ni8peTwjQCdkwDQYJKoZIhvcNAQELBQAw\r\nSDELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1NlY3VyZVRydXN0IENvcnBvcmF0aW9u\r\nMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTAeFw0xNDEwMTMxODE3MzlaFw0yNDEw\r\nMTAxODE3MzlaMIGxMQswCQYDVQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAO\r\nBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5j\r\nLjE5MDcGA1UEAxMwVHJ1c3R3YXZlIEV4dGVuZGVkIFZhbGlkYXRpb24gU0hBMjU2\r\nIENBLCBMZXZlbCAxMR8wHQYJKoZIhvcNAQkBFhBjYUB0cnVzdHdhdmUuY29tMIIB\r\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAre9mHLqiv689FWIk7PaeQLuW\r\nos8ldRX4rNLHeD7/X7JrTfaXuIQaLfrUODtyRaZs0LtJsEHgpr7dUonDIH69PjBP\r\nrHg+hBLu7ob4udEx3J03NQSdnR/fqPY0ZMH2NP7e9TFSKKctZ/SmzA8jGclVmdiT\r\nGg1bTx6xgWuPWq9OprIQSgkP5NRe1GeTQ7U/E1zxLqaw6PeQWjESHPGeilyw0jr6\r\nqVyHM5ack9ps60sN3CKNGushyaQe3w2bYxRJ9RRH/sILCAmmTbjc/cXrGQMGdaYt\r\naiGnXbc45r39cqfbynZ71hPPNEtFbOdqk3C7I8vrhIHiKaAtFkTMRSWmHHk4HwID\r\nAQABo4IBkTCCAY0wEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU5eQkWRUy\r\nJ8kgs0ICbLDvMt6bIFowDgYDVR0PAQH/BAQDAgGGMGYGA1UdIARfMF0wDAYKKwYB\r\nBAGB7RgDADAOBgxghkgBhv1kAQECBAEwPQYPKwYBBAGB7RgDAwMDBAMDMCowKAYI\r\nKwYBBQUHAgEWHGh0dHBzOi8vc3NsLnRydXN0d2F2ZS5jb20vQ0EwMgYDVR0fBCsw\r\nKTAnoCWgI4YhaHR0cDovL2NybC50cnVzdHdhdmUuY29tL1NUQ0EuY3JsMGwGCCsG\r\nAQUFBwEBBGAwXjAlBggrBgEFBQcwAYYZaHR0cDovL29jc3AudHJ1c3R3YXZlLmNv\r\nbTA1BggrBgEFBQcwAoYpaHR0cDovL3NzbC50cnVzdHdhdmUuY29tL2lzc3VlcnMv\r\nU1RDQS5jcnQwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMB8GA1UdIwQY\r\nMBaAFEIythb6BP3+XUt6w/33TEAdWkOvMA0GCSqGSIb3DQEBCwUAA4IBAQCly1p1\r\nrvcOlRS+ODBLb2kYHd4q+cXDl65X+IQ7hOlXg9dpa7CzSAGNNpzhyYMbE48mB/RE\r\nBXxbZkMzEhWPFj+4jdGNsmX0zjEWatJWsnNVxpA7hDR0iZssezu86oDQ/sbVoaXj\r\n0a5jB2cZsnMS5287CNDk5i+ImruhbMAYV9sadliXoDy3y01Sv+FLMx39C5UhYhWU\r\ngvoT9igbSCoc/DPOukEDqsnKMmDqTf3JzuFI1CbJcR6M8R1hAda4mZrxIdGcbT8R\r\nXp8JQ8Vuv/+plPMcAiZ2Bzed0hPVr5A1Mz8K8w9OyORGlRwjWS65jsr26bjMCcfj\r\npvuAANrc0Alu4nJC\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Extended Validation SHA256 CA, Level 1\r\nSecureTrust Corporation\r\n35962F305C5A0BEC400D4E9877528C65\r\n-----BEGIN CERTIFICATE-----\r\nMIIFCzCCA/OgAwIBAgIQNZYvMFxaC+xADU6Yd1KMZTANBgkqhkiG9w0BAQsFADBI\r\nMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x\r\nFzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTE2MDkwMTE0MzUzNFoXDTI0MDky\r\nOTE0MzUzNFowgbExCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhJbGxpbm9pczEQMA4G\r\nA1UEBxMHQ2hpY2FnbzEhMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJbmMu\r\nMTkwNwYDVQQDEzBUcnVzdHdhdmUgRXh0ZW5kZWQgVmFsaWRhdGlvbiBTSEEyNTYg\r\nQ0EsIExldmVsIDExHzAdBgkqhkiG9w0BCQEWEGNhQHRydXN0d2F2ZS5jb20wggEi\r\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCt72YcuqK/rz0VYiTs9p5Au5ai\r\nzyV1Ffis0sd4Pv9fsmtN9pe4hBot+tQ4O3JFpmzQu0mwQeCmvt1SicMgfr0+ME+s\r\neD6EEu7uhvi50THcnTc1BJ2dH9+o9jRkwfY0/t71MVIopy1n9KbMDyMZyVWZ2JMa\r\nDVtPHrGBa49ar06mshBKCQ/k1F7UZ5NDtT8TXPEuprDo95BaMRIc8Z6KXLDSOvqp\r\nXIczlpyT2mzrSw3cIo0a6yHJpB7fDZtjFEn1FEf+wgsICaZNuNz9xesZAwZ1pi1q\r\nIaddtzjmvf1yp9vKdnvWE880S0Vs52qTcLsjy+uEgeIpoC0WRMxFJaYceTgfAgMB\r\nAAGjggGFMIIBgTASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTl5CRZFTIn\r\nySCzQgJssO8y3psgWjAOBgNVHQ8BAf8EBAMCAYYwMgYDVR0fBCswKTAnoCWgI4Yh\r\naHR0cDovL2NybC50cnVzdHdhdmUuY29tL1NUQ0EuY3JsMD0GA1UdIAQ2MDQwMgYE\r\nVR0gADAqMCgGCCsGAQUFBwIBFhxodHRwczovL3NzbC50cnVzdHdhdmUuY29tL0NB\r\nMGwGCCsGAQUFBwEBBGAwXjAlBggrBgEFBQcwAYYZaHR0cDovL29jc3AudHJ1c3R3\r\nYXZlLmNvbTA1BggrBgEFBQcwAoYpaHR0cDovL3NzbC50cnVzdHdhdmUuY29tL2lz\r\nc3VlcnMvU1RDQS5jcnQwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMB8G\r\nA1UdIwQYMBaAFEIythb6BP3+XUt6w/33TEAdWkOvMBsGA1UdEQQUMBKBEGNhQHRy\r\ndXN0d2F2ZS5jb20wDQYJKoZIhvcNAQELBQADggEBAGUMIDkrvlMJ0wHLuP3lkneC\r\nwGU6mZ3g17jyU2RJwhRinYctraryG7Jh20DQ9/ppTHoxTIADw2JDsC5ByplabteQ\r\nnLghrl17K1b6PO+rzWA/NFKVwo6u8Gh7Lz0iUuit7ZBD4eKcRedxRZcPQlnD9KTR\r\nIs94SRpootsuCv/Y5b+1FMPV1KrYtbco9yEVlaNEWLpmiEsqvLjxiWEmt71rzz+0\r\nS59OtA/ihnbGP9Xrnhe7wf1ybCNOO5gZQMKr/OszfLZ7oVKACGOPLlcSZRRW98gA\r\nszE+1ZvlHkdjamfTSs4yMvUorYn9NhXnjAWl28NuD9m3FPiE2O50ezEDnHTiaOQ=\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Organization Validation SHA256 CA, Level 1\r\nSecureTrust Corporation\r\n4B2C6646F434775B67DF34A04DD504E6\r\n-----BEGIN CERTIFICATE-----\r\nMIIE/TCCA+WgAwIBAgIQSyxmRvQ0d1tn3zSgTdUE5jANBgkqhkiG9w0BAQsFADBI\r\nMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x\r\nFzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTE0MTAwMTE5MjIzNloXDTI0MDky\r\nODE5MjIzNlowgbUxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhJbGxpbm9pczEQMA4G\r\nA1UEBxMHQ2hpY2FnbzEhMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJbmMu\r\nMT0wOwYDVQQDEzRUcnVzdHdhdmUgT3JnYW5pemF0aW9uIFZhbGlkYXRpb24gU0hB\r\nMjU2IENBLCBMZXZlbCAxMR8wHQYJKoZIhvcNAQkBFhBjYUB0cnVzdHdhdmUuY29t\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA49OohlJHBJ/juiQTmibO\r\nS28pHvCCp1bPOc6elQ62DCYE/A14JXUtI8yaUc9nFjh6dNzR7KjFPEq/qDplQl7f\r\n1Tvh5ifBNNP2wQ6e820TWlPO4HhR/5g4+3iFmJ1N7kFrxDp1/P8e3+9lcJsXckXC\r\ntfFkQ9slogJqnaCsipgdrH4gQhicFAL5YqHw2AKfctZLSPpxhI3xISMV/lIQwZPW\r\nI2221v9ALckokh5pW6dTK8x8yNUUye1zt5msWzqunfBjVYVUj5/LXu46hS99Mfxu\r\n80ARJRyHsXIuHbMzwVXGqKVPZfKAdHBl5e3ElCjNwNy+Hgi09vS7PoAUhjCf/wbO\r\nnQIDAQABo4IBczCCAW8wEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUys4d\r\nGAN3HhzzfFiymnCoCIAW9K4wDgYDVR0PAQH/BAQDAgGGMEgGA1UdIARBMD8wPQYP\r\nKwYBBAGB7RgDAwMDBAQDMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vc3NsLnRydXN0\r\nd2F2ZS5jb20vQ0EwMgYDVR0fBCswKTAnoCWgI4YhaHR0cDovL2NybC50cnVzdHdh\r\ndmUuY29tL1NUQ0EuY3JsMGwGCCsGAQUFBwEBBGAwXjAlBggrBgEFBQcwAYYZaHR0\r\ncDovL29jc3AudHJ1c3R3YXZlLmNvbTA1BggrBgEFBQcwAoYpaHR0cDovL3NzbC50\r\ncnVzdHdhdmUuY29tL2lzc3VlcnMvU1RDQS5jcnQwHQYDVR0lBBYwFAYIKwYBBQUH\r\nAwIGCCsGAQUFBwMBMB8GA1UdIwQYMBaAFEIythb6BP3+XUt6w/33TEAdWkOvMA0G\r\nCSqGSIb3DQEBCwUAA4IBAQBN/Qb6x5VSQHIt/FqvXAkjfCI7jwXGzRoxThavUqv0\r\npJr1azXKv2L2ye9Sl4OCqiDHZ8ZJZ/Z19Ae1yvGTpG++0O5dWTHZ8qy/JSj17Mg1\r\nvWiefVpJKtkYflzhC9B9/eB3QuKVTRKDqm1ZC9kbm3MWOwtnEOw4WURWS1X2v4Hv\r\n2AJaXe11ZRqjx7/c6U50tYp3eVpRDCw7bOIXRffLG0oibhjHiEu8dgq7KkTSrx9m\r\nQFS6T2x9GLiJKhj2mEfPuGr73TfBPyKsRBymOpG67LThKVnwoUfH3pghA6VkZp5Z\r\n1Vm6AcDm+eelf5XPvZtNve4evLVPYueA3TmGyxXh1m2d\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Organization Validation SHA256 CA, Level 1\r\nSecureTrust Corporation\r\n0092B8744F71CED0E26C72A3D8D5D925B2\r\n-----BEGIN CERTIFICATE-----\r\nMIIFEDCCA/igAwIBAgIRAJK4dE9xztDibHKj2NXZJbIwDQYJKoZIhvcNAQELBQAw\r\nSDELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1NlY3VyZVRydXN0IENvcnBvcmF0aW9u\r\nMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTAeFw0xNjA5MDExNDM1MzVaFw0yNDA5\r\nMjkxNDM1MzVaMIG1MQswCQYDVQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAO\r\nBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5j\r\nLjE9MDsGA1UEAxM0VHJ1c3R3YXZlIE9yZ2FuaXphdGlvbiBWYWxpZGF0aW9uIFNI\r\nQTI1NiBDQSwgTGV2ZWwgMTEfMB0GCSqGSIb3DQEJARYQY2FAdHJ1c3R3YXZlLmNv\r\nbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOPTqIZSRwSf47okE5om\r\nzktvKR7wgqdWzznOnpUOtgwmBPwNeCV1LSPMmlHPZxY4enTc0eyoxTxKv6g6ZUJe\r\n39U74eYnwTTT9sEOnvNtE1pTzuB4Uf+YOPt4hZidTe5Ba8Q6dfz/Ht/vZXCbF3JF\r\nwrXxZEPbJaICap2grIqYHax+IEIYnBQC+WKh8NgCn3LWS0j6cYSN8SEjFf5SEMGT\r\n1iNtttb/QC3JKJIeaVunUyvMfMjVFMntc7eZrFs6rp3wY1WFVI+fy17uOoUvfTH8\r\nbvNAESUch7FyLh2zM8FVxqilT2XygHRwZeXtxJQozcDcvh4ItPb0uz6AFIYwn/8G\r\nzp0CAwEAAaOCAYUwggGBMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMrO\r\nHRgDdx4c83xYsppwqAiAFvSuMA4GA1UdDwEB/wQEAwIBhjAyBgNVHR8EKzApMCeg\r\nJaAjhiFodHRwOi8vY3JsLnRydXN0d2F2ZS5jb20vU1RDQS5jcmwwPQYDVR0gBDYw\r\nNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vc3NsLnRydXN0d2F2ZS5j\r\nb20vQ0EwbAYIKwYBBQUHAQEEYDBeMCUGCCsGAQUFBzABhhlodHRwOi8vb2NzcC50\r\ncnVzdHdhdmUuY29tMDUGCCsGAQUFBzAChilodHRwOi8vc3NsLnRydXN0d2F2ZS5j\r\nb20vaXNzdWVycy9TVENBLmNydDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUH\r\nAwEwHwYDVR0jBBgwFoAUQjK2FvoE/f5dS3rD/fdMQB1aQ68wGwYDVR0RBBQwEoEQ\r\nY2FAdHJ1c3R3YXZlLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAC0OvN7/UJBcRDXch\r\nA4b2qJo7mBD05+XR96N7vucMaanz26CnUxs1o8DcBckpqyEXCxdOanIr+/UJNbBL\r\nXLJCzNLJEJcgV9TjbVu33eQR23yMuXD+cZsqLMF+L5IIM47W8dlwKJvMy0xs7Jb1\r\nS3NOIhcoVu+XPzRsgKv8Yi2B6l278RfzegiCx4vYJv0pBjFzizEiFH9bWTYIOlIJ\r\nJSM57hoICgjCTS8BoEgndwWIyc/nEmlYaUwmCo9QynY+UmW1WPWmVITEJPMdMK6A\r\nZqvvaWmuHJ6/vURaz+Hoc5D3z0yJDDCkv52bXV04ZoF6cbcWry7JvNA+djvay/4B\r\nRR4SZQ==\r\n-----END CERTIFICATE-----\r\n\r\nSecureTrust TWG Secure Email CA, Level 2\r\nTrustwave Holdings, Inc.\r\n072F30E9C25181828DAC4F5F7DE4AFC87AD132\r\n-----BEGIN CERTIFICATE-----\r\nMIIG2zCCBMOgAwIBAgITBy8w6cJRgYKNrE9ffeSvyHrRMjANBgkqhkiG9w0BAQsF\r\nADCBiDELMAkGA1UEBhMCVVMxETAPBgNVBAgMCElsbGlub2lzMRAwDgYDVQQHDAdD\r\naGljYWdvMSEwHwYDVQQKDBhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xMTAvBgNV\r\nBAMMKFRydXN0d2F2ZSBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcN\r\nMjAxMDA4MDY0OTQwWhcNMzAxMDA4MDY0ODQwWjBWMQswCQYDVQQGEwJVUzEUMBIG\r\nA1UEChMLU2VjdXJlVHJ1c3QxMTAvBgNVBAMTKFNlY3VyZVRydXN0IFRXRyBTZWN1\r\ncmUgRW1haWwgQ0EsIExldmVsIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK\r\nAoICAQCcD5Wc7H480gOv3ae6SELBls0oNOvpw1ZFjK55nLw+W6PhgqTGNEHlO/Ga\r\nWt13yS1iO1/WzRaUc2XsFRGcjv3QIfDZb+6UzhL1LL9ZE8zcs0B6fepn4smQg1yK\r\ngtAWGoD70Z9kEBtypkG23sO5xIiRACJWgRWVZ/891pQBBz+ElCxUnIyDGghHlWCD\r\nzn5dLoBIVic69Pfpi384uNoNfHV/WATUQEEnwY+5yMMUALAWrRD6Jeh5R4m9qKxG\r\nUlrO9ObDebK9mFEJvrCPtkTIWT1He4ZD58Lt0NIkaItQ7KsKF9wgwH7BTsRGwQXb\r\nP6/0LvfO8UDRKNE/4C39u9dwUw/Zpu2iNXTadVWBtaSDsrPFVb5rBu+pvn4l4Hw5\r\njtySyHAOWn4mhuxDXMuKBtaoTi/qF94d7N0CbqPdN9WSN79Cy2O0BexTGHSJVndX\r\nEbKyn96b5STPshKVpG9DmUekfnDtnHR9dmH74a05X/A8k/XeSJWXphM6NvyZap2A\r\nWiIkrS7MsfwnCdZlX+9WGY2qHxnm4Y6JdNah0qxozBbQHkqHsSN4k8O7zr2lfZhC\r\nuarm0Q1t6tjsmp7PUh26u6PCe0m+MctIrD6ZckUzZeuPduRb55K2p8MxjQSVNH1S\r\nJ2aaHp77qOYV+rvHXIL7le4OR5lDWyzYtXLc8u17/kLbUtgnmQIDAQABo4IBbTCC\r\nAWkwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwEwYDVR0lBAww\r\nCgYIKwYBBQUHAwQwHQYDVR0OBBYEFKpD9MNsQCriSoEcg6nez7XhG7bOMB8GA1Ud\r\nIwQYMBaAFJngGWcNYtt2s9o9uFvo/ULSMQ6HMEEGA1UdIAQ6MDgwNgYEVR0gADAu\r\nMCwGCCsGAQUFBwIBFiBodHRwczovL2NlcnRzLnNlY3VyZXRydXN0LmNvbS9DQTA1\r\nBgNVHR8ELjAsMCqgKKAmhiRodHRwOi8vY3JsLnNlY3VyZXRydXN0LmNvbS9UV0dD\r\nQS5jcmwwdAYIKwYBBQUHAQEEaDBmMCgGCCsGAQUFBzABhhxodHRwOi8vb2NzcC5z\r\nZWN1cmV0cnVzdC5jb20vMDoGCCsGAQUFBzAChi5odHRwOi8vY2VydHMuc2VjdXJl\r\ndHJ1c3QuY29tL2lzc3VlcnMvVFdHQ0EuY3J0MA0GCSqGSIb3DQEBCwUAA4ICAQBb\r\ntCXryLFewOafyNENB3NzgAQVVztwaWSyvF5FYSqav95JKcoHZzy3wG7aKlTPtGnq\r\n1QzJst03qPmZJ3j63obz2AvfEEzLEMlsPmOTy3B9oIrNzd2QhpGW1oF6pIgGB/VP\r\n5zh7U2ibUC+zRLmihwt+j2+7NBbuLbPozgxDTWh2f9O4rJb5bv98Q8RdbGrypBb9\r\nhOhDvmNCCfjSe+Q8myqsvawEG5p7s8gsIK/V3xbyqDihXjsGc7xeEWNftlU91jBL\r\nKPRbrLmXhhWnHJjYs4y5IHu735HA3aAT4TqURS9dGHOMVDRumkFpLqR2W7ptpDki\r\nOtIFZjO5smU29OD4AlcNUXqQuKEFasyTtkRlORnWhU37c36HB8dc57xWQKOf8pMq\r\n7lK+ublO9G4mO1Aqr9mioTN4oMONFJG4W5dWwG9baNg682ZACkvPaw45MqSztL3A\r\nKb4s2cDTWu/D34hV3oafkTwu8B7B2mFZnWRJ9q4akPmZF45uw4RZx2ALaYGGGs67\r\n+r5qS300As9ONg8hxfVkFQSHOc00IiBkgi3OpoCofEKTgDwZwHVqOJyyPjk6H9Sh\r\nZANmUOT2mGDLwl86Ar5bTu8ipzlsyDYQMFjho7WaVs8I5OXyVdONXDYLIOtpITGT\r\n1fRcXFzxYHhrNuFwrdj2zBVyvVD4O6xV97/9nv2Eng==\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global Domain Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D9AD30465CF22697F246B101EC92953B\r\n-----BEGIN CERTIFICATE-----\r\nMIIHCDCCBPCgAwIBAgITBs6C2a0wRlzyJpfyRrEB7JKVOzANBgkqhkiG9w0BAQsF\r\nADCBiDELMAkGA1UEBhMCVVMxETAPBgNVBAgMCElsbGlub2lzMRAwDgYDVQQHDAdD\r\naGljYWdvMSEwHwYDVQQKDBhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xMTAvBgNV\r\nBAMMKFRydXN0d2F2ZSBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcN\r\nMTgwMjA2MTIyMTIxWhcNMjgwMjI0MDUwMTIxWjCBjjE3MDUGA1UEAxMuVHJ1c3R3\r\nYXZlIEdsb2JhbCBEb21haW4gVmFsaWRhdGlvbiBDQSwgTGV2ZWwgMTEhMB8GA1UE\r\nChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJbmMuMRAwDgYDVQQHEwdDaGljYWdvMREw\r\nDwYDVQQIEwhJbGxpbm9pczELMAkGA1UEBhMCVVMwggIiMA0GCSqGSIb3DQEBAQUA\r\nA4ICDwAwggIKAoICAQChh5brvvk/kFUZwhlUhqdsUmsMCBjzYqBBLnTyNrKPr4nd\r\nS9s2h2JvA+9TY7NnJc/Mq1eN5V6zqvbn/LN3c8W06f76xrVvFEKs5SzCefUS/V3Z\r\nC18dgwXXFrP+RgfK2kqfTHGIPrWoRSnUiLn3iUNEBtJ06oXjAqAMnAyL5AzD+eHm\r\nZzRK/yCw/gMPnVp2S7Dstka607fS4fW9Sl33mOMNwJRxEjQWHHR25PAb4muP6wjN\r\nvmoLMgiDMKseHSFVtC7SpmO89PsrUV6MahKJrZcAfquAyoO1zR2c2eGaCI/m8oSx\r\n3B7KiMZJ3NZims/siMp/5szemsutf36WJ31nmr7PqLJGJdVpoxbLckWIhZnNYSFm\r\n/pTutpNONqpyYC2gGSXdw5LuxU61913SbAPpk8DZiHi3WslHBo26ghXG++sgJUGj\r\nhtKZhiYlp8uD21WTP6/60wngpXyCtt9cpHxW1lXmqcxwe2J4/2S3xjHz1dC6BKxb\r\nr61HCPVrbTD90CZUpMI8JPdsVbz5eegv+SIyybHxZe4S0D9Kv5pgWfqdXf0BAiJC\r\nTbGwYmFr4uisKhkfMThyOgWEH+CRBzQqdZREQ5lTIlVyzi3jGPuu9Q6brAS9U9Ue\r\nQhUwX8TtY8Igfo8HlhjugDpy6WvDYQ9i+tG3AC6v8sJLdOOU83Lr+2C1LEF5ZwID\r\nAQABo4IBYTCCAV0wEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYw\r\nEwYDVR0lBAwwCgYIKwYBBQUHAwEwHQYDVR0OBBYEFIaZQQzOP7aMcEnlkwfwhgcd\r\nLXqVMB8GA1UdIwQYMBaAFJngGWcNYtt2s9o9uFvo/ULSMQ6HMD0GA1UdIAQ2MDQw\r\nMgYEVR0gADAqMCgGCCsGAQUFBwIBFhxodHRwczovL3NzbC50cnVzdHdhdmUuY29t\r\nL0NBMDMGA1UdHwQsMCowKKAmoCSGImh0dHA6Ly9jcmwudHJ1c3R3YXZlLmNvbS9U\r\nV0dDQS5jcmwwbgYIKwYBBQUHAQEEYjBgMCYGCCsGAQUFBzABhhpodHRwOi8vb2Nz\r\ncC50cnVzdHdhdmUuY29tLzA2BggrBgEFBQcwAoYqaHR0cDovL3NzbC50cnVzdHdh\r\ndmUuY29tL2lzc3VlcnMvVFdHQ0EuY3J0MA0GCSqGSIb3DQEBCwUAA4ICAQAmn0jp\r\n+lNp188KxjKQZtpJ3mixLmuqGdH6SVpRs40BYQg/68xOPH3C6AJ17tqE6IwZMW9s\r\nlgiO4B7khR3ESA6Sct3zmkA8woR/KJVzzegjscHhtQUifQ+Eb9Gi0ORNnetGV+5g\r\n5vlrFZMptBRGUxXMo2xa+Z/NTyimpMopfXj7qCW/nQWQbzvkQGchK9IokyqV2wra\r\ntX68/P3zleG+LLwzoJd5AhHYSXWrIRJpClZHN+LQKkbI3MYW7+upo/1e9HEmFKxu\r\n5SFV3nuQm5wSOsz/ZtIL1AS8IoZYxcSe1Q/yuV9GjnxtL1jkPbzsBx4eBGxUrcIe\r\nsBat6SI8G58uHTpIPpqUxRYsg8w0FdjK3kNBB5QWDeXiDxzqIRzA0iE1kHeTXRZ3\r\n7qgGXUcce7ciW5KqeRApjQbD5BSZG2EKkQ7aaOhvxK0LiuxHZnjPW4/fdEcaCuku\r\nMT5qMDiF2U85V9BvanEy/xkYn4I2UeK4EdSXe7q6j+CIJz9WnoLQDbIS04GqIWe0\r\nVRQUlx3idUWYSJU/SG8KrEHhlJLmgSjshCwtT6qo4vHwT5WcWDLIbjMqgL1iQ6JS\r\n4gxXuOGia3d0I4/wec5x23EWwx9V8BtDJ8N7NDeRNmZ8RXOHSYJsVQYIQuFUEXE1\r\nv3WMSIxuyQMyR5FYSCG9xnKRFzNmiPngDil5IA==\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global Extended Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D99FB3B180C281020314A2D1C7640017\r\n-----BEGIN CERTIFICATE-----\r\nMIIHFDCCBPygAwIBAgITBs6C2Z+zsYDCgQIDFKLRx2QAFzANBgkqhkiG9w0BAQsF\r\nADCBiDELMAkGA1UEBhMCVVMxETAPBgNVBAgMCElsbGlub2lzMRAwDgYDVQQHDAdD\r\naGljYWdvMSEwHwYDVQQKDBhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xMTAvBgNV\r\nBAMMKFRydXN0d2F2ZSBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcN\r\nMTgwMjA2MTIyMTIwWhcNMjgwMjI0MDUwMTIwWjCBkDE5MDcGA1UEAxMwVHJ1c3R3\r\nYXZlIEdsb2JhbCBFeHRlbmRlZCBWYWxpZGF0aW9uIENBLCBMZXZlbCAxMSEwHwYD\r\nVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xEDAOBgNVBAcTB0NoaWNhZ28x\r\nETAPBgNVBAgTCElsbGlub2lzMQswCQYDVQQGEwJVUzCCAiIwDQYJKoZIhvcNAQEB\r\nBQADggIPADCCAgoCggIBAMRO7orfWjfmz6Y6qoAmDp2lqCJcdvbRQ8w18rl1JE3j\r\nf/1CScZLrnLg4RDm8JiRcvFuvoMXn/XNUWy5ICG57tjG2nO7jvBuXfvbdkGA+foN\r\n3yJKMTX/PmmGlN4qpzFtsB0kLrP14/0TRGeJB7qDfAFH0ReFk0ftQobLBGBOpEca\r\n+bv+LhcTe40/uNUSK2yQ9GpIw200mcsD3B9c29Im4tSZFuA2o1vnEeizYW5M4sPX\r\nHu7p5ZCxjJrXVNqWUPM38rShhMUNL5uaVYWoi7TG5JXbg0Lmt2nq1k5nnig9Yp/W\r\nlAFooWXjKQzHf/z+XZ57bqPe7SzLW5pzpZdSmY2VRybAwEmzMjCXgHiP2ru3TpAD\r\n+giakPDoz3ZmbKjwYKZ5PmnOmXx0Z2GloO37MjamjPor/+fZohfyma7VAQE8znJt\r\nI9MVoRN3G3gW/tuT3jXfzYdFBlfGoO7OYyLN1LK5YBKH2qXrCHD8rG2DauBt7U+w\r\nfOvwfkp8FcdTnfQ92Xe65U3Xdu0eCgQJbChxZtWhhLnbY6xhmwAWyJ1my+Im72Kx\r\nGP/XcA8SH2sz6/k0782BjRckDuFpVVpTNYl9wqe/tuOrZhWPapOsRlfsDTuhgGu5\r\n2inM9sU3CAzmFE85zoRQFZQSof3kFN2rUZF20bmTak99cBNLli6/ja3+KntpZ08d\r\nAgMBAAGjggFrMIIBZzASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIB\r\nhjAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwHQYDVR0OBBYEFHM4IMZH\r\nbabGL3tQ4EDe3sedR958MB8GA1UdIwQYMBaAFJngGWcNYtt2s9o9uFvo/ULSMQ6H\r\nMD0GA1UdIAQ2MDQwMgYEVR0gADAqMCgGCCsGAQUFBwIBFhxodHRwczovL3NzbC50\r\ncnVzdHdhdmUuY29tL0NBMDMGA1UdHwQsMCowKKAmoCSGImh0dHA6Ly9jcmwudHJ1\r\nc3R3YXZlLmNvbS9UV0dDQS5jcmwwbgYIKwYBBQUHAQEEYjBgMCYGCCsGAQUFBzAB\r\nhhpodHRwOi8vb2NzcC50cnVzdHdhdmUuY29tLzA2BggrBgEFBQcwAoYqaHR0cDov\r\nL3NzbC50cnVzdHdhdmUuY29tL2lzc3VlcnMvVFdHQ0EuY3J0MA0GCSqGSIb3DQEB\r\nCwUAA4ICAQBwnSHECaf+hfGrm3Cg+aRr57ytoOSzI1DjlTNcM7k4uSt6kJRPHJ4c\r\nldIujMaETV52RgE6ykaMGkuIwQOIsLI6SXwjU1f5gXFUbDTS3KTWc/jwQeyLmdOe\r\nhvc+wBSFv8d10Sx/Qiti8mqsTqr0+N94Cx01+SkiWxWWoSZOAPkz8DMQGlD4yndK\r\nceTMGtQ03cLnD/36Mv6tz/Ds9l/OExrJGGxHD0tmYwYwBZpPHm7BBY2ZzycVxLcg\r\n+uuggcX1pg5MhJ1rDyod+7X+ilvTgH7ftHCmxvR7viMLwSUuytZ05zb2teRQgU+8\r\niWnPEHO/ADm5VD1Zb5Rx0579/YEENBJtGUPPJzo+JEpiZIOIlwZ69ETWWNCLZr0V\r\nvoi+SDl65cr+dgR9JreJ2I4W9FzS45ruxYEC8LGKEmV46sAk1YLbnIBmhehAKy9t\r\nP8RVz3QXYJ6rLOAuXF7R2eVV0SqfivW9bVzvBZTUTFsbdSMBAAF1BJjdRqYR63DI\r\ncQASY7CRoUiak1NTgPkzeV8VcNJmUt8c2eKJIifqBAjquH6+6UXs9Ol0aMPn6v0y\r\nB+TSuxhX2sSrpna9QcOh/QyoR5Hvcd81rZSbMc7yasKoUMXviotV1SfEqs3RU5Ts\r\nwnU4NHPn5ITRiuh5VMuvB/VnjnPC953u5uqAGtZ8BkC7X9cu5E0rMQ==\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global Organization Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D9A69703AEFE5D37D18858C74026B004\r\n-----BEGIN CERTIFICATE-----\r\nMIIHGDCCBQCgAwIBAgITBs6C2aaXA67+XTfRiFjHQCawBDANBgkqhkiG9w0BAQsF\r\nADCBiDELMAkGA1UEBhMCVVMxETAPBgNVBAgMCElsbGlub2lzMRAwDgYDVQQHDAdD\r\naGljYWdvMSEwHwYDVQQKDBhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xMTAvBgNV\r\nBAMMKFRydXN0d2F2ZSBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcN\r\nMTgwMjA2MTIyMTIwWhcNMjgwMjI0MDUwMTIwWjCBlDE9MDsGA1UEAxM0VHJ1c3R3\r\nYXZlIEdsb2JhbCBPcmdhbml6YXRpb24gVmFsaWRhdGlvbiBDQSwgTGV2ZWwgMTEh\r\nMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJbmMuMRAwDgYDVQQHEwdDaGlj\r\nYWdvMREwDwYDVQQIEwhJbGxpbm9pczELMAkGA1UEBhMCVVMwggIiMA0GCSqGSIb3\r\nDQEBAQUAA4ICDwAwggIKAoICAQC8BzZtA3eWejFOGHc2DLgex6P471dLWIIHSlrF\r\nY4a2BCtzAd/VlpQ3gslWnTgthOmK2/hCc+WSaOLPVZzZf3lGnxbb0+Y87Kx+nS1m\r\nIfJ/4OR6o8XLMLoCTAI1jsWxggiB4NBMqsW2xXQ5VAvBb66KEQYbshNlRpTbtBFq\r\nEed4YIvCdjbnCUOy1zubgVHUVyCFHzN4XPjEQCtT5vZM576Lt10Je9COnqG0CtPU\r\nQNP2tjnSmOOYdWcVRZ0UqXUl2fMBfmSDHd8902foigjpP04AYYbq6AetqEgqdvQP\r\nxz5pVbZqzy8UrE/s/raJLFyTuIAYVt18M0whSgWzGgUWkq2xRqbfn7b1hd56dwRb\r\nR7pKc51FyTbeocnKlYLC+Dlzp7iKQ3Pb7WHRwLhaJB7u4CzwqhUxHc0xplMYsq92\r\nMbZ6WN5L5mI7hxY8gLMOR7vNX9CKz9XcYRS01iCDe5Y/9muW8bzGyNXLX1YaHAy4\r\n+6ncksb3Y3RUKj3f0+T4nbiRISmGazravJKSssBLP3kPa9h5aX+Vd00eL+Q7sXrh\r\nFO7xz+oWtOL5rfVszyc87JQvjw1sDHA710nViqzUE1bJZNe61EXdCb/RV+Wsu+rO\r\ncAMSr5x2j/wW875sh+U3EJmTzdEBUBxHnBD2mDTyonT7wL47TRXTEO1IaS4mVbnv\r\no0jWvQIDAQABo4IBazCCAWcwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8E\r\nBAMCAYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMB0GA1UdDgQWBBS3\r\n/VNzOCaKcKuTyoupCOrH07fj/TAfBgNVHSMEGDAWgBSZ4BlnDWLbdrPaPbhb6P1C\r\n0jEOhzA9BgNVHSAENjA0MDIGBFUdIAAwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly9z\r\nc2wudHJ1c3R3YXZlLmNvbS9DQTAzBgNVHR8ELDAqMCigJqAkhiJodHRwOi8vY3Js\r\nLnRydXN0d2F2ZS5jb20vVFdHQ0EuY3JsMG4GCCsGAQUFBwEBBGIwYDAmBggrBgEF\r\nBQcwAYYaaHR0cDovL29jc3AudHJ1c3R3YXZlLmNvbS8wNgYIKwYBBQUHMAKGKmh0\r\ndHA6Ly9zc2wudHJ1c3R3YXZlLmNvbS9pc3N1ZXJzL1RXR0NBLmNydDANBgkqhkiG\r\n9w0BAQsFAAOCAgEAFXwfmELpEGKUguzVTMix79XbUnkfLa7IXcqBOrwOWEF1V8F1\r\nxGY6jLlUTtoEXRYZwCpqOK/i4m4nmWCYE45O7URR8nqeFffceTi62t4Yvh6LkC9g\r\nUnj3aChLiO/Zdxilq6vfsXO0mKafrGtZXwjyskS250Pj9DsANs57QqvYN4hqbplJ\r\nzc95p09OUvEhPiyRyx6FyY28U+3X6+mSNMJWd4Nhr+3HtvmItLIXP2JCLxuYtu/K\r\n6nKcpFCFFKeF8K3PWpjsAb0hfXL4vc3WfyCYsQnvJeisyAh7yEuge2iDwl1/xXIo\r\nEOAyyYAxvy5UnzcAa0Z2lwjptve+jZ4gQ+A1ioYUavR3pSfBNzuJW30nZCWFadKc\r\nNXOPoAPkK8JLxgRBH3JboeBCXG6xgy/pXrTjyhW7/SS+Z+7eKkp9jgdTVQ12yUtc\r\nCiYWUuM4l240D/z+s03WOEcLTluESwFkJhzs3D9i5crTL72uSkDDmlh8HXoPAyYO\r\nl3Mn9cGWhd8M8IeQRXmb6O7gvvQZDoSXDVDbjBKcW1lFpi0wBxIBzLaOi4CX4OhI\r\nJHJ/H3duOMaltuzXLSLkc26jwHzMeq8seQRSXraXJi1t5oBKlmEWFEgq6xlH7mLW\r\n3TOqS19cuiSWl/CsnlLGaW8MH5YHmk+MJxQE1BcLBs6ciapvHlhLEd9EUpU=\r\n-----END CERTIFICATE-----\r\n\r\nSecureTrust TWG ECDSA P-256 Secure Email CA, Level 2\r\nTrustwave Holdings, Inc.\r\n072F30E9C4627001DECFEBF6BF5D3B1066D7E3\r\n-----BEGIN CERTIFICATE-----\r\nMIIDbTCCAxKgAwIBAgITBy8w6cRicAHez+v2v107EGbX4zAKBggqhkjOPQQDAjCB\r\nkTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCElsbGlub2lzMRAwDgYDVQQHEwdDaGlj\r\nYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xOjA4BgNVBAMT\r\nMVRydXN0d2F2ZSBHbG9iYWwgRUNDIFAyNTYgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\r\ndHkwHhcNMjAxMDA4MDY0OTQxWhcNMzAxMDA4MDY0ODQxWjBiMQswCQYDVQQGEwJV\r\nUzEUMBIGA1UEChMLU2VjdXJlVHJ1c3QxPTA7BgNVBAMTNFNlY3VyZVRydXN0IFRX\r\nRyBFQ0RTQSBQLTI1NiBTZWN1cmUgRW1haWwgQ0EsIExldmVsIDIwWTATBgcqhkjO\r\nPQIBBggqhkjOPQMBBwNCAAT4KazLm94aiykBGkNQVkBrjmK77RlP627D2n3EwK3s\r\n49ljRkN6wiTWXHx3jPD5BBE/7mWhGWnphzGu1Deb6yzco4IBdTCCAXEwEgYDVR0T\r\nAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwEwYDVR0lBAwwCgYIKwYBBQUH\r\nAwQwHQYDVR0OBBYEFHMQ2nwjQr8tFHfBImxM7ct8lbBYMB8GA1UdIwQYMBaAFKNB\r\nBqyQbdFK63WlShCZs7Ghi0r3MEEGA1UdIAQ6MDgwNgYEVR0gADAuMCwGCCsGAQUF\r\nBwIBFiBodHRwczovL2NlcnRzLnNlY3VyZXRydXN0LmNvbS9DQTA5BgNVHR8EMjAw\r\nMC6gLKAqhihodHRwOi8vY3JsLnNlY3VyZXRydXN0LmNvbS9UV0dQMjU2Q0EuY3Js\r\nMHgGCCsGAQUFBwEBBGwwajAoBggrBgEFBQcwAYYcaHR0cDovL29jc3Auc2VjdXJl\r\ndHJ1c3QuY29tLzA+BggrBgEFBQcwAoYyaHR0cDovL2NlcnRzLnNlY3VyZXRydXN0\r\nLmNvbS9pc3N1ZXJzL1RXR1AyNTZDQS5jcnQwCgYIKoZIzj0EAwIDSQAwRgIhAN8G\r\nPwKUpMgV3LZjq7fuKS96f15BrwBjmTlKhOwgX83BAiEA9WpWhzRRoKeJGAqqXrMk\r\nZ8RE9xRtOFBqYdv9H5CeTVk=\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global ECDSA P-256 Domain Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D9AF531423847B85FB677932AAF80508\r\n-----BEGIN CERTIFICATE-----\r\nMIIDmDCCAz+gAwIBAgITBs6C2a9TFCOEe4X7Z3kyqvgFCDAKBggqhkjOPQQDAjCB\r\nkTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCElsbGlub2lzMRAwDgYDVQQHEwdDaGlj\r\nYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xOjA4BgNVBAMT\r\nMVRydXN0d2F2ZSBHbG9iYWwgRUNDIFAyNTYgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\r\ndHkwHhcNMTgwMjA2MTIyMTIxWhcNMjgwMjI0MDUwMTIxWjCBmjFDMEEGA1UEAxM6\r\nVHJ1c3R3YXZlIEdsb2JhbCBFQ0RTQSBQLTI1NiBEb21haW4gVmFsaWRhdGlvbiBD\r\nQSwgTGV2ZWwgMTEhMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJbmMuMRAw\r\nDgYDVQQHEwdDaGljYWdvMREwDwYDVQQIEwhJbGxpbm9pczELMAkGA1UEBhMCVVMw\r\nWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATWpfTIQFPkZIoXXMDN9utRU+AbLGcg\r\nBmLA06x2qqdcpCMlYFoJhuRWzYCiqz1mKrAvNlQYkgoHfemk92sf8iaro4IBaTCC\r\nAWUwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwEwYDVR0lBAww\r\nCgYIKwYBBQUHAwEwHQYDVR0OBBYEFA/DUGGZflb1xtmcOeiDWJAHuhq0MB8GA1Ud\r\nIwQYMBaAFKNBBqyQbdFK63WlShCZs7Ghi0r3MD0GA1UdIAQ2MDQwMgYEVR0gADAq\r\nMCgGCCsGAQUFBwIBFhxodHRwczovL3NzbC50cnVzdHdhdmUuY29tL0NBMDcGA1Ud\r\nHwQwMC4wLKAqoCiGJmh0dHA6Ly9jcmwudHJ1c3R3YXZlLmNvbS9UV0dQMjU2Q0Eu\r\nY3JsMHIGCCsGAQUFBwEBBGYwZDAmBggrBgEFBQcwAYYaaHR0cDovL29jc3AudHJ1\r\nc3R3YXZlLmNvbS8wOgYIKwYBBQUHMAKGLmh0dHA6Ly9zc2wudHJ1c3R3YXZlLmNv\r\nbS9pc3N1ZXJzL1RXR1AyNTZDQS5jcnQwCgYIKoZIzj0EAwIDRwAwRAIgICvA5ttD\r\n0oeUcd37iYvoQ7iMIpZINp4e1j5NrlI3UnYCIEZhimm9+1dUWAfx9ZkGmIu0HiHR\r\nzEZifAHbPM3SJbRu\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global ECDSA P-256 Extended Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D9A20A3797CD878EB3DAA41D08680AF7\r\n-----BEGIN CERTIFICATE-----\r\nMIIDpjCCA0ugAwIBAgITBs6C2aIKN5fNh46z2qQdCGgK9zAKBggqhkjOPQQDAjCB\r\nkTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCElsbGlub2lzMRAwDgYDVQQHEwdDaGlj\r\nYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xOjA4BgNVBAMT\r\nMVRydXN0d2F2ZSBHbG9iYWwgRUNDIFAyNTYgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\r\ndHkwHhcNMTgwMjA2MTIyMTIwWhcNMjgwMjI0MDUwMTIwWjCBnDFFMEMGA1UEAxM8\r\nVHJ1c3R3YXZlIEdsb2JhbCBFQ0RTQSBQLTI1NiBFeHRlbmRlZCBWYWxpZGF0aW9u\r\nIENBLCBMZXZlbCAxMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4x\r\nEDAOBgNVBAcTB0NoaWNhZ28xETAPBgNVBAgTCElsbGlub2lzMQswCQYDVQQGEwJV\r\nUzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKXHfFxFDVI6uYWZlWciFFKtYzuJ\r\n+IBhot3PQGikE3sjU8d9dARkZCkInqmDyP/+XiLzgrYPMy7NS8lZcRsE5p2jggFz\r\nMIIBbzASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHSUE\r\nFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwHQYDVR0OBBYEFAwlVqqzYgakv+7gGxtX\r\nzC8s9g1QMB8GA1UdIwQYMBaAFKNBBqyQbdFK63WlShCZs7Ghi0r3MD0GA1UdIAQ2\r\nMDQwMgYEVR0gADAqMCgGCCsGAQUFBwIBFhxodHRwczovL3NzbC50cnVzdHdhdmUu\r\nY29tL0NBMDcGA1UdHwQwMC4wLKAqoCiGJmh0dHA6Ly9jcmwudHJ1c3R3YXZlLmNv\r\nbS9UV0dQMjU2Q0EuY3JsMHIGCCsGAQUFBwEBBGYwZDAmBggrBgEFBQcwAYYaaHR0\r\ncDovL29jc3AudHJ1c3R3YXZlLmNvbS8wOgYIKwYBBQUHMAKGLmh0dHA6Ly9zc2wu\r\ndHJ1c3R3YXZlLmNvbS9pc3N1ZXJzL1RXR1AyNTZDQS5jcnQwCgYIKoZIzj0EAwID\r\nSQAwRgIhALahroq1NScrFeCvG5uMgMKH/bo190D+Mkh2ZIojrUOfAiEAosFXFE73\r\n0WLRPjX2uOkLhXuA4cQEb1R1oeGDH4MNVOo=\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global ECDSA P-256 Organization Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D9A8B57C104843994DACD79E28633E5F\r\n-----BEGIN CERTIFICATE-----\r\nMIIDqDCCA0+gAwIBAgITBs6C2ai1fBBIQ5lNrNeeKGM+XzAKBggqhkjOPQQDAjCB\r\nkTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCElsbGlub2lzMRAwDgYDVQQHEwdDaGlj\r\nYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xOjA4BgNVBAMT\r\nMVRydXN0d2F2ZSBHbG9iYWwgRUNDIFAyNTYgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\r\ndHkwHhcNMTgwMjA2MTIyMTIxWhcNMjgwMjI0MDUwMTIxWjCBoDFJMEcGA1UEAxNA\r\nVHJ1c3R3YXZlIEdsb2JhbCBFQ0RTQSBQLTI1NiBPcmdhbml6YXRpb24gVmFsaWRh\r\ndGlvbiBDQSwgTGV2ZWwgMTEhMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJ\r\nbmMuMRAwDgYDVQQHEwdDaGljYWdvMREwDwYDVQQIEwhJbGxpbm9pczELMAkGA1UE\r\nBhMCVVMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQmHWo0mogvX1J61xysTqsn\r\n6qV06wxUH68/QJ2aDIka6beTrDoTZv3mIkyPxFTPy+9idjgSAERlBsDirgO2/NiY\r\no4IBczCCAW8wEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwHQYD\r\nVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMB0GA1UdDgQWBBSv+Ju8XTSl3tA+\r\nFCldDY4lrbClhTAfBgNVHSMEGDAWgBSjQQaskG3RSut1pUoQmbOxoYtK9zA9BgNV\r\nHSAENjA0MDIGBFUdIAAwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly9zc2wudHJ1c3R3\r\nYXZlLmNvbS9DQTA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLnRydXN0d2F2\r\nZS5jb20vVFdHUDI1NkNBLmNybDByBggrBgEFBQcBAQRmMGQwJgYIKwYBBQUHMAGG\r\nGmh0dHA6Ly9vY3NwLnRydXN0d2F2ZS5jb20vMDoGCCsGAQUFBzAChi5odHRwOi8v\r\nc3NsLnRydXN0d2F2ZS5jb20vaXNzdWVycy9UV0dQMjU2Q0EuY3J0MAoGCCqGSM49\r\nBAMCA0cAMEQCIGa3JyBYlXxRN5GIIulLaDxnANNRnY4j1Et166CCC5h+AiAVUlzJ\r\nIJTfUDBU7jnSTKSw/F+bLIPvaC6frMZv0h+RTA==\r\n-----END CERTIFICATE-----\r\n\r\nSecureTrust TWG ECDSA P-384 Secure Email CA, Level 2\r\nTrustwave Holdings, Inc.\r\n072F30E9C58D91DEF98A7F9EB2666CFE7BE1EE\r\n-----BEGIN CERTIFICATE-----\r\nMIIDqjCCAy+gAwIBAgITBy8w6cWNkd75in+esmZs/nvh7jAKBggqhkjOPQQDAzCB\r\nkTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCElsbGlub2lzMRAwDgYDVQQHEwdDaGlj\r\nYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xOjA4BgNVBAMT\r\nMVRydXN0d2F2ZSBHbG9iYWwgRUNDIFAzODQgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\r\ndHkwHhcNMjAxMDA4MDY0OTQxWhcNMzAxMDA4MDY0ODQxWjBiMQswCQYDVQQGEwJV\r\nUzEUMBIGA1UEChMLU2VjdXJlVHJ1c3QxPTA7BgNVBAMTNFNlY3VyZVRydXN0IFRX\r\nRyBFQ0RTQSBQLTM4NCBTZWN1cmUgRW1haWwgQ0EsIExldmVsIDIwdjAQBgcqhkjO\r\nPQIBBgUrgQQAIgNiAAR4nTJ6MvtPBb7+L3tklhdDw0tr5FNY5Q1hsp6NR5OzZVeG\r\nx/X3VrCvkOsae1OEZHNqWCnnI1s/ix9qn/2+q0pPpXrT6wkN/HOQzpQaJWzCF7yX\r\nIfIB0o+x1Pr17UOX2qGjggF1MIIBcTASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1Ud\r\nDwEB/wQEAwIBhjATBgNVHSUEDDAKBggrBgEFBQcDBDAdBgNVHQ4EFgQUJd3xyUp6\r\n6EP6L9hCmkRrWAcU2mwwHwYDVR0jBBgwFoAUVamEidLBMr0Yy2ymB07I552+gpAw\r\nQQYDVR0gBDowODA2BgRVHSAAMC4wLAYIKwYBBQUHAgEWIGh0dHBzOi8vY2VydHMu\r\nc2VjdXJldHJ1c3QuY29tL0NBMDkGA1UdHwQyMDAwLqAsoCqGKGh0dHA6Ly9jcmwu\r\nc2VjdXJldHJ1c3QuY29tL1RXR1AzODRDQS5jcmwweAYIKwYBBQUHAQEEbDBqMCgG\r\nCCsGAQUFBzABhhxodHRwOi8vb2NzcC5zZWN1cmV0cnVzdC5jb20vMD4GCCsGAQUF\r\nBzAChjJodHRwOi8vY2VydHMuc2VjdXJldHJ1c3QuY29tL2lzc3VlcnMvVFdHUDM4\r\nNENBLmNydDAKBggqhkjOPQQDAwNpADBmAjEA8X5zwZHtdHjLIn60rwG3Z3NAa6cU\r\n6gOFxyF+ksTCXvWCUP0oFUqsRPMKMYE2mtdQAjEA2diuEHTPUgCQ0ynhLjged8BO\r\nFyzL3UlFieGGp90v58gUpfjoFq0BReAw7MPYo/Qa\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global ECDSA P-384 Domain Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D9B07A17CC5376157813389A2930A44A\r\n-----BEGIN CERTIFICATE-----\r\nMIID1TCCA1ygAwIBAgITBs6C2bB6F8xTdhV4EziaKTCkSjAKBggqhkjOPQQDAzCB\r\nkTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCElsbGlub2lzMRAwDgYDVQQHEwdDaGlj\r\nYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xOjA4BgNVBAMT\r\nMVRydXN0d2F2ZSBHbG9iYWwgRUNDIFAzODQgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\r\ndHkwHhcNMTgwMjA2MTIyMTIxWhcNMjgwMjI0MDUwMTIxWjCBmjFDMEEGA1UEAxM6\r\nVHJ1c3R3YXZlIEdsb2JhbCBFQ0RTQSBQLTM4NCBEb21haW4gVmFsaWRhdGlvbiBD\r\nQSwgTGV2ZWwgMTEhMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJbmMuMRAw\r\nDgYDVQQHEwdDaGljYWdvMREwDwYDVQQIEwhJbGxpbm9pczELMAkGA1UEBhMCVVMw\r\ndjAQBgcqhkjOPQIBBgUrgQQAIgNiAASxlBEflNumTKsypgdOscM2x6ZRpQGSyB4B\r\nhJScRQI81UhZvzYSwxPWcxNZwFQoV457HfqR51pviJnHltRS8MJhJ9Q9Rf1sSmy4\r\nW6SPsM9qnBjwfBRxghByIsEIaTW/PKyjggFpMIIBZTASBgNVHRMBAf8ECDAGAQH/\r\nAgEAMA4GA1UdDwEB/wQEAwIBhjATBgNVHSUEDDAKBggrBgEFBQcDATAdBgNVHQ4E\r\nFgQUp6etGGS1u/oGGEfIwJ68Zf9pAWAwHwYDVR0jBBgwFoAUVamEidLBMr0Yy2ym\r\nB07I552+gpAwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBz\r\nOi8vc3NsLnRydXN0d2F2ZS5jb20vQ0EwNwYDVR0fBDAwLjAsoCqgKIYmaHR0cDov\r\nL2NybC50cnVzdHdhdmUuY29tL1RXR1AzODRDQS5jcmwwcgYIKwYBBQUHAQEEZjBk\r\nMCYGCCsGAQUFBzABhhpodHRwOi8vb2NzcC50cnVzdHdhdmUuY29tLzA6BggrBgEF\r\nBQcwAoYuaHR0cDovL3NzbC50cnVzdHdhdmUuY29tL2lzc3VlcnMvVFdHUDM4NENB\r\nLmNydDAKBggqhkjOPQQDAwNnADBkAjA6fS1jRjt+DvnWSI58v4lX+8DCXbdEhDaB\r\nbBOS/rXwS/ntsFXqTf0B90GPv3AWlFMCMBbz6nXMwX0jKRkaFZOZx9tvwUapdq7M\r\n6jYpT/NnAzH68x1t3/7ysZ8lPuKIqAwdKQ==\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global ECDSA P-384 Extended Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D9A331594530006781829387E40DBCB6\r\n-----BEGIN CERTIFICATE-----\r\nMIID4zCCA2igAwIBAgITBs6C2aMxWUUwAGeBgpOH5A28tjAKBggqhkjOPQQDAzCB\r\nkTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCElsbGlub2lzMRAwDgYDVQQHEwdDaGlj\r\nYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xOjA4BgNVBAMT\r\nMVRydXN0d2F2ZSBHbG9iYWwgRUNDIFAzODQgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\r\ndHkwHhcNMTgwMjA2MTIyMTIwWhcNMjgwMjI0MDUwMTIwWjCBnDFFMEMGA1UEAxM8\r\nVHJ1c3R3YXZlIEdsb2JhbCBFQ0RTQSBQLTM4NCBFeHRlbmRlZCBWYWxpZGF0aW9u\r\nIENBLCBMZXZlbCAxMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4x\r\nEDAOBgNVBAcTB0NoaWNhZ28xETAPBgNVBAgTCElsbGlub2lzMQswCQYDVQQGEwJV\r\nUzB2MBAGByqGSM49AgEGBSuBBAAiA2IABKcVGieqBjW3BuVza9VhkBlpGLHLZqQg\r\nI0GXaTpt5CogNWz6BmlZ1yAPjRnDUVfVwl57ATRtV7u+5TPFzKZ+RheFVc0iA8vl\r\nQ2JINGRz8XLDaivvuygQtFKSzCWn4e66cKOCAXMwggFvMBIGA1UdEwEB/wQIMAYB\r\nAf8CAQAwDgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEF\r\nBQcDATAdBgNVHQ4EFgQUMFfit09gayJACkNfT/oNzXO8JCcwHwYDVR0jBBgwFoAU\r\nVamEidLBMr0Yy2ymB07I552+gpAwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYB\r\nBQUHAgEWHGh0dHBzOi8vc3NsLnRydXN0d2F2ZS5jb20vQ0EwNwYDVR0fBDAwLjAs\r\noCqgKIYmaHR0cDovL2NybC50cnVzdHdhdmUuY29tL1RXR1AzODRDQS5jcmwwcgYI\r\nKwYBBQUHAQEEZjBkMCYGCCsGAQUFBzABhhpodHRwOi8vb2NzcC50cnVzdHdhdmUu\r\nY29tLzA6BggrBgEFBQcwAoYuaHR0cDovL3NzbC50cnVzdHdhdmUuY29tL2lzc3Vl\r\ncnMvVFdHUDM4NENBLmNydDAKBggqhkjOPQQDAwNpADBmAjEA6pScrGT+SruK7iON\r\n7iDJZfhQsjfQIhaq9sHiEXd89B8ibWOb57no/K265dPxeuALAjEA27NTMZM344eT\r\nX3df9B22dY5ZshsUMIiRcMo1K4B/GBO8SIA0jParkHS5g4WO5K7O\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global ECDSA P-384 Organization Validation CA, Level 1\r\nTrustwave Holdings, Inc.\r\n06CE82D9A9D8E29837EF90BEAF59DC6551BED6\r\n-----BEGIN CERTIFICATE-----\r\nMIID5jCCA2ygAwIBAgITBs6C2anY4pg375C+r1ncZVG+1jAKBggqhkjOPQQDAzCB\r\nkTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCElsbGlub2lzMRAwDgYDVQQHEwdDaGlj\r\nYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9sZGluZ3MsIEluYy4xOjA4BgNVBAMT\r\nMVRydXN0d2F2ZSBHbG9iYWwgRUNDIFAzODQgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\r\ndHkwHhcNMTgwMjA2MTIyMTIxWhcNMjgwMjI0MDUwMTIxWjCBoDFJMEcGA1UEAxNA\r\nVHJ1c3R3YXZlIEdsb2JhbCBFQ0RTQSBQLTM4NCBPcmdhbml6YXRpb24gVmFsaWRh\r\ndGlvbiBDQSwgTGV2ZWwgMTEhMB8GA1UEChMYVHJ1c3R3YXZlIEhvbGRpbmdzLCBJ\r\nbmMuMRAwDgYDVQQHEwdDaGljYWdvMREwDwYDVQQIEwhJbGxpbm9pczELMAkGA1UE\r\nBhMCVVMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATvG09PrsO8UQZhH5Zw54rwgcUw\r\nKjC9D2V3myjD5WOa8uxdTL8PzdwPk4TCcSf6UUG1Tt74j/I+vBOi2tgMcDt68Zld\r\nvTj+jZT1BBYTQtYh6/dOUjmiapQU5XqoFMRNubGjggFzMIIBbzASBgNVHRMBAf8E\r\nCDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHSUEFjAUBggrBgEFBQcDAgYI\r\nKwYBBQUHAwEwHQYDVR0OBBYEFDoXwH5iO1eguEDKzDRHzZZ+/AmIMB8GA1UdIwQY\r\nMBaAFFWphInSwTK9GMtspgdOyOedvoKQMD0GA1UdIAQ2MDQwMgYEVR0gADAqMCgG\r\nCCsGAQUFBwIBFhxodHRwczovL3NzbC50cnVzdHdhdmUuY29tL0NBMDcGA1UdHwQw\r\nMC4wLKAqoCiGJmh0dHA6Ly9jcmwudHJ1c3R3YXZlLmNvbS9UV0dQMzg0Q0EuY3Js\r\nMHIGCCsGAQUFBwEBBGYwZDAmBggrBgEFBQcwAYYaaHR0cDovL29jc3AudHJ1c3R3\r\nYXZlLmNvbS8wOgYIKwYBBQUHMAKGLmh0dHA6Ly9zc2wudHJ1c3R3YXZlLmNvbS9p\r\nc3N1ZXJzL1RXR1AzODRDQS5jcnQwCgYIKoZIzj0EAwMDaAAwZQIwMyHlVCVMacxP\r\nO0fC+uc4M7Eq1F9woaWBmLSSNC6EWe3nShMqsR9HrNWrOHBHucNWAjEArwrzEM8g\r\nJkR4iZxbyYNIn2sNEkNZt2pxqJn4G2cDDDFfOarykKVzP1aJ9OMdYUvs\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave S/MIME SHA256 CA, Level 1\r\nXRamp Security Services Inc\r\n3A83B71EE02C3CCA1CE1A2643E9B66EA\r\n-----BEGIN CERTIFICATE-----\r\nMIIFHTCCBAWgAwIBAgIQOoO3HuAsPMoc4aJkPptm6jANBgkqhkiG9w0BAQsFADCB\r\ngjELMAkGA1UEBhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEk\r\nMCIGA1UEChMbWFJhbXAgU2VjdXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRY\r\nUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTQxMDAxMTky\r\nMjM4WhcNMjQwOTI4MTkyMjM4WjCBpDELMAkGA1UEBhMCVVMxETAPBgNVBAgTCEls\r\nbGlub2lzMRAwDgYDVQQHEwdDaGljYWdvMSEwHwYDVQQKExhUcnVzdHdhdmUgSG9s\r\nZGluZ3MsIEluYy4xLDAqBgNVBAMTI1RydXN0d2F2ZSBTL01JTUUgU0hBMjU2IENB\r\nLCBMZXZlbCAxMR8wHQYJKoZIhvcNAQkBFhBjYUB0cnVzdHdhdmUuY29tMIIBIjAN\r\nBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4c5I5giD0wEh+RuoLIJkD7a6mBlm\r\n+YzTtXSefGejVVYtpjclkUl4C4hEfQMCUcrBnU3ORHVprXi/Q82dKNFPac8FI9bj\r\n8mtq0cjdSDfXJKfdf52wPXnTjASwKyhJt+CoJik+Fz72KAkjxi+OUSpWdQBeAQra\r\ndbtu4UGFTgPcuU/cwpF8J0g4CGk/saVKkkJNpq5wqpfQRYl025FyKbzmRjqhB/Ta\r\npoHlbHMQ7aeoZ+qtDC+eWnE3AqTUHx14Z5fegjLQRmPWqqdeZafthouglbEuHt4A\r\neyzefTDNwyXjUiRD/n0kaNNW+lcsLpw7ouw1OU8mwQ0C7LoPJljpXRjvOwIDAQAB\r\no4IBaTCCAWUwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUDDOjV6rjq9ZL\r\ncBs2nqPtYVDmr3QwDgYDVR0PAQH/BAQDAgGGMEgGA1UdIARBMD8wPQYPKwYBBAGB\r\n7RgDAwMFBAMDMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vc3NsLnRydXN0d2F2ZS5j\r\nb20vQ0EwMgYDVR0fBCswKTAnoCWgI4YhaHR0cDovL2NybC50cnVzdHdhdmUuY29t\r\nL1hHQ0EuY3JsMGwGCCsGAQUFBwEBBGAwXjAlBggrBgEFBQcwAYYZaHR0cDovL29j\r\nc3AudHJ1c3R3YXZlLmNvbTA1BggrBgEFBQcwAoYpaHR0cDovL3NzbC50cnVzdHdh\r\ndmUuY29tL2lzc3VlcnMvWEdDQS5jcnQwEwYDVR0lBAwwCgYIKwYBBQUHAwQwHwYD\r\nVR0jBBgwFoAUxk+iPQZjhAmczmLkBKyNXLXpthswDQYJKoZIhvcNAQELBQADggEB\r\nAIdGLHufUegzFKVBQVWs3YAIFqCcJvdak14TMRImxJsnQWLz+jIW0olC0JATY6Ng\r\nxAbjIJA4wtW/tA+rgE6WcA5y3bLN3bRMQVDSu6X26hkVjvwo4/VYykOp3e9Cqlfe\r\ngJAsrqBQKXkUpEbYEmmorXxj6/74e//xwXTz0XS0BS9cXhONlTQffyJnMeLaunzQ\r\nS1x/MvALfPCHCZCTOfLDmwylKtHHu+V2Ks0HV+ZrzCBRR5W3MhGTU7PpNEMQwyGF\r\n+MG5eZTd0jyxOSOjaXQm7iDh0tG/iKZZegn5AhNdaHE74QEHTjK+teLQlo60QGBk\r\necyzakgVYZ/Ezalz8nQwhCA=\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave XRamp Global Extended Validation CA, Level 1\r\nXRamp Security Services Inc\r\n00D3D519C2B2EB5C7040F64CBC957BBD2C\r\n-----BEGIN CERTIFICATE-----\r\nMIIFMDCCBBigAwIBAgIRANPVGcKy61xwQPZMvJV7vSwwDQYJKoZIhvcNAQELBQAw\r\ngYIxCzAJBgNVBAYTAlVTMR4wHAYDVQQLExV3d3cueHJhbXBzZWN1cml0eS5jb20x\r\nJDAiBgNVBAoTG1hSYW1wIFNlY3VyaXR5IFNlcnZpY2VzIEluYzEtMCsGA1UEAxMk\r\nWFJhbXAgR2xvYmFsIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTE1MDgxMjIw\r\nMTczMVoXDTI1MDgwOTIwMTczMVowgbcxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhJ\r\nbGxpbm9pczEQMA4GA1UEBxMHQ2hpY2FnbzEhMB8GA1UEChMYVHJ1c3R3YXZlIEhv\r\nbGRpbmdzLCBJbmMuMT8wPQYDVQQDEzZUcnVzdHdhdmUgWFJhbXAgR2xvYmFsIEV4\r\ndGVuZGVkIFZhbGlkYXRpb24gQ0EsIExldmVsIDExHzAdBgkqhkiG9w0BCQEWEGNh\r\nQHRydXN0d2F2ZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9\r\nAAbj9SknrNJT9pDatGvlR386KRi0SkqIOGr+C5W91+8E8PqydEHwjrnrWt/MTLGO\r\n+2kfEO3TEJlWxQQqbHy8SdhjCANefLzOT1cfTfjroWBIS9yiHpBIQytAaz/td95Y\r\n+JKrRBVCnIR/wB5qMMQ982RWwqggD763XLma0c1AIndsZL+dXp1zET4KBreoxn3q\r\nRYzMIsZIL2mAJoiCOTYuOGrOMVuaQn0HSu3K7bU+CpkdLQ/j+ikcQiI10IL9oOcO\r\nU9Gnt/hRyUX66Gk91RIpYXhla2tIYrg7ezrAnFoZIZCb891JjFtbSEOvAAK9F5d6\r\nfkkjPx0432o/v1c5GRFPAgMBAAGjggFoMIIBZDASBgNVHRMBAf8ECDAGAQH/AgEA\r\nMB0GA1UdDgQWBBTFzrk7QkXAzQnlaOhIOoNdbI6rGDAOBgNVHQ8BAf8EBAMCAYYw\r\nPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vc3NsLnRy\r\ndXN0d2F2ZS5jb20vQ0EwMgYDVR0fBCswKTAnoCWgI4YhaHR0cDovL2NybC50cnVz\r\ndHdhdmUuY29tL1hHQ0EuY3JsMGwGCCsGAQUFBwEBBGAwXjAlBggrBgEFBQcwAYYZ\r\naHR0cDovL29jc3AudHJ1c3R3YXZlLmNvbTA1BggrBgEFBQcwAoYpaHR0cDovL3Nz\r\nbC50cnVzdHdhdmUuY29tL2lzc3VlcnMvWEdDQS5jcnQwHQYDVR0lBBYwFAYIKwYB\r\nBQUHAwIGCCsGAQUFBwMBMB8GA1UdIwQYMBaAFMZPoj0GY4QJnM5i5ASsjVy16bYb\r\nMA0GCSqGSIb3DQEBCwUAA4IBAQCA2N/WVTGYRGNTuvF2qKWPrQUx0/6pKmGqELl6\r\nNXs1bwRXCci98SkeNjiaa2dHEwcGR43/M1Y0nekXP8QCEFVqGOwaY0pnTb8wL+CI\r\n/HTp1zfmoCYNvtzt1fIq/+9ynLYEjX8rsrf51HIEjJJK8K3k/Ub3cFT+yJKNN2YN\r\nJS0IvJYlbpqS6VbcInwLcW7WvJmXUuL7t0Vtt0d2q1h5UdnJQP+skiOmN/B0zPut\r\nbRC4v5pNGJJmwbk58UlOSeviH2qzDGutamOJ6dFNWqQFoZorAT7fUsr3WDA4HKtx\r\neraYdCIRJX7weW9xpdMNsVO7Wy/Ma7Fz9fzKnOH5mnInBOof\r\n-----END CERTIFICATE-----\r\n\r\nSecure Global CA\r\nSecureTrust Corporation\r\n075622A4E8D48A894DF413C8F0F8EAA5\r\n-----BEGIN CERTIFICATE-----\r\nMIIDvDCCAqSgAwIBAgIQB1YipOjUiolN9BPI8PjqpTANBgkqhkiG9w0BAQUFADBK\r\nMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x\r\nGTAXBgNVBAMTEFNlY3VyZSBHbG9iYWwgQ0EwHhcNMDYxMTA3MTk0MjI4WhcNMjkx\r\nMjMxMTk1MjA2WjBKMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3Qg\r\nQ29ycG9yYXRpb24xGTAXBgNVBAMTEFNlY3VyZSBHbG9iYWwgQ0EwggEiMA0GCSqG\r\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvNS7YrGxVaQZx5RNoJLNP2MwhR/jxYDiJ\r\niQPpvepeRlMJ3Fz1Wuj3RSoC6zFh1ykzTM7HfAo3fg+6MpjhHZevj8fcyTiW89sa\r\n/FHtaMbQbqR8JNGuQsiWUGMu4P51/pinX0kuleM5M2SOHqRfkNJnPLLZ/kG5VacJ\r\njnIFHovdRIWCQtBJwB1g8NEXLJXr9qXBkqPFwqcIYA1gBBCWeZ4WNOaptvolRTnI\r\nHmX5k/Wq8VLcmZg9pYYaDDUz+kulBAYVHDGA76oYa8J719rO+TMg1fW9ajMtgQT7\r\nsFzUnKPiXB3jqUJ1XnvUd+85VLrJChgbEplJL4hL/VBi0XPnj3pDAgMBAAGjgZ0w\r\ngZowEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQF\r\nMAMBAf8wHQYDVR0OBBYEFK9EBMJBfkiD2045AuzshHrmzsmkMDQGA1UdHwQtMCsw\r\nKaAnoCWGI2h0dHA6Ly9jcmwuc2VjdXJldHJ1c3QuY29tL1NHQ0EuY3JsMBAGCSsG\r\nAQQBgjcVAQQDAgEAMA0GCSqGSIb3DQEBBQUAA4IBAQBjGghAfaReUw132HquHw0L\r\nURYD7xh8yOOvaliTFGCRsoTciE6+OYo68+aCiV0BN7OrJKQVDpI1WkpEXk5X+nXO\r\nH0jOZvQ8QCaSmGwb7iRGDBezUqXbpZGRzzfTb+cnCDpOGR86p1hcF895P4vkp9Mm\r\nI50mD1hp/Ed+stCNi5O/KU9DaXR2Z0vPB4zmAve14bRDtUstFJ/53CYNv6ZHdAbY\r\niNE6KTCEztI5gGIbqMdXSbxqVVFnFUq+NQfk1XWYN3kwFNspnWzFacxHVaIw98xc\r\nf8LDmBxrThaA63p4ZUWiABqvDA1VZDRIuJK58bRQKfJPIx/abKwfROHdI3hRW8cW\r\n-----END CERTIFICATE-----\r\n\r\nSecureTrust CA\r\nSecureTrust Corporation\r\n0CF08E5C0816A5AD427FF0EB271859D0\r\n-----BEGIN CERTIFICATE-----\r\nMIIDuDCCAqCgAwIBAgIQDPCOXAgWpa1Cf/DrJxhZ0DANBgkqhkiG9w0BAQUFADBI\r\nMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x\r\nFzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTA2MTEwNzE5MzExOFoXDTI5MTIz\r\nMTE5NDA1NVowSDELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1NlY3VyZVRydXN0IENv\r\ncnBvcmF0aW9uMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTCCASIwDQYJKoZIhvcN\r\nAQEBBQADggEPADCCAQoCggEBAKukgeWVzfX2FI7CT8rU4niVWJxB4Q2ZQCQXOZEz\r\nZum+4YOvYlyJ0fwkW2Gz4BERQRwdbvC4u/jep4G6pkjGnx29vo6pQT64lO0pGtSO\r\n0gMdA+9tDWccV9cGrcrI9f4Or2YlSASWC12juhbDCE/RRvgUXPLIXgGZbf2IzIao\r\nwW8xQmxSPmjL8xk037uHGFaAJsTQ3MBv396gwpEWoGQRS0S8Hvbn+mPeZqx2pHGj\r\n7DaUaHp3pLHnDi+BeuK1cobvomuL8A/b01k/unK8RCSc43Oz969XL0Imnal0ugBS\r\n8kvNU3xHCzaFDmapCJcWNFfBZveA4+1wVMeT4C4oFVmHursCAwEAAaOBnTCBmjAT\r\nBgkrBgEEAYI3FAIEBh4EAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB\r\n/zAdBgNVHQ4EFgQUQjK2FvoE/f5dS3rD/fdMQB1aQ68wNAYDVR0fBC0wKzApoCeg\r\nJYYjaHR0cDovL2NybC5zZWN1cmV0cnVzdC5jb20vU1RDQS5jcmwwEAYJKwYBBAGC\r\nNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggEBADDtT0rhWDpSclu1pqNlGKa7UTt3\r\n6Z3q059c4EVlew3KW+JwULKUBRSuSceNQQcSc5R+DCMh/bwQf2AQWnL1mA6s7Ll/\r\n3XpvXdMc9P+IBWlCqQVxyLesJugutIxq/3HcuLHfmbx8IVQr5Fiiu1cprp6poxkm\r\nD5kuCLDv/WnPmRoJjeOnnyvJNjR7JLN4TJUXpAYmHrZkUjZfYGfZnMUFdAvnZyPS\r\nCPyI6a6Lf+Ew9Dd+/cYy2i2eRDAwbO4H3tI0/NL/QPZL9GZGBlSm8jIKYyYwa5vR\r\n3ItHuuG51WLQoqD0ZwV4KWMabwTW+MZMo5qxN7SN5ShLHZ4swrhovO0C7jE=\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global Certification Authority\r\nTrustwave Holdings, Inc.\r\n05F70E86DA49F346352EBAB2\r\n-----BEGIN CERTIFICATE-----\r\nMIIF2jCCA8KgAwIBAgIMBfcOhtpJ80Y1LrqyMA0GCSqGSIb3DQEBCwUAMIGIMQsw\r\nCQYDVQQGEwJVUzERMA8GA1UECAwISWxsaW5vaXMxEDAOBgNVBAcMB0NoaWNhZ28x\r\nITAfBgNVBAoMGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjExMC8GA1UEAwwoVHJ1\r\nc3R3YXZlIEdsb2JhbCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0xNzA4MjMx\r\nOTM0MTJaFw00MjA4MjMxOTM0MTJaMIGIMQswCQYDVQQGEwJVUzERMA8GA1UECAwI\r\nSWxsaW5vaXMxEDAOBgNVBAcMB0NoaWNhZ28xITAfBgNVBAoMGFRydXN0d2F2ZSBI\r\nb2xkaW5ncywgSW5jLjExMC8GA1UEAwwoVHJ1c3R3YXZlIEdsb2JhbCBDZXJ0aWZp\r\nY2F0aW9uIEF1dGhvcml0eTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB\r\nALldUShLPDeS0YLOvR29zd24q88KPuFd5dyqCblXAj7mY2Hf8g+CY66j96xz0Xzn\r\nswuvCAAJWX/NKSqIk4cXGIDtiLK0thAfLdZfVaITXdHG6wZWiYj+rDKd/VzDBcdu\r\n7oaJuogDnXIhhpCujwOl3J+IKMujkkkP7NAP4m1ET4BqstTnoApTAbqOl5F2brz8\r\n1Ws25kCI1nsvXwXoLG0R8+eyvpJETNKXpP7ScoFDB5zpET71ixpZfR9oWN0EACyW\r\n80OzfpgZdNmcc9kYvkHHNHnZ9GLCQ7mzJ7Aiy/k9UscwR7PJPrhq4ufogXBeQotP\r\nJqX+OsIgbrv4Fo7NDKm0G2x2EOFYeUY+VM6AqFcJNykbmROPDMjWLBz7BegIlT1l\r\nRtzuzWniTY+HKE40Cz7PFNm73bZQmq131BnW2hqIyE4bJ3XYsgjxroMwuREOzYfw\r\nhI0Vcnyh78zyiGG69Gm7DIwLdVcEuE4qFC49DxweMqZiNu5m4iK4BUBjECLzMx10\r\ncoos9TkpoNPnG4CELcU9402x/RpvumUHO1jsQkUm+9jaJXLE9gCxInm943xZYkqc\r\nBW89zubWR2OZxiRvchLIrH+QtAuRcOi35hYQcRfO3gZPSEF9NUqjifLJS3tBEW1n\r\ntwiYTOURGa5CgNz7kAXU+FDKvuStx8KU1xad5hePrzb7AgMBAAGjQjBAMA8GA1Ud\r\nEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJngGWcNYtt2s9o9uFvo/ULSMQ6HMA4GA1Ud\r\nDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAmHNw4rDT7TnsTGDZqRKGFx6W\r\n0OhUKDtkLSGm+J1WE2pIPU/HPinbbViDVD2HfSMF1OQc3Og4ZYbFdada2zUFvXfe\r\nuyk3QAUHw5RSn8pk3fEbK9xGChACMf1KaA0HZJDmHvUqoai7PF35owgLEQzxPy0Q\r\nlG/+4jSHg9bP5Rs1bdID4bANqKCqRieCNqcVtgimQlRXtpla4gt5kNdXElE1GYhB\r\naCXUNxeEFfsBctyV3lImIJgm4nb1J2/6ADtKYdkNy1GTKv0WBpanI5ojSP5RvbbE\r\nsLFUzt5sQa0WZ37b/TjNuThOssFgy50X31ieemKyJo90lZvkWx3SD92YHJtZuSPT\r\nMaCm/zjdzyBP6VhWOmfD0faZmZ26NraAL4hHT4a/RDqA5Dccprrql5gR0IRiR2Qe\r\nqu5AvzSxnI9O4fKSTx+O856X3vOmeWqJcU9LJxdI/uz0UA9PSX3MReO9ekDFQdxh\r\nVicGaeVyQYHTtgGJoC86cnn+OjC/QezHYj6RS8fZMXZC+fc8Y+wmjHMMfRod6qh8\r\nh6jCJ3zhM0EPz8/8AKAigJ5Kp28AsEFFtyLKaEjFQqKu3R3y4G5OBVixwJAWKqQ9\r\nEEC+j2Jjg6mcgn0tAumDMHzLJ8n9HmYAsC7TIS+OMxZsmO0QqAfWzJPP29FpHOTK\r\nyeC2nOnOcXHebD8WpHk=\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global ECC P256 Certification Authority\r\nTrustwave Holdings, Inc.\r\n0D6A5F083F285C3E5195DF5D\r\n-----BEGIN CERTIFICATE-----\r\nMIICYDCCAgegAwIBAgIMDWpfCD8oXD5Rld9dMAoGCCqGSM49BAMCMIGRMQswCQYD\r\nVQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAf\r\nBgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3\r\nYXZlIEdsb2JhbCBFQ0MgUDI1NiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0x\r\nNzA4MjMxOTM1MTBaFw00MjA4MjMxOTM1MTBaMIGRMQswCQYDVQQGEwJVUzERMA8G\r\nA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0\r\nd2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3YXZlIEdsb2JhbCBF\r\nQ0MgUDI1NiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTBZMBMGByqGSM49AgEGCCqG\r\nSM49AwEHA0IABH77bOYj43MyCMpg5lOcunSNGLB4kFKA3TjASh3RqMyTpJcGOMoN\r\nFWLGjgEqZZ2q3zSRLoHB5DOSMcT9CTqmP62jQzBBMA8GA1UdEwEB/wQFMAMBAf8w\r\nDwYDVR0PAQH/BAUDAwcGADAdBgNVHQ4EFgQUo0EGrJBt0UrrdaVKEJmzsaGLSvcw\r\nCgYIKoZIzj0EAwIDRwAwRAIgB+ZU2g6gWrKuEZ+Hxbb/ad4lvvigtwjzRM4q3wgh\r\nDDcCIC0mA6AFvWvR9lz4ZcyGbbOcNEhjhAnFjXca4syc4XR7\r\n-----END CERTIFICATE-----\r\n\r\nTrustwave Global ECC P384 Certification Authority\r\nTrustwave Holdings, Inc.\r\n08BD85976C9927A48068473B\r\n-----BEGIN CERTIFICATE-----\r\nMIICnTCCAiSgAwIBAgIMCL2Fl2yZJ6SAaEc7MAoGCCqGSM49BAMDMIGRMQswCQYD\r\nVQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAf\r\nBgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3\r\nYXZlIEdsb2JhbCBFQ0MgUDM4NCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0x\r\nNzA4MjMxOTM2NDNaFw00MjA4MjMxOTM2NDNaMIGRMQswCQYDVQQGEwJVUzERMA8G\r\nA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0\r\nd2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3YXZlIEdsb2JhbCBF\r\nQ0MgUDM4NCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTB2MBAGByqGSM49AgEGBSuB\r\nBAAiA2IABGvaDXU1CDFHBa5FmVXxERMuSvgQMSOjfoPTfygIOiYaOs+Xgh+AtycJ\r\nj9GOMMQKmw6sWASr9zZ9lCOkmwqKi6vr/TklZvFe/oyujUF5nQlgziip04pt89ZF\r\n1PKYhDhloKNDMEEwDwYDVR0TAQH/BAUwAwEB/zAPBgNVHQ8BAf8EBQMDBwYAMB0G\r\nA1UdDgQWBBRVqYSJ0sEyvRjLbKYHTsjnnb6CkDAKBggqhkjOPQQDAwNnADBkAjA3\r\nAZKXRRJ+oPM+rRk6ct30UJMDEr5E0k9BpIycnR+j9sKS50gU/k6bpZFXrsY3crsC\r\nMGclCrEMXu6pY5Jv5ZAL/mYiykf9ijH3g/56vxC+GCsej/YpHpRZ744hN8tRmKVu\r\nSw==\r\n-----END CERTIFICATE-----\r\n`;","export const PKG_NAME = \"@hpcc-js/comms\";\r\nexport const PKG_VERSION = \"2.97.0\";\r\nexport const BUILD_VERSION = \"2.106.11\";\r\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { join, promiseTimeout, scopedLogger } from \"@hpcc-js/util\";\r\n\r\nconst logger = scopedLogger(\"comms/connection.ts\");\r\n\r\nexport type RequestType = \"post\" | \"get\" | \"jsonp\";\r\nexport type ResponseType = \"json\" | \"text\";\r\n\r\nexport type IOptionsSend = (options: IOptions, action: string, request: any, responseType: ResponseType, defaultSend: SendFunc, header?: any) => Promise<any>;\r\nexport interface IOptions {\r\n    baseUrl: string;\r\n    type?: RequestType;\r\n    userID?: string;\r\n    password?: string;\r\n    rejectUnauthorized?: boolean;\r\n    timeoutSecs?: number;\r\n    hookSend?: IOptionsSend;\r\n    encodeRequest?: boolean; // defaults to true\r\n}\r\nexport function instanceOfIOptions(object: any): object is IOptions {\r\n    return \"baseUrl\" in object;\r\n}\r\n\r\nconst DefaultOptions: IOptions = {\r\n    type: \"post\",\r\n    baseUrl: \"\",\r\n    userID: \"\",\r\n    password: \"\",\r\n    rejectUnauthorized: true,\r\n    timeoutSecs: 60\r\n};\r\n\r\nexport interface IConnection {\r\n    opts(_: Partial<IOptions>): this;\r\n    opts(): IOptions;\r\n    baseUrl: string;\r\n\r\n    send(action: string, request: any, responseType?: ResponseType): Promise<any>;\r\n    clone(): IConnection;\r\n}\r\nexport function instanceOfIConnection(object: any): object is IConnection {\r\n    return typeof object.opts === \"function\" &&\r\n        typeof object.send === \"function\" &&\r\n        typeof object.clone === \"function\";\r\n}\r\n\r\n//  comms  ---\r\n\r\nfunction encode(uriComponent: string | number | boolean, encodeRequest: boolean): string {\r\n    return (encodeRequest === undefined || encodeRequest === true) ? encodeURIComponent(uriComponent) : \"\" + uriComponent;\r\n}\r\n\r\nexport function serializeRequest(obj: any, encodeRequest: boolean = true, prefix: string = \"\"): string {\r\n    if (prefix) {\r\n        prefix += \".\";\r\n    }\r\n    if (typeof obj !== \"object\") {\r\n        return encode(obj, encodeRequest);\r\n    }\r\n\r\n    const str: string[] = [];\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            if (obj[key] instanceof Array) {\r\n                //  Specific to ESP - but no REST standard exists...\r\n                let includeItemCount = false;\r\n                obj[key].forEach((row: any, i: number) => {\r\n                    if (typeof row === \"object\") {\r\n                        includeItemCount = true;\r\n                        str.push(serializeRequest(row, encodeRequest, prefix + encode(`${key}.${i}`, encodeRequest)));\r\n                    } else {\r\n                        str.push(prefix + encode(`${key}_i${i}`, encodeRequest) + \"=\" + serializeRequest(row, encodeRequest));\r\n                    }\r\n                });\r\n                if (includeItemCount) {\r\n                    str.push(prefix + encode(`${key}.itemcount`, encodeRequest) + \"=\" + obj[key].length);\r\n                }\r\n            } else if (typeof obj[key] === \"object\") {\r\n                if (obj[key] && obj[key][\"Item\"] instanceof Array) {  // Specific to ws_machine.GetTargetClusterInfo?\r\n                    str.push(serializeRequest(obj[key][\"Item\"], encodeRequest, prefix + encode(key, encodeRequest)));\r\n                    str.push(prefix + encode(`${key}.itemcount`, encodeRequest) + \"=\" + obj[key][\"Item\"].length);\r\n                } else {\r\n                    str.push(serializeRequest(obj[key], encodeRequest, prefix + encode(key, encodeRequest)));\r\n                }\r\n            } else if (obj[key] !== undefined) {\r\n                str.push(prefix + encode(key, encodeRequest) + \"=\" + encode(obj[key], encodeRequest));\r\n            } else {\r\n                str.push(prefix + encode(key, encodeRequest));\r\n            }\r\n        }\r\n    }\r\n    return str.join(\"&\");\r\n}\r\n\r\nexport function deserializeResponse(body: string) {\r\n    return JSON.parse(body);\r\n}\r\n\r\nexport function jsonp(opts: IOptions, action: string, request: any = {}, responseType: ResponseType = \"json\", header?: any): Promise<any> {\r\n    if (header) {\r\n        console.warn(\"Header attributes ignored for JSONP connections\");\r\n    }\r\n    return new Promise<any>((resolve, reject) => {\r\n        let respondedTimeout = opts.timeoutSecs! * 1000;\r\n        const respondedTick = 5000;\r\n        const callbackName = \"jsonp_callback_\" + Math.round(Math.random() * 999999);\r\n        (window as any)[callbackName] = function (response: any) {\r\n            respondedTimeout = 0;\r\n            doCallback();\r\n            resolve(responseType === \"json\" && typeof response === \"string\" ? deserializeResponse(response) : response);\r\n        };\r\n        const script = document.createElement(\"script\");\r\n        let url = join(opts.baseUrl, action);\r\n        url += url.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\r\n        script.src = url + \"jsonp=\" + callbackName + \"&\" + serializeRequest(request, opts.encodeRequest);\r\n        document.body.appendChild(script);\r\n        const progress = setInterval(function () {\r\n            if (respondedTimeout <= 0) {\r\n                clearInterval(progress);\r\n            } else {\r\n                respondedTimeout -= respondedTick;\r\n                if (respondedTimeout <= 0) {\r\n                    clearInterval(progress);\r\n                    logger.error(\"Request timeout:  \" + script.src);\r\n                    doCallback();\r\n                    reject(Error(\"Request timeout:  \" + script.src));\r\n                } else {\r\n                    logger.debug(\"Request pending (\" + respondedTimeout / 1000 + \" sec):  \" + script.src);\r\n                }\r\n            }\r\n        }, respondedTick);\r\n\r\n        function doCallback() {\r\n            delete (window as any)[callbackName];\r\n            document.body.removeChild(script);\r\n        }\r\n    });\r\n}\r\n\r\nfunction authHeader(opts: IOptions): object {\r\n    return opts.userID ? { Authorization: `Basic ${btoa(`${opts.userID}:${opts.password}`)}` } : {};\r\n}\r\n\r\n//  _omitMap is a workaround for older HPCC-Platform instances without credentials ---\r\nconst _omitMap: { [baseUrl: string]: boolean } = {};\r\nfunction doFetch(opts: IOptions, action: string, requestInit: RequestInit, headersInit: HeadersInit, responseType: string) {\r\n    headersInit = {\r\n        ...authHeader(opts),\r\n        ...headersInit\r\n    };\r\n\r\n    requestInit = {\r\n        credentials: _omitMap[opts.baseUrl] ? \"omit\" : \"include\",\r\n        ...requestInit,\r\n        headers: headersInit\r\n    };\r\n\r\n    if (fetch[\"__setGlobalDispatcher\"]) {\r\n        fetch[\"__setGlobalDispatcher\"](fetch[\"__defaultAgent\"]);\r\n    }\r\n\r\n    if (opts.baseUrl.indexOf(\"https:\") === 0) {\r\n        //  NodeJS / node-fetch only  ---\r\n        if (opts.rejectUnauthorized === false && fetch[\"__rejectUnauthorizedAgent\"]) {\r\n            if (fetch[\"__setGlobalDispatcher\"]) {\r\n                fetch[\"__setGlobalDispatcher\"](fetch[\"__rejectUnauthorizedAgent\"]);\r\n            } else {\r\n                requestInit[\"agent\"] = fetch[\"__rejectUnauthorizedAgent\"];\r\n            }\r\n        } else if (fetch[\"__trustwaveAgent\"]) {\r\n            requestInit[\"agent\"] = fetch[\"__trustwaveAgent\"];\r\n        }\r\n    }\r\n\r\n    function handleResponse(response: Response): Promise<any> {\r\n        if (response.ok) {\r\n            return responseType === \"json\" ? response.json() : response.text();\r\n        }\r\n        throw new Error(response.statusText);\r\n    }\r\n\r\n    return promiseTimeout(opts.timeoutSecs! * 1000, fetch(join(opts.baseUrl, action), requestInit)\r\n        .then(handleResponse)\r\n        .catch(e => {\r\n            //  Try again with the opposite credentials mode  ---\r\n            requestInit.credentials = !_omitMap[opts.baseUrl] ? \"omit\" : \"include\";\r\n            return fetch(join(opts.baseUrl, action), requestInit)\r\n                .then(handleResponse)\r\n                .then(responseBody => {\r\n                    _omitMap[opts.baseUrl] = !_omitMap[opts.baseUrl];  // The \"opposite\" credentials mode is known to work  ---\r\n                    return responseBody;\r\n                });\r\n        })\r\n    );\r\n}\r\n\r\nexport function post(opts: IOptions, action: string, request: any, responseType: ResponseType = \"json\", header?: any): Promise<any> {\r\n    if (request.upload_) {\r\n        delete request.upload_;\r\n        action += \"?upload_\";\r\n    }\r\n    let abortSignal;\r\n    if (request.abortSignal_) {\r\n        abortSignal = request.abortSignal_;\r\n        delete request.abortSignal_;\r\n    }\r\n    return doFetch(opts, action, {\r\n        method: \"post\",\r\n        body: serializeRequest(request, opts.encodeRequest),\r\n        signal: abortSignal\r\n    }, {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...header\r\n    } as any, responseType);\r\n}\r\n\r\nexport function get(opts: IOptions, action: string, request: any, responseType: ResponseType = \"json\", header?: any): Promise<any> {\r\n    let abortSignal;\r\n    if (request.abortSignal_) {\r\n        abortSignal = request.abortSignal_;\r\n        delete request.abortSignal_;\r\n    }\r\n    return doFetch(opts, `${action}?${serializeRequest(request, opts.encodeRequest)}`, {\r\n        method: \"get\",\r\n        signal: abortSignal\r\n    }, {\r\n        ...header\r\n    } as any, responseType);\r\n}\r\n\r\nexport type SendFunc = (opts: IOptions, action: string, request: any, responseType: ResponseType, header?: any) => Promise<any>;\r\nexport function send(opts: IOptions, action: string, request: any, responseType: ResponseType = \"json\", header?: any): Promise<any> {\r\n    let retVal: Promise<any>;\r\n    switch (opts.type) {\r\n        case \"jsonp\":\r\n            retVal = jsonp(opts, action, request, responseType, header);\r\n            break;\r\n        case \"get\":\r\n            retVal = get(opts, action, request, responseType, header);\r\n            break;\r\n        case \"post\":\r\n        default:\r\n            retVal = post(opts, action, request, responseType, header);\r\n            break;\r\n    }\r\n    return retVal;\r\n}\r\n\r\nlet hookedSend: SendFunc = send;\r\nexport function hookSend(newSend?: SendFunc): SendFunc {\r\n    const retVal = hookedSend;\r\n    if (newSend) {\r\n        hookedSend = newSend;\r\n    }\r\n    return retVal;\r\n}\r\n\r\nexport class Connection implements IConnection {\r\n    protected _opts: IOptions;\r\n    get baseUrl() { return this._opts.baseUrl; }\r\n\r\n    constructor(opts: IOptions) {\r\n        this.opts(opts);\r\n    }\r\n\r\n    //  IConnection  ---\r\n    opts(_: Partial<IOptions>): this;\r\n    opts(): IOptions;\r\n    opts(_?: Partial<IOptions>): this | IOptions {\r\n        if (arguments.length === 0) return this._opts;\r\n        this._opts = { ...DefaultOptions, ..._ };\r\n        return this;\r\n    }\r\n\r\n    send(action: string, request: any, responseType: ResponseType = \"json\", header?: any): Promise<any> {\r\n        if (this._opts.hookSend) {\r\n            return this._opts.hookSend(this._opts, action, request, responseType, hookedSend, header);\r\n        }\r\n        return hookedSend(this._opts, action, request, responseType, header);\r\n    }\r\n\r\n    clone() {\r\n        return new Connection(this.opts());\r\n    }\r\n}\r\n\r\nexport type IConnectionFactory = (opts: IOptions) => IConnection;\r\nexport let createConnection: IConnectionFactory = function (opts: IOptions): IConnection {\r\n    return new Connection(opts);\r\n};\r\n\r\nexport function setTransportFactory(newFunc: IConnectionFactory): IConnectionFactory {\r\n    const retVal = createConnection;\r\n    createConnection = newFunc;\r\n    return retVal;\r\n}\r\n","import { join } from \"@hpcc-js/util\";\r\nimport { createConnection, IConnection, IOptions, ResponseType } from \"./connection\";\r\n\r\nexport type ESPResponseType = ResponseType | \"json2\" | \"xsd\";\r\n\r\nexport function isArray(arg: any) {\r\n    return Object.prototype.toString.call(arg) === \"[object Array]\";\r\n}\r\n\r\nexport interface Exception {\r\n    Code: number;\r\n    Message: string;\r\n}\r\n\r\nexport interface Exceptions {\r\n    Source: string;\r\n    Exception: Exception[];\r\n}\r\n\r\nexport class ESPExceptions extends Error implements Exceptions {\r\n    isESPExceptions = true;\r\n    action: string;\r\n    request: string;\r\n    Source: string;\r\n    Exception: Exception[];\r\n\r\n    constructor(action: string, request: any, exceptions: Exceptions) {\r\n        super(\"ESPException:  \" + exceptions.Source);\r\n        this.action = action;\r\n        this.request = request;\r\n        this.Source = exceptions.Source;\r\n        this.Exception = exceptions.Exception;\r\n        if (exceptions.Exception.length) {\r\n            this.message = `${exceptions.Exception[0].Code}:  ${exceptions.Exception[0].Message}`;\r\n        } else {\r\n            this.message = \"\";\r\n        }\r\n    }\r\n}\r\n\r\nexport function isExceptions(err: any): err is Exceptions {\r\n    return err instanceof ESPExceptions || (err.isESPExceptions && Array.isArray(err.Exception));\r\n}\r\n\r\nfunction isConnection(optsConnection: IOptions | IConnection): optsConnection is IConnection {\r\n    return (optsConnection as IConnection).send !== undefined;\r\n}\r\n\r\nexport class ESPConnection implements IConnection {\r\n    private _connection: IConnection;\r\n    get baseUrl() { return this._connection.opts().baseUrl; }\r\n    private _service: string;\r\n    private _version: string;\r\n\r\n    constructor(optsConnection: IOptions | IConnection, service: string, version: string) {\r\n        this._connection = isConnection(optsConnection) ? optsConnection : createConnection(optsConnection);\r\n        this._service = service;\r\n        this._version = version;\r\n    }\r\n\r\n    service(): string;\r\n    service(_: string): ESPConnection;\r\n    service(_?: string): string | ESPConnection {\r\n        if (_ === void 0) return this._service;\r\n        this._service = _;\r\n        return this;\r\n    }\r\n\r\n    version(): string;\r\n    version(_: string): ESPConnection;\r\n    version(_?: string): string | ESPConnection {\r\n        if (_ === void 0) return this._version;\r\n        this._version = _;\r\n        return this;\r\n    }\r\n\r\n    toESPStringArray(target: any, arrayName: string): any {\r\n        if (isArray(target[arrayName])) {\r\n            for (let i = 0; i < target[arrayName].length; ++i) {\r\n                target[arrayName + \"_i\" + i] = target[arrayName][i];\r\n            }\r\n            delete target[arrayName];\r\n        }\r\n        return target;\r\n    }\r\n\r\n    //  IConnection  ---\r\n    opts(_: Partial<IOptions>): this;\r\n    opts(): IOptions;\r\n    opts(_?: Partial<IOptions>): this | IOptions {\r\n        if (_ === void 0) return this._connection.opts();\r\n        this._connection.opts(_);\r\n        return this;\r\n    }\r\n\r\n    send(action: string, _request: any = {}, espResponseType: ESPResponseType = \"json\", largeUpload: boolean = false, abortSignal?: AbortSignal, espResponseField?: string): Promise<any> {\r\n        const request = { ..._request, ...{ ver_: this._version } };\r\n        if (largeUpload) {\r\n            request[\"upload_\"] = true;\r\n        }\r\n        if (abortSignal) {\r\n            request[\"abortSignal_\"] = abortSignal;\r\n        }\r\n        let serviceAction: string;\r\n        let responseType: ResponseType = \"json\";\r\n        switch (espResponseType) {\r\n            case \"text\":\r\n                serviceAction = join(this._service, action);\r\n                responseType = \"text\";\r\n                break;\r\n            case \"xsd\":\r\n                serviceAction = join(this._service, action + \".xsd\");\r\n                responseType = \"text\";\r\n                break;\r\n            case \"json2\":\r\n                serviceAction = join(this._service, action + \"/json\");\r\n                espResponseType = \"json\";\r\n                const actionParts = action.split(\"/\");\r\n                action = actionParts.pop()!;\r\n                break;\r\n            default:\r\n                serviceAction = join(this._service, action + \".json\");\r\n        }\r\n        return this._connection.send(serviceAction, request, responseType).then((response) => {\r\n            if (espResponseType === \"json\") {\r\n                let retVal;\r\n                if (response && response.Exceptions) {\r\n                    throw new ESPExceptions(action, request, response.Exceptions);\r\n                } else if (response) {\r\n                    retVal = response[espResponseField || (action + \"Response\")];\r\n                }\r\n                if (!retVal) {\r\n                    throw new ESPExceptions(action, request, {\r\n                        Source: \"ESPConnection.send\",\r\n                        Exception: [{ Code: 0, Message: \"Missing Response\" }]\r\n                    });\r\n                }\r\n                return retVal;\r\n            }\r\n            return response;\r\n        }).catch(e => {\r\n            if (e.isESPExceptions) {\r\n                throw e;\r\n            }\r\n            throw new ESPExceptions(action, request, {\r\n                Source: \"ESPConnection.send\",\r\n                Exception: [{ Code: 0, Message: e.message }]\r\n            });\r\n        });\r\n    }\r\n\r\n    clone() {\r\n        return new ESPConnection(this._connection.clone(), this._service, this._version);\r\n    }\r\n}\r\n\r\nexport class Service {\r\n    protected _connection: ESPConnection;\r\n    get baseUrl() { return this._connection.opts().baseUrl; }\r\n\r\n    constructor(optsConnection: IOptions | IConnection, service: string, version: string) {\r\n        this._connection = new ESPConnection(optsConnection, service, version);\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace FileSpray {\r\n\r\n    export type int = number;\r\n    export type double = number;\r\n    export type base64Binary = string;\r\n    export type long = number;\r\n    export type dateTime = string;\r\n\r\n    export enum DFUWUActions {\r\n        Delete = \"Delete\",\r\n        Protect = \"Protect\",\r\n        Unprotect = \"Unprotect\",\r\n        Restore = \"Restore\",\r\n        SetToFailed = \"SetToFailed\",\r\n        Archive = \"Archive\"\r\n    }\r\n\r\n    export interface AbortDFUWorkunit {\r\n        wuid: string;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface AbortDFUWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface Copy {\r\n        sourceLogicalName: string;\r\n        destGroup: string;\r\n        destGroupRoxie: string;\r\n        destLogicalName: string;\r\n        sourceDali: string;\r\n        srcusername: string;\r\n        srcpassword: string;\r\n        overwrite: boolean;\r\n        ensure: boolean;\r\n        replicate: boolean;\r\n        ReplicateOffset: int;\r\n        maxConnections: int;\r\n        throttle: int;\r\n        transferBufferSize: int;\r\n        nosplit: boolean;\r\n        norecover: boolean;\r\n        compress: boolean;\r\n        Wrap: boolean;\r\n        Multicopy: boolean;\r\n        SourceDiffKeyName: string;\r\n        DestDiffKeyName: string;\r\n        superCopy: boolean;\r\n        push: boolean;\r\n        pull: boolean;\r\n        ifnewer: boolean;\r\n        noCommon: boolean;\r\n        encrypt: string;\r\n        decrypt: string;\r\n        preserveCompression: boolean;\r\n        DFUServerQueue: string;\r\n        ExpireDays: int;\r\n    }\r\n\r\n    export interface CopyResponse {\r\n        Exceptions: Exceptions;\r\n        result: string;\r\n    }\r\n\r\n    export interface CreateDFUPublisherWorkunit {\r\n        DFUServerQueue: string;\r\n    }\r\n\r\n    export interface result {\r\n        ID: string;\r\n        DFUServerName: string;\r\n        ClusterName: string;\r\n        JobName: string;\r\n        Queue: string;\r\n        User: string;\r\n        isProtected: boolean;\r\n        Command: int;\r\n        CommandMessage: string;\r\n        PercentDone: int;\r\n        SecsLeft: int;\r\n        ProgressMessage: string;\r\n        SummaryMessage: string;\r\n        State: int;\r\n        SourceLogicalName: string;\r\n        SourceIP: string;\r\n        SourceFilePath: string;\r\n        SourceDali: string;\r\n        SourceRecordSize: int;\r\n        SourceFormat: int;\r\n        RowTag: string;\r\n        SourceNumParts: int;\r\n        SourceDirectory: string;\r\n        DestLogicalName: string;\r\n        DestGroupName: string;\r\n        DestDirectory: string;\r\n        DestIP: string;\r\n        DestFilePath: string;\r\n        DestFormat: int;\r\n        DestNumParts: int;\r\n        DestRecordSize: int;\r\n        Replicate: boolean;\r\n        Overwrite: boolean;\r\n        Compress: boolean;\r\n        SourceCsvSeparate: string;\r\n        SourceCsvQuote: string;\r\n        SourceCsvTerminate: string;\r\n        SourceCsvEscape: string;\r\n        TimeStarted: string;\r\n        TimeStopped: string;\r\n        StateMessage: string;\r\n        MonitorEventName: string;\r\n        MonitorSub: boolean;\r\n        MonitorShotLimit: int;\r\n        SourceDiffKeyName: string;\r\n        DestDiffKeyName: string;\r\n        Archived: boolean;\r\n        encrypt: string;\r\n        decrypt: string;\r\n        failIfNoSourceFile: boolean;\r\n        recordStructurePresent: boolean;\r\n        quotedTerminator: boolean;\r\n        preserveCompression: boolean;\r\n        expireDays: int;\r\n        PreserveFileParts: boolean;\r\n        FileAccessCost: double;\r\n        KbPerSecAve: int;\r\n        KbPerSec: int;\r\n    }\r\n\r\n    export interface CreateDFUPublisherWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n        result: result;\r\n    }\r\n\r\n    export interface CreateDFUWorkunit {\r\n        DFUServerQueue: string;\r\n    }\r\n\r\n    export interface CreateDFUWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n        result: result;\r\n    }\r\n\r\n    export interface DFUWUFileRequest {\r\n        Wuid?: string;\r\n        Type?: string;\r\n        PlainText?: string;\r\n    }\r\n\r\n    export interface DFUWUFileResponse {\r\n        Exceptions: Exceptions;\r\n        file: string;\r\n    }\r\n\r\n    export interface DFUWUSearchRequest {\r\n\r\n    }\r\n\r\n    export interface ClusterNames {\r\n        ClusterName: string[];\r\n    }\r\n\r\n    export interface DFUWUSearchResponse {\r\n        Exceptions: Exceptions;\r\n        ClusterNames: ClusterNames;\r\n    }\r\n\r\n    export interface wuids {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface DFUWorkunitsActionRequest {\r\n        wuids?: wuids;\r\n        Type?: DFUWUActions;\r\n    }\r\n\r\n    export interface DFUActionResult {\r\n        ID: string;\r\n        Action: string;\r\n        Result: string;\r\n    }\r\n\r\n    export interface DFUActionResults {\r\n        DFUActionResult: DFUActionResult[];\r\n    }\r\n\r\n    export interface DFUWorkunitsActionResponse {\r\n        Exceptions: Exceptions;\r\n        FirstColumn: string;\r\n        DFUActionResults: DFUActionResults;\r\n    }\r\n\r\n    export interface DeleteDFUWorkunit {\r\n        wuid: string;\r\n    }\r\n\r\n    export interface DeleteDFUWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n        result: boolean;\r\n    }\r\n\r\n    export interface DeleteDFUWorkunits {\r\n        wuids: wuids;\r\n    }\r\n\r\n    export interface DeleteDFUWorkunitsResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface Names {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface DeleteDropZoneFilesRequest {\r\n        DropZoneName?: string;\r\n        NetAddress?: string;\r\n        Path?: string;\r\n        OS?: string;\r\n        Names?: Names;\r\n    }\r\n\r\n    export interface Despray {\r\n        destGroup: string;\r\n        sourceLogicalName: string;\r\n        destIP: string;\r\n        destPath: string;\r\n        destPlane: string;\r\n        dstxml: base64Binary;\r\n        overwrite: boolean;\r\n        maxConnections: int;\r\n        throttle: int;\r\n        transferBufferSize: int;\r\n        splitprefix: string;\r\n        norecover: boolean;\r\n        wrap: boolean;\r\n        multiCopy: boolean;\r\n        SingleConnection: boolean;\r\n        DFUServerQueue: string;\r\n        compress: boolean;\r\n        encrypt: string;\r\n        decrypt: string;\r\n    }\r\n\r\n    export interface DesprayResponse {\r\n        Exceptions: Exceptions;\r\n        wuid: string;\r\n    }\r\n\r\n    export interface DfuMonitorRequest {\r\n        EventName?: string;\r\n        LogicalName?: string;\r\n        Ip?: string;\r\n        Filename?: string;\r\n        Sub?: boolean;\r\n        ShotLimit?: int;\r\n    }\r\n\r\n    export interface DfuMonitorResponse {\r\n        Exceptions: Exceptions;\r\n        wuid: string;\r\n    }\r\n\r\n    export interface DropZoneFileSearchRequest {\r\n        DropZoneName?: string;\r\n        Server?: string;\r\n        ECLWatchVisibleOnly?: boolean;\r\n        NameFilter?: string;\r\n    }\r\n\r\n    export interface PhysicalFileStruct {\r\n        name: string;\r\n        Server: string;\r\n        isDir: boolean;\r\n        filesize: long;\r\n        modifiedtime: string;\r\n        Path: string;\r\n        Files: Files;\r\n    }\r\n\r\n    export interface Files {\r\n        PhysicalFileStruct: PhysicalFileStruct[];\r\n    }\r\n\r\n    export interface DropZoneFileSearchResponse {\r\n        Exceptions: Exceptions;\r\n        Files: Files;\r\n        Warning: string;\r\n    }\r\n\r\n    export interface DropZoneFilesRequest {\r\n        DropZoneName?: string;\r\n        NetAddress?: string;\r\n        Path?: string;\r\n        OS?: string;\r\n        Subfolder?: string;\r\n        ECLWatchVisibleOnly?: boolean;\r\n        DirectoryOnly?: boolean;\r\n    }\r\n\r\n    export interface DropZone {\r\n        Name: string;\r\n        NetAddress: string;\r\n        Path: string;\r\n        Computer: string;\r\n        Linux: string;\r\n    }\r\n\r\n    export interface DropZones {\r\n        DropZone: DropZone[];\r\n    }\r\n\r\n    export interface DropZoneFilesResponse {\r\n        Exceptions: Exceptions;\r\n        DropZoneName: string;\r\n        NetAddress: string;\r\n        Path: string;\r\n        OS: int;\r\n        ECLWatchVisibleOnly: boolean;\r\n        DropZones: DropZones;\r\n        Files: Files;\r\n    }\r\n\r\n    export interface EchoDateTime {\r\n        dt: dateTime;\r\n    }\r\n\r\n    export interface EchoDateTimeResponse {\r\n        result: dateTime;\r\n    }\r\n\r\n    export interface FileListRequest {\r\n        DropZoneName?: string;\r\n        Netaddr?: string;\r\n        Path?: string;\r\n        Mask?: string;\r\n        OS?: string;\r\n        DirectoryOnly?: boolean;\r\n    }\r\n\r\n    export interface files {\r\n        PhysicalFileStruct: PhysicalFileStruct[];\r\n    }\r\n\r\n    export interface FileListResponse {\r\n        Exceptions: Exceptions;\r\n        Netaddr: string;\r\n        Path: string;\r\n        Mask: string;\r\n        OS: int;\r\n        DirectoryOnly: boolean;\r\n        AcceptLanguage: string;\r\n        files: files;\r\n    }\r\n\r\n    export interface GetDFUExceptions {\r\n        wuid: string;\r\n    }\r\n\r\n    export interface DFUException {\r\n        Code: int;\r\n        Message: string;\r\n    }\r\n\r\n    export interface result2 {\r\n        DFUException: DFUException[];\r\n    }\r\n\r\n    export interface GetDFUExceptionsResponse {\r\n        Exceptions: Exceptions;\r\n        result: result2;\r\n    }\r\n\r\n    export interface ProgressRequest {\r\n        wuid?: string;\r\n    }\r\n\r\n    export interface ProgressResponse {\r\n        Exceptions: Exceptions;\r\n        wuid: string;\r\n        PercentDone: int;\r\n        SecsLeft: int;\r\n        KbPerSecAve: int;\r\n        KbPerSec: int;\r\n        SlavesDone: int;\r\n        TimeTaken: string;\r\n        ProgressMessage: string;\r\n        SummaryMessage: string;\r\n        State: string;\r\n    }\r\n\r\n    export interface GetDFUServerQueuesRequest {\r\n        DFUServerName?: string;\r\n    }\r\n\r\n    export interface GetDFUServerQueuesResponse {\r\n        Exceptions: Exceptions;\r\n        Names: Names;\r\n    }\r\n\r\n    export interface GetDFUWorkunit {\r\n        wuid: string;\r\n    }\r\n\r\n    export interface GetDFUWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n        result: result;\r\n        AutoRefresh: int;\r\n    }\r\n\r\n    export interface GetDFUWorkunits {\r\n        Wuid: string;\r\n        Owner: string;\r\n        Cluster: string;\r\n        StateReq: string;\r\n        Type: string;\r\n        Jobname: string;\r\n        PageSize: long;\r\n        CurrentPage: int;\r\n        PageStartFrom: long;\r\n        Sortby: string;\r\n        Descending: boolean;\r\n        CacheHint: long;\r\n        ParentWuid: string;\r\n        PublisherWuid: string;\r\n        includeProgressMessages: boolean;\r\n        includeTimings: boolean;\r\n        includeTransferRate: boolean;\r\n    }\r\n\r\n    export interface DFUWorkunit {\r\n        ID: string;\r\n        DFUServerName: string;\r\n        ClusterName: string;\r\n        JobName: string;\r\n        Queue: string;\r\n        User: string;\r\n        isProtected: boolean;\r\n        Command: int;\r\n        CommandMessage: string;\r\n        PercentDone: int;\r\n        SecsLeft: int;\r\n        ProgressMessage: string;\r\n        SummaryMessage: string;\r\n        State: int;\r\n        SourceLogicalName: string;\r\n        SourceIP: string;\r\n        SourceFilePath: string;\r\n        SourceDali: string;\r\n        SourceRecordSize: int;\r\n        SourceFormat: int;\r\n        RowTag: string;\r\n        SourceNumParts: int;\r\n        SourceDirectory: string;\r\n        DestLogicalName: string;\r\n        DestGroupName: string;\r\n        DestDirectory: string;\r\n        DestIP: string;\r\n        DestFilePath: string;\r\n        DestFormat: int;\r\n        DestNumParts: int;\r\n        DestRecordSize: int;\r\n        Replicate: boolean;\r\n        Overwrite: boolean;\r\n        Compress: boolean;\r\n        SourceCsvSeparate: string;\r\n        SourceCsvQuote: string;\r\n        SourceCsvTerminate: string;\r\n        SourceCsvEscape: string;\r\n        TimeStarted: string;\r\n        TimeStopped: string;\r\n        StateMessage: string;\r\n        MonitorEventName: string;\r\n        MonitorSub: boolean;\r\n        MonitorShotLimit: int;\r\n        SourceDiffKeyName: string;\r\n        DestDiffKeyName: string;\r\n        Archived: boolean;\r\n        encrypt: string;\r\n        decrypt: string;\r\n        failIfNoSourceFile: boolean;\r\n        recordStructurePresent: boolean;\r\n        quotedTerminator: boolean;\r\n        preserveCompression: boolean;\r\n        expireDays: int;\r\n        PreserveFileParts: boolean;\r\n        FileAccessCost: double;\r\n        KbPerSecAve: int;\r\n        KbPerSec: int;\r\n    }\r\n\r\n    export interface results {\r\n        DFUWorkunit: DFUWorkunit[];\r\n    }\r\n\r\n    export interface GetDFUWorkunitsResponse {\r\n        Exceptions: Exceptions;\r\n        results: results;\r\n        Type: string;\r\n        Owner: string;\r\n        Cluster: string;\r\n        StateReq: string;\r\n        PageSize: long;\r\n        PrevPage: long;\r\n        NextPage: long;\r\n        LastPage: long;\r\n        NumWUs: long;\r\n        PageStartFrom: long;\r\n        PageEndAt: long;\r\n        First: boolean;\r\n        Sortby: string;\r\n        Descending: boolean;\r\n        BasicQuery: string;\r\n        Filters: string;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface GetRemoteTargetsRequest {\r\n\r\n    }\r\n\r\n    export interface TargetNames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface GetRemoteTargetsResponse {\r\n        Exceptions: Exceptions;\r\n        TargetNames: TargetNames;\r\n        AllowForeign: boolean;\r\n    }\r\n\r\n    export interface GetSprayTargetsRequest {\r\n\r\n    }\r\n\r\n    export interface GroupNode {\r\n        Name: string;\r\n        ClusterType: string;\r\n        ReplicateOutputs: boolean;\r\n    }\r\n\r\n    export interface GroupNodes {\r\n        GroupNode: GroupNode[];\r\n    }\r\n\r\n    export interface GetSprayTargetsResponse {\r\n        Exceptions: Exceptions;\r\n        GroupNodes: GroupNodes;\r\n    }\r\n\r\n    export interface OpenSaveRequest {\r\n        Location?: string;\r\n        Path?: string;\r\n        Name?: string;\r\n        Type?: string;\r\n        DateTime?: string;\r\n        BinaryFile?: boolean;\r\n    }\r\n\r\n    export interface OpenSaveResponse {\r\n        Exceptions: Exceptions;\r\n        Location: string;\r\n        Path: string;\r\n        Name: string;\r\n        Type: string;\r\n        DateTime: string;\r\n        Viewable: boolean;\r\n    }\r\n\r\n    export interface FileSprayPingRequest {\r\n\r\n    }\r\n\r\n    export interface FileSprayPingResponse {\r\n\r\n    }\r\n\r\n    export interface Rename {\r\n        srcname: string;\r\n        dstname: string;\r\n        overwrite: boolean;\r\n        DFUServerQueue: string;\r\n    }\r\n\r\n    export interface RenameResponse {\r\n        Exceptions: Exceptions;\r\n        wuid: string;\r\n    }\r\n\r\n    export interface Replicate {\r\n        sourceLogicalName: string;\r\n        replicateOffset: int;\r\n        cluster: string;\r\n        repeatLast: boolean;\r\n        onlyRepeated: boolean;\r\n        DFUServerQueue: string;\r\n    }\r\n\r\n    export interface ReplicateResponse {\r\n        Exceptions: Exceptions;\r\n        wuid: string;\r\n    }\r\n\r\n    export interface ShowResultRequest {\r\n        Result?: string;\r\n    }\r\n\r\n    export interface ShowResultResponse {\r\n        Exceptions: Exceptions;\r\n        Result: string;\r\n    }\r\n\r\n    export interface SprayFixed {\r\n        sourceIP: string;\r\n        sourcePlane: string;\r\n        sourcePath: string;\r\n        srcxml: base64Binary;\r\n        sourceFormat: string;\r\n        sourceRecordSize: int;\r\n        destGroup: string;\r\n        destLogicalName: string;\r\n        destNumParts: int;\r\n        overwrite: boolean;\r\n        replicate: boolean;\r\n        ReplicateOffset: int;\r\n        maxConnections: int;\r\n        throttle: int;\r\n        transferBufferSize: int;\r\n        prefix: string;\r\n        nosplit: boolean;\r\n        norecover: boolean;\r\n        compress: boolean;\r\n        push: boolean;\r\n        pull: boolean;\r\n        noCommon: boolean;\r\n        encrypt: string;\r\n        decrypt: string;\r\n        wrap: boolean;\r\n        failIfNoSourceFile: boolean;\r\n        recordStructurePresent: boolean;\r\n        quotedTerminator: boolean;\r\n        expireDays: int;\r\n        DFUServerQueue: string;\r\n    }\r\n\r\n    export interface SprayFixedResponse {\r\n        Exceptions: Exceptions;\r\n        wuid: string;\r\n    }\r\n\r\n    export interface SprayVariable {\r\n        sourceIP: string;\r\n        sourcePlane: string;\r\n        sourcePath: string;\r\n        srcxml: base64Binary;\r\n        sourceMaxRecordSize: int;\r\n        sourceFormat: int;\r\n        NoSourceCsvSeparator: boolean;\r\n        sourceCsvSeparate: string;\r\n        sourceCsvTerminate: string;\r\n        sourceCsvQuote: string;\r\n        sourceCsvEscape: string;\r\n        sourceRowTag: string;\r\n        destGroup: string;\r\n        destLogicalName: string;\r\n        destNumParts: int;\r\n        overwrite: boolean;\r\n        replicate: boolean;\r\n        ReplicateOffset: int;\r\n        maxConnections: int;\r\n        throttle: int;\r\n        transferBufferSize: int;\r\n        prefix: string;\r\n        nosplit: boolean;\r\n        norecover: boolean;\r\n        compress: boolean;\r\n        push: boolean;\r\n        pull: boolean;\r\n        noCommon: boolean;\r\n        encrypt: string;\r\n        decrypt: string;\r\n        failIfNoSourceFile: boolean;\r\n        recordStructurePresent: boolean;\r\n        quotedTerminator: boolean;\r\n        sourceRowPath: string;\r\n        isJSON: boolean;\r\n        expireDays: int;\r\n        DFUServerQueue: string;\r\n        srcUsername: string;\r\n        srcPassword: string;\r\n    }\r\n\r\n    export interface SprayResponse {\r\n        Exceptions: Exceptions;\r\n        wuid: string;\r\n    }\r\n\r\n    export interface SubmitDFUWorkunit {\r\n        wuid: string;\r\n    }\r\n\r\n    export interface SubmitDFUWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface wu {\r\n        ID: string;\r\n        DFUServerName: string;\r\n        ClusterName: string;\r\n        JobName: string;\r\n        Queue: string;\r\n        User: string;\r\n        isProtected: boolean;\r\n        Command: int;\r\n        CommandMessage: string;\r\n        PercentDone: int;\r\n        SecsLeft: int;\r\n        ProgressMessage: string;\r\n        SummaryMessage: string;\r\n        State: int;\r\n        SourceLogicalName: string;\r\n        SourceIP: string;\r\n        SourceFilePath: string;\r\n        SourceDali: string;\r\n        SourceRecordSize: int;\r\n        SourceFormat: int;\r\n        RowTag: string;\r\n        SourceNumParts: int;\r\n        SourceDirectory: string;\r\n        DestLogicalName: string;\r\n        DestGroupName: string;\r\n        DestDirectory: string;\r\n        DestIP: string;\r\n        DestFilePath: string;\r\n        DestFormat: int;\r\n        DestNumParts: int;\r\n        DestRecordSize: int;\r\n        Replicate: boolean;\r\n        Overwrite: boolean;\r\n        Compress: boolean;\r\n        SourceCsvSeparate: string;\r\n        SourceCsvQuote: string;\r\n        SourceCsvTerminate: string;\r\n        SourceCsvEscape: string;\r\n        TimeStarted: string;\r\n        TimeStopped: string;\r\n        StateMessage: string;\r\n        MonitorEventName: string;\r\n        MonitorSub: boolean;\r\n        MonitorShotLimit: int;\r\n        SourceDiffKeyName: string;\r\n        DestDiffKeyName: string;\r\n        Archived: boolean;\r\n        encrypt: string;\r\n        decrypt: string;\r\n        failIfNoSourceFile: boolean;\r\n        recordStructurePresent: boolean;\r\n        quotedTerminator: boolean;\r\n        preserveCompression: boolean;\r\n        expireDays: int;\r\n        PreserveFileParts: boolean;\r\n        FileAccessCost: double;\r\n        KbPerSecAve: int;\r\n        KbPerSec: int;\r\n    }\r\n\r\n    export interface UpdateDFUWorkunit {\r\n        wu: wu;\r\n        ClusterOrig: string;\r\n        JobNameOrig: string;\r\n        isProtectedOrig: boolean;\r\n        StateOrig: int;\r\n    }\r\n\r\n    export interface UpdateDFUWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n}\r\n\r\nexport class FileSprayServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"FileSpray\", \"1.26\");\r\n    }\r\n\r\n    AbortDFUWorkunit(request: Partial<FileSpray.AbortDFUWorkunit>): Promise<FileSpray.AbortDFUWorkunitResponse> {\r\n        return this._connection.send(\"AbortDFUWorkunit\", request, \"json\", false, undefined, \"AbortDFUWorkunitResponse\");\r\n    }\r\n\r\n    Copy(request: Partial<FileSpray.Copy>): Promise<FileSpray.CopyResponse> {\r\n        return this._connection.send(\"Copy\", request, \"json\", false, undefined, \"CopyResponse\");\r\n    }\r\n\r\n    CreateDFUPublisherWorkunit(request: Partial<FileSpray.CreateDFUPublisherWorkunit>): Promise<FileSpray.CreateDFUPublisherWorkunitResponse> {\r\n        return this._connection.send(\"CreateDFUPublisherWorkunit\", request, \"json\", false, undefined, \"CreateDFUPublisherWorkunitResponse\");\r\n    }\r\n\r\n    CreateDFUWorkunit(request: Partial<FileSpray.CreateDFUWorkunit>): Promise<FileSpray.CreateDFUWorkunitResponse> {\r\n        return this._connection.send(\"CreateDFUWorkunit\", request, \"json\", false, undefined, \"CreateDFUWorkunitResponse\");\r\n    }\r\n\r\n    DFUWUFile(request: Partial<FileSpray.DFUWUFileRequest>): Promise<FileSpray.DFUWUFileResponse> {\r\n        return this._connection.send(\"DFUWUFile\", request, \"json\", false, undefined, \"DFUWUFileResponse\");\r\n    }\r\n\r\n    DFUWUSearch(request: Partial<FileSpray.DFUWUSearchRequest>): Promise<FileSpray.DFUWUSearchResponse> {\r\n        return this._connection.send(\"DFUWUSearch\", request, \"json\", false, undefined, \"DFUWUSearchResponse\");\r\n    }\r\n\r\n    DFUWorkunitsAction(request: Partial<FileSpray.DFUWorkunitsActionRequest>): Promise<FileSpray.DFUWorkunitsActionResponse> {\r\n        return this._connection.send(\"DFUWorkunitsAction\", request, \"json\", false, undefined, \"DFUWorkunitsActionResponse\");\r\n    }\r\n\r\n    DeleteDFUWorkunit(request: Partial<FileSpray.DeleteDFUWorkunit>): Promise<FileSpray.DeleteDFUWorkunitResponse> {\r\n        return this._connection.send(\"DeleteDFUWorkunit\", request, \"json\", false, undefined, \"DeleteDFUWorkunitResponse\");\r\n    }\r\n\r\n    DeleteDFUWorkunits(request: Partial<FileSpray.DeleteDFUWorkunits>): Promise<FileSpray.DeleteDFUWorkunitsResponse> {\r\n        return this._connection.send(\"DeleteDFUWorkunits\", request, \"json\", false, undefined, \"DeleteDFUWorkunitsResponse\");\r\n    }\r\n\r\n    DeleteDropZoneFiles(request: Partial<FileSpray.DeleteDropZoneFilesRequest>): Promise<FileSpray.DFUWorkunitsActionResponse> {\r\n        return this._connection.send(\"DeleteDropZoneFiles\", request, \"json\", false, undefined, \"DFUWorkunitsActionResponse\");\r\n    }\r\n\r\n    Despray(request: Partial<FileSpray.Despray>): Promise<FileSpray.DesprayResponse> {\r\n        return this._connection.send(\"Despray\", request, \"json\", false, undefined, \"DesprayResponse\");\r\n    }\r\n\r\n    DfuMonitor(request: Partial<FileSpray.DfuMonitorRequest>): Promise<FileSpray.DfuMonitorResponse> {\r\n        return this._connection.send(\"DfuMonitor\", request, \"json\", false, undefined, \"DfuMonitorResponse\");\r\n    }\r\n\r\n    DropZoneFileSearch(request: Partial<FileSpray.DropZoneFileSearchRequest>): Promise<FileSpray.DropZoneFileSearchResponse> {\r\n        return this._connection.send(\"DropZoneFileSearch\", request, \"json\", false, undefined, \"DropZoneFileSearchResponse\");\r\n    }\r\n\r\n    DropZoneFiles(request: Partial<FileSpray.DropZoneFilesRequest>): Promise<FileSpray.DropZoneFilesResponse> {\r\n        return this._connection.send(\"DropZoneFiles\", request, \"json\", false, undefined, \"DropZoneFilesResponse\");\r\n    }\r\n\r\n    EchoDateTime(request: Partial<FileSpray.EchoDateTime>): Promise<FileSpray.EchoDateTimeResponse> {\r\n        return this._connection.send(\"EchoDateTime\", request, \"json\", false, undefined, \"EchoDateTimeResponse\");\r\n    }\r\n\r\n    FileList(request: Partial<FileSpray.FileListRequest>): Promise<FileSpray.FileListResponse> {\r\n        return this._connection.send(\"FileList\", request, \"json\", false, undefined, \"FileListResponse\");\r\n    }\r\n\r\n    GetDFUExceptions(request: Partial<FileSpray.GetDFUExceptions>): Promise<FileSpray.GetDFUExceptionsResponse> {\r\n        return this._connection.send(\"GetDFUExceptions\", request, \"json\", false, undefined, \"GetDFUExceptionsResponse\");\r\n    }\r\n\r\n    GetDFUProgress(request: Partial<FileSpray.ProgressRequest>): Promise<FileSpray.ProgressResponse> {\r\n        return this._connection.send(\"GetDFUProgress\", request, \"json\", false, undefined, \"ProgressResponse\");\r\n    }\r\n\r\n    GetDFUServerQueues(request: Partial<FileSpray.GetDFUServerQueuesRequest>): Promise<FileSpray.GetDFUServerQueuesResponse> {\r\n        return this._connection.send(\"GetDFUServerQueues\", request, \"json\", false, undefined, \"GetDFUServerQueuesResponse\");\r\n    }\r\n\r\n    GetDFUWorkunit(request: Partial<FileSpray.GetDFUWorkunit>): Promise<FileSpray.GetDFUWorkunitResponse> {\r\n        return this._connection.send(\"GetDFUWorkunit\", request, \"json\", false, undefined, \"GetDFUWorkunitResponse\");\r\n    }\r\n\r\n    GetDFUWorkunits(request: Partial<FileSpray.GetDFUWorkunits>): Promise<FileSpray.GetDFUWorkunitsResponse> {\r\n        return this._connection.send(\"GetDFUWorkunits\", request, \"json\", false, undefined, \"GetDFUWorkunitsResponse\");\r\n    }\r\n\r\n    GetRemoteTargets(request: Partial<FileSpray.GetRemoteTargetsRequest>): Promise<FileSpray.GetRemoteTargetsResponse> {\r\n        return this._connection.send(\"GetRemoteTargets\", request, \"json\", false, undefined, \"GetRemoteTargetsResponse\");\r\n    }\r\n\r\n    GetSprayTargets(request: Partial<FileSpray.GetSprayTargetsRequest>): Promise<FileSpray.GetSprayTargetsResponse> {\r\n        return this._connection.send(\"GetSprayTargets\", request, \"json\", false, undefined, \"GetSprayTargetsResponse\");\r\n    }\r\n\r\n    OpenSave(request: Partial<FileSpray.OpenSaveRequest>): Promise<FileSpray.OpenSaveResponse> {\r\n        return this._connection.send(\"OpenSave\", request, \"json\", false, undefined, \"OpenSaveResponse\");\r\n    }\r\n\r\n    Ping(request: Partial<FileSpray.FileSprayPingRequest>): Promise<FileSpray.FileSprayPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"FileSprayPingResponse\");\r\n    }\r\n\r\n    Rename(request: Partial<FileSpray.Rename>): Promise<FileSpray.RenameResponse> {\r\n        return this._connection.send(\"Rename\", request, \"json\", false, undefined, \"RenameResponse\");\r\n    }\r\n\r\n    Replicate(request: Partial<FileSpray.Replicate>): Promise<FileSpray.ReplicateResponse> {\r\n        return this._connection.send(\"Replicate\", request, \"json\", false, undefined, \"ReplicateResponse\");\r\n    }\r\n\r\n    ShowResult(request: Partial<FileSpray.ShowResultRequest>): Promise<FileSpray.ShowResultResponse> {\r\n        return this._connection.send(\"ShowResult\", request, \"json\", false, undefined, \"ShowResultResponse\");\r\n    }\r\n\r\n    SprayFixed(request: Partial<FileSpray.SprayFixed>): Promise<FileSpray.SprayFixedResponse> {\r\n        return this._connection.send(\"SprayFixed\", request, \"json\", false, undefined, \"SprayFixedResponse\");\r\n    }\r\n\r\n    SprayVariable(request: Partial<FileSpray.SprayVariable>): Promise<FileSpray.SprayResponse> {\r\n        return this._connection.send(\"SprayVariable\", request, \"json\", false, undefined, \"SprayResponse\");\r\n    }\r\n\r\n    SubmitDFUWorkunit(request: Partial<FileSpray.SubmitDFUWorkunit>): Promise<FileSpray.SubmitDFUWorkunitResponse> {\r\n        return this._connection.send(\"SubmitDFUWorkunit\", request, \"json\", false, undefined, \"SubmitDFUWorkunitResponse\");\r\n    }\r\n\r\n    UpdateDFUWorkunit(request: Partial<FileSpray.UpdateDFUWorkunit>): Promise<FileSpray.UpdateDFUWorkunitResponse> {\r\n        return this._connection.send(\"UpdateDFUWorkunit\", request, \"json\", false, undefined, \"UpdateDFUWorkunitResponse\");\r\n    }\r\n\r\n}\r\n","import { FileSprayServiceBase, FileSpray } from \"./wsdl/FileSpray/v1.26/FileSpray\";\r\n\r\nexport {\r\n    FileSpray\r\n};\r\n\r\ntype UpdateDFUWorkunitMinusWU = Omit<FileSpray.UpdateDFUWorkunit, \"wu\">;\r\ntype UpdateDFUWorkunitWU = FileSpray.UpdateDFUWorkunit[\"wu\"];\r\n\r\nexport enum FileSprayStates {\r\n    unknown = 0,\r\n    scheduled,\r\n    queued,\r\n    started,\r\n    aborted,\r\n    failed,\r\n    finished,\r\n    monitoring,\r\n    aborting,\r\n    notfound = 999\r\n}\r\n\r\nexport interface UpdateDFUWorkunitEx extends UpdateDFUWorkunitMinusWU {\r\n    wu?: Partial<UpdateDFUWorkunitWU>\r\n}\r\n\r\nexport class FileSprayService extends FileSprayServiceBase {\r\n\r\n    DFUWUFileEx(request: FileSpray.DFUWUFileRequest): Promise<string> {\r\n        return this._connection.send(\"DFUWUFile\", request, \"text\");\r\n    }\r\n\r\n    SprayFixedEx(request: Partial<FileSpray.SprayFixed>): Promise<FileSpray.SprayFixedResponse> {\r\n        return this._connection.send(\"SprayFixed\", request);\r\n    }\r\n\r\n    SprayVariableEx(request: Partial<FileSpray.SprayVariable>): Promise<FileSpray.SprayResponse> {\r\n        return this._connection.send(\"SprayVariable\", request, \"json\", false, null, \"SprayResponse\");\r\n    }\r\n\r\n    DesprayEx(request: Partial<FileSpray.Despray>): Promise<FileSpray.DesprayResponse> {\r\n        return this._connection.send(\"Despray\", request);\r\n    }\r\n\r\n    UpdateDFUWorkunitEx(request: Partial<UpdateDFUWorkunitEx>): Promise<FileSpray.UpdateDFUWorkunitResponse> {\r\n        return this._connection.send(\"UpdateDFUWorkunit\", request, \"json\", false, undefined, \"UpdateDFUWorkunitResponse\");\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsAccess {\r\n\r\n    export type int = number;\r\n    export type unsignedInt = number;\r\n    export type long = number;\r\n    export type base64Binary = string;\r\n\r\n    export enum ViewMemberType {\r\n        User = \"User\",\r\n        Group = \"Group\"\r\n    }\r\n\r\n    export enum UserSortBy {\r\n        username = \"username\",\r\n        fullname = \"fullname\",\r\n        passwordexpiration = \"passwordexpiration\",\r\n        employeeID = \"employeeID\",\r\n        employeeNumber = \"employeeNumber\"\r\n    }\r\n\r\n    export enum GroupSortBy {\r\n        Name = \"Name\",\r\n        ManagedBy = \"ManagedBy\"\r\n    }\r\n\r\n    export enum AccountTypeReq {\r\n        Any = \"Any\",\r\n        User = \"User\",\r\n        Group = \"Group\"\r\n    }\r\n\r\n    export enum ResourcePermissionSortBy {\r\n        Name = \"Name\",\r\n        Type = \"Type\"\r\n    }\r\n\r\n    export enum ResourceSortBy {\r\n        Name = \"Name\"\r\n    }\r\n\r\n    export interface AccountPermissionsRequest {\r\n        AccountName?: string;\r\n        IsGroup?: boolean;\r\n        IncludeGroup?: boolean;\r\n    }\r\n\r\n    export interface BasednNames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface Permission {\r\n        BasednName: string;\r\n        rname: string;\r\n        prefix: string;\r\n        ResourceName: string;\r\n        PermissionName: string;\r\n        allow_access: boolean;\r\n        allow_read: boolean;\r\n        allow_write: boolean;\r\n        allow_full: boolean;\r\n        deny_access: boolean;\r\n        deny_read: boolean;\r\n        deny_write: boolean;\r\n        deny_full: boolean;\r\n    }\r\n\r\n    export interface Permissions {\r\n        Permission: Permission[];\r\n    }\r\n\r\n    export interface GroupPermission {\r\n        GroupName: string;\r\n        BasednNames: BasednNames;\r\n        Permissions: Permissions;\r\n    }\r\n\r\n    export interface GroupPermissions {\r\n        GroupPermission: GroupPermission[];\r\n    }\r\n\r\n    export interface AccountPermissionsResponse {\r\n        AccountName: string;\r\n        IsGroup: boolean;\r\n        IncludeGroup: boolean;\r\n        BasednNames: BasednNames;\r\n        Permissions: Permissions;\r\n        GroupPermissions: GroupPermissions;\r\n    }\r\n\r\n    export interface AccountPermissionsV2Request {\r\n        ResourceName?: string;\r\n        AccountName?: string;\r\n        IsGroup?: boolean;\r\n        IncludeGroup?: boolean;\r\n    }\r\n\r\n    export interface AccountPermissionsV2Response {\r\n        BasednNames: BasednNames;\r\n        Permissions: Permissions;\r\n        GroupPermissions: GroupPermissions;\r\n    }\r\n\r\n    export interface AddUserRequest {\r\n        username?: string;\r\n        firstname?: string;\r\n        lastname?: string;\r\n        password1?: string;\r\n        password2?: string;\r\n        employeeID?: string;\r\n        employeeNumber?: string;\r\n    }\r\n\r\n    export interface AddUserResponse {\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface AddViewRequest {\r\n        viewname?: string;\r\n        description?: string;\r\n    }\r\n\r\n    export interface AddViewResponse {\r\n        viewname: string;\r\n        description: string;\r\n    }\r\n\r\n    export interface AddViewColumnRequest {\r\n        viewname?: string;\r\n        filename?: string;\r\n        columnname?: string;\r\n    }\r\n\r\n    export interface AddViewColumnResponse {\r\n        viewname: string;\r\n        filename: string;\r\n        columnname: string;\r\n    }\r\n\r\n    export interface AddViewMemberRequest {\r\n        viewname?: string;\r\n        membername?: string;\r\n        membertype?: ViewMemberType;\r\n    }\r\n\r\n    export interface AddViewMemberResponse {\r\n        viewname: string;\r\n        membername: string;\r\n        membertype: ViewMemberType;\r\n    }\r\n\r\n    export interface ClearPermissionsCacheRequest {\r\n\r\n    }\r\n\r\n    export interface ClearPermissionsCacheResponse {\r\n        retcode: int;\r\n    }\r\n\r\n    export interface DeleteViewRequest {\r\n        viewname?: string;\r\n    }\r\n\r\n    export interface DeleteViewResponse {\r\n        viewname: string;\r\n    }\r\n\r\n    export interface DeleteViewColumnRequest {\r\n        viewname?: string;\r\n        filename?: string;\r\n        columnname?: string;\r\n    }\r\n\r\n    export interface DeleteViewColumnResponse {\r\n        viewname: string;\r\n        filename: string;\r\n        columnname: string;\r\n    }\r\n\r\n    export interface DeleteViewMemberRequest {\r\n        viewname?: string;\r\n        membername?: string;\r\n        membertype?: ViewMemberType;\r\n    }\r\n\r\n    export interface DeleteViewMemberResponse {\r\n        viewname: string;\r\n        membername: string;\r\n        membertype: ViewMemberType;\r\n    }\r\n\r\n    export interface DisableScopeScansRequest {\r\n\r\n    }\r\n\r\n    export interface scopeScansStatus {\r\n        isEnabled: boolean;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface DisableScopeScansResponse {\r\n        scopeScansStatus: scopeScansStatus;\r\n    }\r\n\r\n    export interface EnableScopeScansRequest {\r\n\r\n    }\r\n\r\n    export interface EnableScopeScansResponse {\r\n        scopeScansStatus: scopeScansStatus;\r\n    }\r\n\r\n    export interface FilePermissionRequest {\r\n        FileName?: string;\r\n        UserName?: string;\r\n        GroupName?: string;\r\n    }\r\n\r\n    export interface User {\r\n        username: string;\r\n        fullname: string;\r\n        passwordexpiration: string;\r\n        employeeID: string;\r\n        employeeNumber: string;\r\n    }\r\n\r\n    export interface Users {\r\n        User: User[];\r\n    }\r\n\r\n    export interface Group {\r\n        name: string;\r\n        deletable: boolean;\r\n        groupOwner: string;\r\n        groupDesc: string;\r\n    }\r\n\r\n    export interface Groups {\r\n        Group: Group[];\r\n    }\r\n\r\n    export interface FilePermissionResponse {\r\n        NoSecMngr: boolean;\r\n        FileName: string;\r\n        UserName: string;\r\n        GroupName: string;\r\n        toomany: boolean;\r\n        Users: Users;\r\n        Groups: Groups;\r\n        UserPermission: string;\r\n    }\r\n\r\n    export interface groupnames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface GroupActionRequest {\r\n        groupnames?: groupnames;\r\n        ActionType?: string;\r\n        DeletePermission?: boolean;\r\n    }\r\n\r\n    export interface GroupActionResponse {\r\n        Groupnames: string;\r\n        Permissions: Permissions;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface GroupAddRequest {\r\n        groupname?: string;\r\n        groupOwner?: string;\r\n        groupDesc?: string;\r\n    }\r\n\r\n    export interface GroupAddResponse {\r\n        groupname: string;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface GroupEditRequest {\r\n        groupname?: string;\r\n    }\r\n\r\n    export interface GroupEditResponse {\r\n        groupname: string;\r\n        Users: Users;\r\n    }\r\n\r\n    export interface usernames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface GroupMemberEditRequest {\r\n        groupname?: string;\r\n        action?: string;\r\n        usernames?: usernames;\r\n    }\r\n\r\n    export interface GroupMemberEditResponse {\r\n        groupname: string;\r\n        action: string;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface GroupMemberEditInputRequest {\r\n        searchinput?: string;\r\n        groupname?: string;\r\n    }\r\n\r\n    export interface GroupMemberEditInputResponse {\r\n        groupname: string;\r\n        toomany: boolean;\r\n        Users: Users;\r\n    }\r\n\r\n    export interface GroupMemberQueryRequest {\r\n        GroupName?: string;\r\n        PageSize?: unsignedInt;\r\n        PageStartFrom?: long;\r\n        SortBy?: UserSortBy;\r\n        Descending?: boolean;\r\n        CacheHint?: long;\r\n    }\r\n\r\n    export interface GroupMemberQueryResponse {\r\n        NoSecMngr: boolean;\r\n        Users: Users;\r\n        TotalUsers: long;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface GroupQueryRequest {\r\n        PageSize?: unsignedInt;\r\n        PageStartFrom?: long;\r\n        SortBy?: GroupSortBy;\r\n        Descending?: boolean;\r\n        CacheHint?: long;\r\n    }\r\n\r\n    export interface GroupQueryResponse {\r\n        NoSecMngr: boolean;\r\n        Groups: Groups;\r\n        TotalGroups: long;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface GroupRequest {\r\n\r\n    }\r\n\r\n    export interface GroupResponse {\r\n        NoSecMngr: boolean;\r\n        Groups: Groups;\r\n    }\r\n\r\n    export interface PermissionActionRequest {\r\n        rname?: string;\r\n        prefix?: string;\r\n        action?: string;\r\n        account_name?: string;\r\n        account_type?: int;\r\n        allow_access?: boolean;\r\n        allow_read?: boolean;\r\n        allow_write?: boolean;\r\n        allow_full?: boolean;\r\n        deny_access?: boolean;\r\n        deny_read?: boolean;\r\n        deny_write?: boolean;\r\n        deny_full?: boolean;\r\n        user?: string;\r\n        group?: string;\r\n        BasednName?: string;\r\n        ResourceName?: string;\r\n    }\r\n\r\n    export interface PermissionActionResponse {\r\n        AccountName: string;\r\n        IsGroup: boolean;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface BasednsRequest {\r\n\r\n    }\r\n\r\n    export interface Basedn {\r\n        name: string;\r\n        basedn: string;\r\n        rtype: string;\r\n        rtitle: string;\r\n        templatename: string;\r\n    }\r\n\r\n    export interface Basedns {\r\n        Basedn: Basedn[];\r\n    }\r\n\r\n    export interface BasednsResponse {\r\n        NoSecMngr: boolean;\r\n        Basedns: Basedns;\r\n    }\r\n\r\n    export interface names {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface PermissionsResetRequest {\r\n        BasednName?: string;\r\n        prefix?: string;\r\n        names?: names;\r\n        allow_access?: boolean;\r\n        allow_read?: boolean;\r\n        allow_write?: boolean;\r\n        allow_full?: boolean;\r\n        deny_access?: boolean;\r\n        deny_read?: boolean;\r\n        deny_write?: boolean;\r\n        deny_full?: boolean;\r\n        userarray?: string;\r\n        grouparray?: string;\r\n    }\r\n\r\n    export interface PermissionsResetResponse {\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface ws_accessPingRequest {\r\n\r\n    }\r\n\r\n    export interface ws_accessPingResponse {\r\n\r\n    }\r\n\r\n    export interface QueryScopeScansEnabledRequest {\r\n\r\n    }\r\n\r\n    export interface QueryScopeScansEnabledResponse {\r\n        scopeScansStatus: scopeScansStatus;\r\n    }\r\n\r\n    export interface QueryUserViewColumnsRequest {\r\n        username?: string;\r\n    }\r\n\r\n    export interface ViewColumn {\r\n        viewname: string;\r\n        filename: string;\r\n        columnname: string;\r\n    }\r\n\r\n    export interface viewcolumns {\r\n        ViewColumn: ViewColumn[];\r\n    }\r\n\r\n    export interface QueryUserViewColumnsResponse {\r\n        username: string;\r\n        viewcolumns: viewcolumns;\r\n    }\r\n\r\n    export interface QueryViewColumnsRequest {\r\n        viewname?: string;\r\n    }\r\n\r\n    export interface QueryViewColumnsResponse {\r\n        viewname: string;\r\n        viewcolumns: viewcolumns;\r\n    }\r\n\r\n    export interface QueryViewMembersRequest {\r\n        viewname?: string;\r\n    }\r\n\r\n    export interface ViewMember {\r\n        viewname: string;\r\n        name: string;\r\n        membertype: ViewMemberType;\r\n    }\r\n\r\n    export interface viewmembers {\r\n        ViewMember: ViewMember[];\r\n    }\r\n\r\n    export interface QueryViewMembersResponse {\r\n        viewname: string;\r\n        viewmembers: viewmembers;\r\n    }\r\n\r\n    export interface QueryViewsRequest {\r\n\r\n    }\r\n\r\n    export interface View {\r\n        viewname: string;\r\n        description: string;\r\n    }\r\n\r\n    export interface views {\r\n        View: View[];\r\n    }\r\n\r\n    export interface QueryViewsResponse {\r\n        views: views;\r\n    }\r\n\r\n    export interface ResourceAddRequest {\r\n        BasednName?: string;\r\n        name?: string;\r\n        description?: string;\r\n        prefix?: string;\r\n    }\r\n\r\n    export interface ResourceAddResponse {\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface ResourceDeleteRequest {\r\n        BasednName?: string;\r\n        prefix?: string;\r\n        names?: names;\r\n        DoUpdate?: int;\r\n    }\r\n\r\n    export interface ResourceDeleteResponse {\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface ResourcePermissionQueryRequest {\r\n        BasednName?: string;\r\n        prefix?: string;\r\n        Name?: string;\r\n        AccountType?: AccountTypeReq;\r\n        PageSize?: unsignedInt;\r\n        PageStartFrom?: long;\r\n        SortBy?: ResourcePermissionSortBy;\r\n        Descending?: boolean;\r\n        CacheHint?: long;\r\n    }\r\n\r\n    export interface Permission2 {\r\n        account_name: string;\r\n        escaped_account_name: string;\r\n        account_type: int;\r\n        allow_access: boolean;\r\n        allow_read: boolean;\r\n        allow_write: boolean;\r\n        allow_full: boolean;\r\n        deny_access: boolean;\r\n        deny_read: boolean;\r\n        deny_write: boolean;\r\n        deny_full: boolean;\r\n    }\r\n\r\n    export interface Permissions2 {\r\n        Permission: Permission2[];\r\n    }\r\n\r\n    export interface ResourcePermissionQueryResponse {\r\n        NoSecMngr: boolean;\r\n        Permissions: Permissions2;\r\n        TotalResourcePermissions: long;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface ResourcePermissionsRequest {\r\n        name?: string;\r\n        BasednName?: string;\r\n        prefix?: string;\r\n    }\r\n\r\n    export interface ResourcePermissionsResponse {\r\n        Permissions: Permissions2;\r\n    }\r\n\r\n    export interface ResourceQueryRequest {\r\n        BasednName?: string;\r\n        prefix?: string;\r\n        Name?: string;\r\n        PageSize?: unsignedInt;\r\n        PageStartFrom?: long;\r\n        SortBy?: ResourceSortBy;\r\n        Descending?: boolean;\r\n        CacheHint?: long;\r\n    }\r\n\r\n    export interface Resource {\r\n        name: string;\r\n        description: string;\r\n        isSpecial: boolean;\r\n    }\r\n\r\n    export interface Resources {\r\n        Resource: Resource[];\r\n    }\r\n\r\n    export interface ResourceQueryResponse {\r\n        NoSecMngr: boolean;\r\n        Resources: Resources;\r\n        TotalResources: long;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface ResourcesRequest {\r\n        templatename?: string;\r\n        BasednName?: string;\r\n        prefix?: string;\r\n        searchinput?: string;\r\n    }\r\n\r\n    export interface ResourcesResponse {\r\n        Resources: Resources;\r\n        default_basedn: string;\r\n        default_name: string;\r\n        toomany: boolean;\r\n        scopeScansStatus: scopeScansStatus;\r\n    }\r\n\r\n    export interface UserAccountExportRequest {\r\n        usernames?: usernames;\r\n        groupnames?: groupnames;\r\n    }\r\n\r\n    export interface UserAccountExportResponse {\r\n        Result: base64Binary;\r\n    }\r\n\r\n    export interface UserActionRequest {\r\n        action?: string;\r\n        ActionType?: string;\r\n        usernames?: usernames;\r\n    }\r\n\r\n    export interface UserActionResponse {\r\n        action: string;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface UserEditRequest {\r\n        username?: string;\r\n    }\r\n\r\n    export interface UserEditResponse {\r\n        username: string;\r\n        isLDAPAdmin: boolean;\r\n        Groups: Groups;\r\n    }\r\n\r\n    export interface UserGroupEditRequest {\r\n        username?: string;\r\n        action?: string;\r\n        groupnames?: groupnames;\r\n    }\r\n\r\n    export interface UserGroupEditResponse {\r\n        username: string;\r\n        action: string;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface UserGroupEditInputRequest {\r\n        username?: string;\r\n    }\r\n\r\n    export interface UserGroupEditInputResponse {\r\n        username: string;\r\n        Groups: Groups;\r\n    }\r\n\r\n    export interface UserInfoEditRequest {\r\n        username?: string;\r\n        firstname?: string;\r\n        lastname?: string;\r\n        employeeID?: string;\r\n        employeeNumber?: string;\r\n    }\r\n\r\n    export interface UserInfoEditResponse {\r\n        username: string;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface UserInfoEditInputRequest {\r\n        username?: string;\r\n    }\r\n\r\n    export interface UserInfoEditInputResponse {\r\n        username: string;\r\n        firstname: string;\r\n        lastname: string;\r\n        employeeID: string;\r\n        PasswordExpiration: string;\r\n        employeeNumber: string;\r\n    }\r\n\r\n    export interface UserPosixRequest {\r\n        username?: string;\r\n        posixenabled?: boolean;\r\n        gidnumber?: string;\r\n        uidnumber?: string;\r\n        homedirectory?: string;\r\n        loginshell?: string;\r\n    }\r\n\r\n    export interface UserPosixResponse {\r\n        username: string;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface UserPosixInputRequest {\r\n        username?: string;\r\n    }\r\n\r\n    export interface UserPosixInputResponse {\r\n        username: string;\r\n        posixenabled: boolean;\r\n        gidnumber: string;\r\n        uidnumber: string;\r\n        homedirectory: string;\r\n        loginshell: string;\r\n    }\r\n\r\n    export interface UserQueryRequest {\r\n        Name?: string;\r\n        PageSize?: unsignedInt;\r\n        PageStartFrom?: long;\r\n        SortBy?: UserSortBy;\r\n        Descending?: boolean;\r\n        CacheHint?: long;\r\n    }\r\n\r\n    export interface UserQueryResponse {\r\n        NoSecMngr: boolean;\r\n        Users: Users;\r\n        TotalUsers: long;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface UserResetPassRequest {\r\n        username?: string;\r\n        newPassword?: string;\r\n        newPasswordRetype?: string;\r\n    }\r\n\r\n    export interface UserResetPassResponse {\r\n        username: string;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface UserResetPassInputRequest {\r\n        username?: string;\r\n    }\r\n\r\n    export interface UserResetPassInputResponse {\r\n        username: string;\r\n    }\r\n\r\n    export interface UserSudoersRequest {\r\n        username?: string;\r\n        action?: string;\r\n        sudoHost?: string;\r\n        sudoCommand?: string;\r\n        sudoOption?: string;\r\n    }\r\n\r\n    export interface UserSudoersResponse {\r\n        username: string;\r\n        retcode: int;\r\n        retmsg: string;\r\n    }\r\n\r\n    export interface UserSudoersInputRequest {\r\n        username?: string;\r\n    }\r\n\r\n    export interface UserSudoersInputResponse {\r\n        username: string;\r\n        insudoers: boolean;\r\n        sudoHost: string;\r\n        sudoCommand: string;\r\n        sudoOption: string;\r\n    }\r\n\r\n    export interface UserRequest {\r\n        searchinput?: string;\r\n    }\r\n\r\n    export interface UserResponse {\r\n        NoSecMngr: boolean;\r\n        toomany: boolean;\r\n        posixok: boolean;\r\n        Users: Users;\r\n    }\r\n\r\n}\r\n\r\nexport class AccessServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"ws_access\", \"1.17\");\r\n    }\r\n\r\n    AccountPermissions(request: Partial<WsAccess.AccountPermissionsRequest>): Promise<WsAccess.AccountPermissionsResponse> {\r\n        return this._connection.send(\"AccountPermissions\", request, \"json\", false, undefined, \"AccountPermissionsResponse\");\r\n    }\r\n\r\n    AccountPermissionsV2(request: Partial<WsAccess.AccountPermissionsV2Request>): Promise<WsAccess.AccountPermissionsV2Response> {\r\n        return this._connection.send(\"AccountPermissionsV2\", request, \"json\", false, undefined, \"AccountPermissionsV2Response\");\r\n    }\r\n\r\n    AddUser(request: Partial<WsAccess.AddUserRequest>): Promise<WsAccess.AddUserResponse> {\r\n        return this._connection.send(\"AddUser\", request, \"json\", false, undefined, \"AddUserResponse\");\r\n    }\r\n\r\n    AddView(request: Partial<WsAccess.AddViewRequest>): Promise<WsAccess.AddViewResponse> {\r\n        return this._connection.send(\"AddView\", request, \"json\", false, undefined, \"AddViewResponse\");\r\n    }\r\n\r\n    AddViewColumn(request: Partial<WsAccess.AddViewColumnRequest>): Promise<WsAccess.AddViewColumnResponse> {\r\n        return this._connection.send(\"AddViewColumn\", request, \"json\", false, undefined, \"AddViewColumnResponse\");\r\n    }\r\n\r\n    AddViewMember(request: Partial<WsAccess.AddViewMemberRequest>): Promise<WsAccess.AddViewMemberResponse> {\r\n        return this._connection.send(\"AddViewMember\", request, \"json\", false, undefined, \"AddViewMemberResponse\");\r\n    }\r\n\r\n    ClearPermissionsCache(request: Partial<WsAccess.ClearPermissionsCacheRequest>): Promise<WsAccess.ClearPermissionsCacheResponse> {\r\n        return this._connection.send(\"ClearPermissionsCache\", request, \"json\", false, undefined, \"ClearPermissionsCacheResponse\");\r\n    }\r\n\r\n    DeleteView(request: Partial<WsAccess.DeleteViewRequest>): Promise<WsAccess.DeleteViewResponse> {\r\n        return this._connection.send(\"DeleteView\", request, \"json\", false, undefined, \"DeleteViewResponse\");\r\n    }\r\n\r\n    DeleteViewColumn(request: Partial<WsAccess.DeleteViewColumnRequest>): Promise<WsAccess.DeleteViewColumnResponse> {\r\n        return this._connection.send(\"DeleteViewColumn\", request, \"json\", false, undefined, \"DeleteViewColumnResponse\");\r\n    }\r\n\r\n    DeleteViewMember(request: Partial<WsAccess.DeleteViewMemberRequest>): Promise<WsAccess.DeleteViewMemberResponse> {\r\n        return this._connection.send(\"DeleteViewMember\", request, \"json\", false, undefined, \"DeleteViewMemberResponse\");\r\n    }\r\n\r\n    DisableScopeScans(request: Partial<WsAccess.DisableScopeScansRequest>): Promise<WsAccess.DisableScopeScansResponse> {\r\n        return this._connection.send(\"DisableScopeScans\", request, \"json\", false, undefined, \"DisableScopeScansResponse\");\r\n    }\r\n\r\n    EnableScopeScans(request: Partial<WsAccess.EnableScopeScansRequest>): Promise<WsAccess.EnableScopeScansResponse> {\r\n        return this._connection.send(\"EnableScopeScans\", request, \"json\", false, undefined, \"EnableScopeScansResponse\");\r\n    }\r\n\r\n    FilePermission(request: Partial<WsAccess.FilePermissionRequest>): Promise<WsAccess.FilePermissionResponse> {\r\n        return this._connection.send(\"FilePermission\", request, \"json\", false, undefined, \"FilePermissionResponse\");\r\n    }\r\n\r\n    GroupAction(request: Partial<WsAccess.GroupActionRequest>): Promise<WsAccess.GroupActionResponse> {\r\n        return this._connection.send(\"GroupAction\", request, \"json\", false, undefined, \"GroupActionResponse\");\r\n    }\r\n\r\n    GroupAdd(request: Partial<WsAccess.GroupAddRequest>): Promise<WsAccess.GroupAddResponse> {\r\n        return this._connection.send(\"GroupAdd\", request, \"json\", false, undefined, \"GroupAddResponse\");\r\n    }\r\n\r\n    GroupEdit(request: Partial<WsAccess.GroupEditRequest>): Promise<WsAccess.GroupEditResponse> {\r\n        return this._connection.send(\"GroupEdit\", request, \"json\", false, undefined, \"GroupEditResponse\");\r\n    }\r\n\r\n    GroupMemberEdit(request: Partial<WsAccess.GroupMemberEditRequest>): Promise<WsAccess.GroupMemberEditResponse> {\r\n        return this._connection.send(\"GroupMemberEdit\", request, \"json\", false, undefined, \"GroupMemberEditResponse\");\r\n    }\r\n\r\n    GroupMemberEditInput(request: Partial<WsAccess.GroupMemberEditInputRequest>): Promise<WsAccess.GroupMemberEditInputResponse> {\r\n        return this._connection.send(\"GroupMemberEditInput\", request, \"json\", false, undefined, \"GroupMemberEditInputResponse\");\r\n    }\r\n\r\n    GroupMemberQuery(request: Partial<WsAccess.GroupMemberQueryRequest>): Promise<WsAccess.GroupMemberQueryResponse> {\r\n        return this._connection.send(\"GroupMemberQuery\", request, \"json\", false, undefined, \"GroupMemberQueryResponse\");\r\n    }\r\n\r\n    GroupQuery(request: Partial<WsAccess.GroupQueryRequest>): Promise<WsAccess.GroupQueryResponse> {\r\n        return this._connection.send(\"GroupQuery\", request, \"json\", false, undefined, \"GroupQueryResponse\");\r\n    }\r\n\r\n    Groups(request: Partial<WsAccess.GroupRequest>): Promise<WsAccess.GroupResponse> {\r\n        return this._connection.send(\"Groups\", request, \"json\", false, undefined, \"GroupResponse\");\r\n    }\r\n\r\n    PermissionAction(request: Partial<WsAccess.PermissionActionRequest>): Promise<WsAccess.PermissionActionResponse> {\r\n        return this._connection.send(\"PermissionAction\", request, \"json\", false, undefined, \"PermissionActionResponse\");\r\n    }\r\n\r\n    Permissions(request: Partial<WsAccess.BasednsRequest>): Promise<WsAccess.BasednsResponse> {\r\n        return this._connection.send(\"Permissions\", request, \"json\", false, undefined, \"BasednsResponse\");\r\n    }\r\n\r\n    PermissionsReset(request: Partial<WsAccess.PermissionsResetRequest>): Promise<WsAccess.PermissionsResetResponse> {\r\n        return this._connection.send(\"PermissionsReset\", request, \"json\", false, undefined, \"PermissionsResetResponse\");\r\n    }\r\n\r\n    Ping(request: Partial<WsAccess.ws_accessPingRequest>): Promise<WsAccess.ws_accessPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"ws_accessPingResponse\");\r\n    }\r\n\r\n    QueryScopeScansEnabled(request: Partial<WsAccess.QueryScopeScansEnabledRequest>): Promise<WsAccess.QueryScopeScansEnabledResponse> {\r\n        return this._connection.send(\"QueryScopeScansEnabled\", request, \"json\", false, undefined, \"QueryScopeScansEnabledResponse\");\r\n    }\r\n\r\n    QueryUserViewColumns(request: Partial<WsAccess.QueryUserViewColumnsRequest>): Promise<WsAccess.QueryUserViewColumnsResponse> {\r\n        return this._connection.send(\"QueryUserViewColumns\", request, \"json\", false, undefined, \"QueryUserViewColumnsResponse\");\r\n    }\r\n\r\n    QueryViewColumns(request: Partial<WsAccess.QueryViewColumnsRequest>): Promise<WsAccess.QueryViewColumnsResponse> {\r\n        return this._connection.send(\"QueryViewColumns\", request, \"json\", false, undefined, \"QueryViewColumnsResponse\");\r\n    }\r\n\r\n    QueryViewMembers(request: Partial<WsAccess.QueryViewMembersRequest>): Promise<WsAccess.QueryViewMembersResponse> {\r\n        return this._connection.send(\"QueryViewMembers\", request, \"json\", false, undefined, \"QueryViewMembersResponse\");\r\n    }\r\n\r\n    QueryViews(request: Partial<WsAccess.QueryViewsRequest>): Promise<WsAccess.QueryViewsResponse> {\r\n        return this._connection.send(\"QueryViews\", request, \"json\", false, undefined, \"QueryViewsResponse\");\r\n    }\r\n\r\n    ResourceAdd(request: Partial<WsAccess.ResourceAddRequest>): Promise<WsAccess.ResourceAddResponse> {\r\n        return this._connection.send(\"ResourceAdd\", request, \"json\", false, undefined, \"ResourceAddResponse\");\r\n    }\r\n\r\n    ResourceDelete(request: Partial<WsAccess.ResourceDeleteRequest>): Promise<WsAccess.ResourceDeleteResponse> {\r\n        return this._connection.send(\"ResourceDelete\", request, \"json\", false, undefined, \"ResourceDeleteResponse\");\r\n    }\r\n\r\n    ResourcePermissionQuery(request: Partial<WsAccess.ResourcePermissionQueryRequest>): Promise<WsAccess.ResourcePermissionQueryResponse> {\r\n        return this._connection.send(\"ResourcePermissionQuery\", request, \"json\", false, undefined, \"ResourcePermissionQueryResponse\");\r\n    }\r\n\r\n    ResourcePermissions(request: Partial<WsAccess.ResourcePermissionsRequest>): Promise<WsAccess.ResourcePermissionsResponse> {\r\n        return this._connection.send(\"ResourcePermissions\", request, \"json\", false, undefined, \"ResourcePermissionsResponse\");\r\n    }\r\n\r\n    ResourceQuery(request: Partial<WsAccess.ResourceQueryRequest>): Promise<WsAccess.ResourceQueryResponse> {\r\n        return this._connection.send(\"ResourceQuery\", request, \"json\", false, undefined, \"ResourceQueryResponse\");\r\n    }\r\n\r\n    Resources(request: Partial<WsAccess.ResourcesRequest>): Promise<WsAccess.ResourcesResponse> {\r\n        return this._connection.send(\"Resources\", request, \"json\", false, undefined, \"ResourcesResponse\");\r\n    }\r\n\r\n    UserAccountExport(request: Partial<WsAccess.UserAccountExportRequest>): Promise<WsAccess.UserAccountExportResponse> {\r\n        return this._connection.send(\"UserAccountExport\", request, \"json\", false, undefined, \"UserAccountExportResponse\");\r\n    }\r\n\r\n    UserAction(request: Partial<WsAccess.UserActionRequest>): Promise<WsAccess.UserActionResponse> {\r\n        return this._connection.send(\"UserAction\", request, \"json\", false, undefined, \"UserActionResponse\");\r\n    }\r\n\r\n    UserEdit(request: Partial<WsAccess.UserEditRequest>): Promise<WsAccess.UserEditResponse> {\r\n        return this._connection.send(\"UserEdit\", request, \"json\", false, undefined, \"UserEditResponse\");\r\n    }\r\n\r\n    UserGroupEdit(request: Partial<WsAccess.UserGroupEditRequest>): Promise<WsAccess.UserGroupEditResponse> {\r\n        return this._connection.send(\"UserGroupEdit\", request, \"json\", false, undefined, \"UserGroupEditResponse\");\r\n    }\r\n\r\n    UserGroupEditInput(request: Partial<WsAccess.UserGroupEditInputRequest>): Promise<WsAccess.UserGroupEditInputResponse> {\r\n        return this._connection.send(\"UserGroupEditInput\", request, \"json\", false, undefined, \"UserGroupEditInputResponse\");\r\n    }\r\n\r\n    UserInfoEdit(request: Partial<WsAccess.UserInfoEditRequest>): Promise<WsAccess.UserInfoEditResponse> {\r\n        return this._connection.send(\"UserInfoEdit\", request, \"json\", false, undefined, \"UserInfoEditResponse\");\r\n    }\r\n\r\n    UserInfoEditInput(request: Partial<WsAccess.UserInfoEditInputRequest>): Promise<WsAccess.UserInfoEditInputResponse> {\r\n        return this._connection.send(\"UserInfoEditInput\", request, \"json\", false, undefined, \"UserInfoEditInputResponse\");\r\n    }\r\n\r\n    UserPosix(request: Partial<WsAccess.UserPosixRequest>): Promise<WsAccess.UserPosixResponse> {\r\n        return this._connection.send(\"UserPosix\", request, \"json\", false, undefined, \"UserPosixResponse\");\r\n    }\r\n\r\n    UserPosixInput(request: Partial<WsAccess.UserPosixInputRequest>): Promise<WsAccess.UserPosixInputResponse> {\r\n        return this._connection.send(\"UserPosixInput\", request, \"json\", false, undefined, \"UserPosixInputResponse\");\r\n    }\r\n\r\n    UserQuery(request: Partial<WsAccess.UserQueryRequest>): Promise<WsAccess.UserQueryResponse> {\r\n        return this._connection.send(\"UserQuery\", request, \"json\", false, undefined, \"UserQueryResponse\");\r\n    }\r\n\r\n    UserResetPass(request: Partial<WsAccess.UserResetPassRequest>): Promise<WsAccess.UserResetPassResponse> {\r\n        return this._connection.send(\"UserResetPass\", request, \"json\", false, undefined, \"UserResetPassResponse\");\r\n    }\r\n\r\n    UserResetPassInput(request: Partial<WsAccess.UserResetPassInputRequest>): Promise<WsAccess.UserResetPassInputResponse> {\r\n        return this._connection.send(\"UserResetPassInput\", request, \"json\", false, undefined, \"UserResetPassInputResponse\");\r\n    }\r\n\r\n    UserSudoers(request: Partial<WsAccess.UserSudoersRequest>): Promise<WsAccess.UserSudoersResponse> {\r\n        return this._connection.send(\"UserSudoers\", request, \"json\", false, undefined, \"UserSudoersResponse\");\r\n    }\r\n\r\n    UserSudoersInput(request: Partial<WsAccess.UserSudoersInputRequest>): Promise<WsAccess.UserSudoersInputResponse> {\r\n        return this._connection.send(\"UserSudoersInput\", request, \"json\", false, undefined, \"UserSudoersInputResponse\");\r\n    }\r\n\r\n    Users(request: Partial<WsAccess.UserRequest>): Promise<WsAccess.UserResponse> {\r\n        return this._connection.send(\"Users\", request, \"json\", false, undefined, \"UserResponse\");\r\n    }\r\n\r\n}\r\n","import { AccessServiceBase, WsAccess } from \"./wsdl/ws_access/v1.17/ws_access\";\r\n\r\nexport {\r\n    WsAccess\r\n};\r\n\r\nexport class AccessService extends AccessServiceBase {\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsAccount {\r\n\r\n    export type int = number;\r\n\r\n    export interface MyAccountRequest {\r\n\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface MyAccountResponse {\r\n        Exceptions: Exceptions;\r\n        username: string;\r\n        firstName: string;\r\n        lastName: string;\r\n        passwordExpiration: string;\r\n        passwordDaysRemaining: int;\r\n        passwordExpirationWarningDays: int;\r\n        employeeID: string;\r\n        distinguishedName: string;\r\n        accountType: string;\r\n        passwordNeverExpires: boolean;\r\n        passwordIsExpired: boolean;\r\n        CanUpdatePassword: boolean;\r\n        accountStatus: int;\r\n    }\r\n\r\n    export interface ws_accountPingRequest {\r\n\r\n    }\r\n\r\n    export interface ws_accountPingResponse {\r\n\r\n    }\r\n\r\n    export interface UpdateUserRequest {\r\n        username?: string;\r\n        oldpass?: string;\r\n        newpass1?: string;\r\n        newpass2?: string;\r\n    }\r\n\r\n    export interface UpdateUserResponse {\r\n        Exceptions: Exceptions;\r\n        retcode: int;\r\n        message: string;\r\n    }\r\n\r\n    export interface UpdateUserInputRequest {\r\n\r\n    }\r\n\r\n    export interface UpdateUserInputResponse {\r\n        Exceptions: Exceptions;\r\n        username: string;\r\n    }\r\n\r\n    export interface VerifyUserRequest {\r\n        application?: string;\r\n        version?: string;\r\n    }\r\n\r\n    export interface VerifyUserResponse {\r\n        Exceptions: Exceptions;\r\n        retcode: int;\r\n    }\r\n\r\n}\r\n\r\nexport class AccountServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"ws_account\", \"1.06\");\r\n    }\r\n\r\n    MyAccount(request: Partial<WsAccount.MyAccountRequest>): Promise<WsAccount.MyAccountResponse> {\r\n        return this._connection.send(\"MyAccount\", request, \"json\", false, undefined, \"MyAccountResponse\");\r\n    }\r\n\r\n    Ping(request: Partial<WsAccount.ws_accountPingRequest>): Promise<WsAccount.ws_accountPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"ws_accountPingResponse\");\r\n    }\r\n\r\n    UpdateUser(request: Partial<WsAccount.UpdateUserRequest>): Promise<WsAccount.UpdateUserResponse> {\r\n        return this._connection.send(\"UpdateUser\", request, \"json\", false, undefined, \"UpdateUserResponse\");\r\n    }\r\n\r\n    UpdateUserInput(request: Partial<WsAccount.UpdateUserInputRequest>): Promise<WsAccount.UpdateUserInputResponse> {\r\n        return this._connection.send(\"UpdateUserInput\", request, \"json\", false, undefined, \"UpdateUserInputResponse\");\r\n    }\r\n\r\n    VerifyUser(request: Partial<WsAccount.VerifyUserRequest>): Promise<WsAccount.VerifyUserResponse> {\r\n        return this._connection.send(\"VerifyUser\", request, \"json\", false, undefined, \"VerifyUserResponse\");\r\n    }\r\n\r\n}\r\n","import { AccountServiceBase, WsAccount } from \"./wsdl/ws_account/v1.06/ws_account\";\r\nimport { ESPExceptions } from \"../espConnection\";\r\n\r\nexport {\r\n    WsAccount\r\n};\r\n\r\nexport class AccountService extends AccountServiceBase {\r\n\r\n    VerifyUser(request: WsAccount.VerifyUserRequest): Promise<WsAccount.VerifyUserResponse> {\r\n        return this._connection.send(\"VerifyUser\", request)\r\n            .catch((e: ESPExceptions) => {\r\n                //  old client version warning  ---\r\n                if (e.isESPExceptions && e.Exception.some(exception => exception.Code === 20043)) {\r\n                    return {\r\n                        retcode: 20043,\r\n                        Exceptions: {\r\n                            Source: \"wsAccount\",\r\n                            Exception: e.Exception\r\n                        }\r\n                    };\r\n                }\r\n                throw e;\r\n            });\r\n    }\r\n\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsCloud {\r\n\r\nexport interface GetPODsRequest {\r\n\r\n}\r\n\r\nexport interface GetPODsResponse {\r\n    Result: string;\r\n}\r\n\r\nexport interface WsCloudPingRequest {\r\n\r\n}\r\n\r\nexport interface WsCloudPingResponse {\r\n\r\n}\r\n\r\n}\r\n\r\nexport class CloudServiceBase extends Service {\r\n\r\nconstructor(optsConnection: IOptions | IConnection) {\r\nsuper(optsConnection, \"WsCloud\", \"1\");\r\n}\r\n\r\nGetPODs(request: WsCloud.GetPODsRequest): Promise<WsCloud.GetPODsResponse> {\r\n\treturn this._connection.send(\"GetPODs\", request);\r\n}\r\n\r\nPing(request: WsCloud.WsCloudPingRequest): Promise<WsCloud.WsCloudPingResponse> {\r\n\treturn this._connection.send(\"Ping\", request);\r\n}\r\n\r\n}\r\n","import { CloudServiceBase, WsCloud } from \"./wsdl/WsCloud/v1/WsCloud\";\r\n\r\nexport {\r\n    WsCloud\r\n};\r\n\r\nexport class CloudService extends CloudServiceBase {\r\n\r\n    getPODs(): Promise<object[]> {\r\n        return super.GetPODs({}).then((response) => {\r\n            try {\r\n                const obj = typeof response.Result === \"string\" ? JSON.parse(response.Result) : response.Result;\r\n                return obj?.items ?? [];\r\n\r\n            } catch (error) {\r\n                return [];\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../connection\";\r\nimport { ESPConnection } from \"../espConnection\";\r\n\r\n/*\r\n    Response structures generated via:\r\n    * http://localhost:8010/ws_codesign/?ver_=1.1&respjson_\r\n    * http://json2ts.com/\r\n*/\r\nexport namespace WsCodesign {\r\n\r\n    export interface ListUserIDsRequest {\r\n    }\r\n\r\n    export interface WsCodesignPingRequest {\r\n    }\r\n\r\n    export interface SignRequest {\r\n        SigningMethod?: string;\r\n        UserID: string;\r\n        KeyPass: string;\r\n        Text: string;\r\n    }\r\n\r\n    export interface VerifyRequest {\r\n        Text: string;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface UserIDs {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface ListUserIDsResponse {\r\n        Exceptions: Exceptions;\r\n        UserIDs: UserIDs;\r\n    }\r\n\r\n    export interface WsCodesignPingResponse {\r\n    }\r\n\r\n    export interface SignResponse {\r\n        Exceptions: Exceptions;\r\n        RetCode: number;\r\n        ErrMsg: string;\r\n        SignedText: string;\r\n    }\r\n\r\n    export interface VerifyResponse {\r\n        Exceptions: Exceptions;\r\n        RetCode: number;\r\n        ErrMsg: string;\r\n        IsVerified: boolean;\r\n        SignedBy: string;\r\n    }\r\n}\r\n\r\nexport class CodesignService {\r\n    private _connection: ESPConnection;\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        this._connection = new ESPConnection(optsConnection, \"ws_codesign\", \"1.1\");\r\n    }\r\n\r\n    connectionOptions(): IOptions {\r\n        return this._connection.opts();\r\n    }\r\n\r\n    ListUserIDs(request: WsCodesign.ListUserIDsRequest): Promise<string[]> {\r\n        return this._connection.send(\"ListUserIDs\", request).then((response: WsCodesign.ListUserIDsResponse) => {\r\n            return response.UserIDs.Item;\r\n        }).catch(e => {\r\n            return [];\r\n        });\r\n    }\r\n\r\n    Sign(request: WsCodesign.SignRequest): Promise<WsCodesign.SignResponse> {\r\n        return this._connection.send(\"Sign\", { SigningMethod: \"gpg\", ...request });\r\n    }\r\n\r\n    Verify(request: WsCodesign.VerifyRequest): Promise<WsCodesign.VerifyResponse> {\r\n        return this._connection.send(\"Verify\", request);\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsDali {\r\n\r\n    export type unsignedInt = number;\r\n\r\n    export interface AddRequest {\r\n        Path?: string;\r\n        Value?: string;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface ResultResponse {\r\n        Exceptions: Exceptions;\r\n        Result: string;\r\n    }\r\n\r\n    export interface ClearTraceTransactionsRequest {\r\n\r\n    }\r\n\r\n    export interface CountRequest {\r\n        Path?: string;\r\n    }\r\n\r\n    export interface CountResponse {\r\n        Exceptions: Exceptions;\r\n        Result: unsignedInt;\r\n    }\r\n\r\n    export interface DFSCheckRequest {\r\n\r\n    }\r\n\r\n    export interface DFSExistsRequest {\r\n        FileName?: string;\r\n    }\r\n\r\n    export interface BooleanResponse {\r\n        Exceptions: Exceptions;\r\n        Result: boolean;\r\n    }\r\n\r\n    export interface DFSLSRequest {\r\n        Name?: string;\r\n        PathAndNameOnly?: boolean;\r\n        IncludeSubFileInfo?: boolean;\r\n        Recursively?: boolean;\r\n    }\r\n\r\n    export interface DeleteRequest {\r\n        Path?: string;\r\n    }\r\n\r\n    export interface DisconnectClientConnectionRequest {\r\n        Endpoint?: string;\r\n    }\r\n\r\n    export interface GetClientsRequest {\r\n\r\n    }\r\n\r\n    export interface GetConnectionsRequest {\r\n\r\n    }\r\n\r\n    export interface GetDFSCSVRequest {\r\n        LogicalNameMask?: string;\r\n    }\r\n\r\n    export interface GetDFSMapRequest {\r\n        FileName?: string;\r\n    }\r\n\r\n    export interface GetDFSParentsRequest {\r\n        FileName?: string;\r\n    }\r\n\r\n    export interface GetLogicalFileRequest {\r\n        FileName?: string;\r\n    }\r\n\r\n    export interface GetLogicalFilePartRequest {\r\n        FileName?: string;\r\n        PartNumber?: unsignedInt;\r\n    }\r\n\r\n    export interface GetProtectedListRequest {\r\n        FileName?: string;\r\n        CallerId?: string;\r\n    }\r\n\r\n    export interface GetSDSStatsRequest {\r\n\r\n    }\r\n\r\n    export interface GetSDSSubscribersRequest {\r\n\r\n    }\r\n\r\n    export interface GetValueRequest {\r\n        Path?: string;\r\n    }\r\n\r\n    export interface ImportRequest {\r\n        XML?: string;\r\n        Path?: string;\r\n        Add?: boolean;\r\n    }\r\n\r\n    export interface ListSDSLocksRequest {\r\n\r\n    }\r\n\r\n    export interface WSDaliPingRequest {\r\n\r\n    }\r\n\r\n    export interface WSDaliPingResponse {\r\n\r\n    }\r\n\r\n    export interface SaveSDSStoreRequest {\r\n\r\n    }\r\n\r\n    export interface SetLogicalFilePartAttrRequest {\r\n        FileName?: string;\r\n        PartNumber?: unsignedInt;\r\n        Attr?: string;\r\n        Value?: string;\r\n    }\r\n\r\n    export interface SetProtectedRequest {\r\n        FileName?: string;\r\n        CallerId?: string;\r\n    }\r\n\r\n    export interface SetTraceSlowTransactionsRequest {\r\n        SlowThresholdMS?: unsignedInt;\r\n    }\r\n\r\n    export interface SetTraceTransactionsRequest {\r\n\r\n    }\r\n\r\n    export interface SetUnprotectedRequest {\r\n        FileName?: string;\r\n        CallerId?: string;\r\n    }\r\n\r\n    export interface SetValueRequest {\r\n        Path?: string;\r\n        Value?: string;\r\n    }\r\n\r\n    export interface UnlockSDSLockRequest {\r\n        ConnectionID?: string;\r\n        Close?: boolean;\r\n    }\r\n\r\n}\r\n\r\nexport class DaliServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WSDali\", \"1.07\");\r\n    }\r\n\r\n    Add(request: Partial<WsDali.AddRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"Add\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    ClearTraceTransactions(request: Partial<WsDali.ClearTraceTransactionsRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"ClearTraceTransactions\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    Count(request: Partial<WsDali.CountRequest>): Promise<WsDali.CountResponse> {\r\n        return this._connection.send(\"Count\", request, \"json\", false, undefined, \"CountResponse\");\r\n    }\r\n\r\n    DFSCheck(request: Partial<WsDali.DFSCheckRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"DFSCheck\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    DFSExists(request: Partial<WsDali.DFSExistsRequest>): Promise<WsDali.BooleanResponse> {\r\n        return this._connection.send(\"DFSExists\", request, \"json\", false, undefined, \"BooleanResponse\");\r\n    }\r\n\r\n    DFSLS(request: Partial<WsDali.DFSLSRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"DFSLS\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    Delete(request: Partial<WsDali.DeleteRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"Delete\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    DisconnectClientConnection(request: Partial<WsDali.DisconnectClientConnectionRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"DisconnectClientConnection\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetClients(request: Partial<WsDali.GetClientsRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetClients\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetConnections(request: Partial<WsDali.GetConnectionsRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetConnections\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetDFSCSV(request: Partial<WsDali.GetDFSCSVRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetDFSCSV\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetDFSMap(request: Partial<WsDali.GetDFSMapRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetDFSMap\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetDFSParents(request: Partial<WsDali.GetDFSParentsRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetDFSParents\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetLogicalFile(request: Partial<WsDali.GetLogicalFileRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetLogicalFile\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetLogicalFilePart(request: Partial<WsDali.GetLogicalFilePartRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetLogicalFilePart\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetProtectedList(request: Partial<WsDali.GetProtectedListRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetProtectedList\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetSDSStats(request: Partial<WsDali.GetSDSStatsRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetSDSStats\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetSDSSubscribers(request: Partial<WsDali.GetSDSSubscribersRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetSDSSubscribers\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetValue(request: Partial<WsDali.GetValueRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"GetValue\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    Import(request: Partial<WsDali.ImportRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"Import\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    ListSDSLocks(request: Partial<WsDali.ListSDSLocksRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"ListSDSLocks\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    Ping(request: Partial<WsDali.WSDaliPingRequest>): Promise<WsDali.WSDaliPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"WSDaliPingResponse\");\r\n    }\r\n\r\n    SaveSDSStore(request: Partial<WsDali.SaveSDSStoreRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"SaveSDSStore\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    SetLogicalFilePartAttr(request: Partial<WsDali.SetLogicalFilePartAttrRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"SetLogicalFilePartAttr\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    SetProtected(request: Partial<WsDali.SetProtectedRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"SetProtected\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    SetTraceSlowTransactions(request: Partial<WsDali.SetTraceSlowTransactionsRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"SetTraceSlowTransactions\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    SetTraceTransactions(request: Partial<WsDali.SetTraceTransactionsRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"SetTraceTransactions\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    SetUnprotected(request: Partial<WsDali.SetUnprotectedRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"SetUnprotected\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    SetValue(request: Partial<WsDali.SetValueRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"SetValue\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    UnlockSDSLock(request: Partial<WsDali.UnlockSDSLockRequest>): Promise<WsDali.ResultResponse> {\r\n        return this._connection.send(\"UnlockSDSLock\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n}\r\n","import { DaliServiceBase, WsDali } from \"./wsdl/WsDali/v1.07/WsDali\";\r\n\r\nexport {\r\n    WsDali\r\n};\r\n\r\nexport class DaliService extends DaliServiceBase {\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsDfu {\r\n\r\n    export type base64Binary = string;\r\n    export type long = number;\r\n    export type int = number;\r\n    export type double = number;\r\n\r\n    export enum DFUArrayActions {\r\n        Delete = \"Delete\",\r\n        AddToSuperfile = \"Add To Superfile\",\r\n        ChangeProtection = \"Change Protection\",\r\n        ChangeRestriction = \"Change Restriction\"\r\n    }\r\n\r\n    export enum DFUChangeProtection {\r\n        NoChange = 0,\r\n        Protect = 1,\r\n        Unprotect = 2,\r\n        UnprotectAll = 3\r\n    }\r\n\r\n    export enum DFUChangeRestriction {\r\n        NoChange = 0,\r\n        Restrict = 1,\r\n        Unrestricted = 2\r\n    }\r\n\r\n    export enum DFUDefFileFormat {\r\n        xml = \"xml\",\r\n        def = \"def\"\r\n    }\r\n\r\n    export enum FileAccessRole {\r\n        Token = \"Token\",\r\n        Engine = \"Engine\",\r\n        External = \"External\"\r\n    }\r\n\r\n    export enum SecAccessType {\r\n        None = \"None\",\r\n        Access = \"Access\",\r\n        Read = \"Read\",\r\n        Write = \"Write\",\r\n        Full = \"Full\"\r\n    }\r\n\r\n    export enum DFUFileType {\r\n        Flat = \"Flat\",\r\n        Index = \"Index\",\r\n        Xml = \"Xml\",\r\n        Csv = \"Csv\",\r\n        Json = \"Json\",\r\n        IndexLocal = \"IndexLocal\",\r\n        IndexPartitioned = \"IndexPartitioned\",\r\n        Unset = \"Unset\"\r\n    }\r\n\r\n    export interface AddRequest {\r\n        dstname?: string;\r\n        xmlmap?: base64Binary;\r\n        dstcluster?: string;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface AddResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface AddRemoteRequest {\r\n        dstname?: string;\r\n        srcname?: string;\r\n        srcdali?: string;\r\n        srcusername?: string;\r\n        srcpassword?: string;\r\n    }\r\n\r\n    export interface AddRemoteResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface names {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface AddtoSuperfileRequest {\r\n        Superfile?: string;\r\n        Subfiles?: string;\r\n        names?: names;\r\n        ExistingFile?: boolean;\r\n        BackToPage?: string;\r\n    }\r\n\r\n    export interface SubfileNames {\r\n        SubfileName: string[];\r\n    }\r\n\r\n    export interface AddtoSuperfileResponse {\r\n        Exceptions: Exceptions;\r\n        Subfiles: string;\r\n        BackToPage: string;\r\n        SubfileNames: SubfileNames;\r\n    }\r\n\r\n    export interface LogicalFiles {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface DFUArrayActionRequest {\r\n        Type?: DFUArrayActions;\r\n        NoDelete?: boolean;\r\n        BackToPage?: string;\r\n        LogicalFiles?: LogicalFiles;\r\n        removeFromSuperfiles?: boolean;\r\n        removeRecursively?: boolean;\r\n        Protect?: DFUChangeProtection;\r\n        Restrict?: DFUChangeRestriction;\r\n    }\r\n\r\n    export interface DFUActionInfo {\r\n        FileName: string;\r\n        NodeGroup: string;\r\n        ActionResult: string;\r\n        Failed: boolean;\r\n    }\r\n\r\n    export interface ActionResults {\r\n        DFUActionInfo: DFUActionInfo[];\r\n    }\r\n\r\n    export interface DFUArrayActionResponse {\r\n        Exceptions: Exceptions;\r\n        BackToPage: string;\r\n        RedirectTo: string;\r\n        ActionResults: ActionResults;\r\n    }\r\n\r\n    export interface DFUBrowseDataRequest {\r\n        LogicalName?: string;\r\n        FilterBy?: string;\r\n        ShowColumns?: string;\r\n        SchemaOnly?: boolean;\r\n        StartForGoback?: long;\r\n        CountForGoback?: int;\r\n        ChooseFile?: int;\r\n        Cluster?: string;\r\n        ClusterType?: string;\r\n        ParentName?: string;\r\n        Start?: long;\r\n        Count?: int;\r\n        DisableUppercaseTranslation?: boolean;\r\n    }\r\n\r\n    export interface DFUDataColumn {\r\n        ColumnID: int;\r\n        ColumnLabel: string;\r\n        ColumnType: string;\r\n        ColumnValue: string;\r\n        ColumnSize: int;\r\n        MaxSize: int;\r\n        ColumnEclType: string;\r\n        ColumnRawSize: int;\r\n        IsNaturalColumn: boolean;\r\n        IsKeyedColumn: boolean;\r\n        DataColumns: DataColumns;\r\n    }\r\n\r\n    export interface DataColumns {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface ColumnHidden {\r\n        ColumnID: int;\r\n        ColumnLabel: string;\r\n        ColumnType: string;\r\n        ColumnValue: string;\r\n        ColumnSize: int;\r\n        MaxSize: int;\r\n        ColumnEclType: string;\r\n        ColumnRawSize: int;\r\n        IsNaturalColumn: boolean;\r\n        IsKeyedColumn: boolean;\r\n        DataColumns: DataColumns;\r\n    }\r\n\r\n    export interface ColumnsHidden {\r\n        ColumnHidden: ColumnHidden[];\r\n    }\r\n\r\n    export interface DFUBrowseDataResponse {\r\n        Exceptions: Exceptions;\r\n        Name: string;\r\n        LogicalName: string;\r\n        FilterBy: string;\r\n        FilterForGoBack: string;\r\n        ColumnsHidden: ColumnsHidden;\r\n        ColumnCount: int;\r\n        StartForGoback: long;\r\n        CountForGoback: int;\r\n        ChooseFile: int;\r\n        SchemaOnly: boolean;\r\n        Cluster: string;\r\n        ClusterType: string;\r\n        ParentName: string;\r\n        Start: long;\r\n        Count: long;\r\n        PageSize: long;\r\n        Total: long;\r\n        Result: string;\r\n        MsgToDisplay: string;\r\n        DisableUppercaseTranslation: boolean;\r\n    }\r\n\r\n    export interface DFUDefFileRequest {\r\n        Name?: string;\r\n        Format?: DFUDefFileFormat;\r\n    }\r\n\r\n    export interface DFUDefFileResponse {\r\n        Exceptions: Exceptions;\r\n        defFile: base64Binary;\r\n    }\r\n\r\n    export interface RequestBase {\r\n        Name: string;\r\n        Cluster: string;\r\n        JobId: string;\r\n        ExpirySeconds: int;\r\n        AccessRole: FileAccessRole;\r\n        AccessType: SecAccessType;\r\n        ReturnJsonTypeInfo: boolean;\r\n        ReturnBinTypeInfo: boolean;\r\n    }\r\n\r\n    export interface DFUFileAccessRequest {\r\n        RequestBase?: RequestBase;\r\n    }\r\n\r\n    export interface DFUPartLocation {\r\n        LocationIndex: int;\r\n        Host: string;\r\n    }\r\n\r\n    export interface FileLocations {\r\n        DFUPartLocation: DFUPartLocation[];\r\n    }\r\n\r\n    export interface DFUFileCopy {\r\n        CopyIndex: int;\r\n        LocationIndex: int;\r\n        Path: string;\r\n    }\r\n\r\n    export interface Copies {\r\n        DFUFileCopy: DFUFileCopy[];\r\n    }\r\n\r\n    export interface DFUFilePart {\r\n        PartIndex: int;\r\n        Copies: Copies;\r\n        TopLevelKey: boolean;\r\n    }\r\n\r\n    export interface FileParts {\r\n        DFUFilePart: DFUFilePart[];\r\n    }\r\n\r\n    export interface AccessInfo {\r\n        MetaInfoBlob: string;\r\n        ExpiryTime: string;\r\n        NumParts: int;\r\n        FileLocations: FileLocations;\r\n        FileParts: FileParts;\r\n        RecordTypeInfoJson: string;\r\n        fileAccessPort: int;\r\n        fileAccessSSL: boolean;\r\n    }\r\n\r\n    export interface DFUFileAccessResponse {\r\n        Exceptions: Exceptions;\r\n        AccessInfo: AccessInfo;\r\n        Type: DFUFileType;\r\n    }\r\n\r\n    export interface DFUFileAccessV2Request {\r\n        Name?: string;\r\n        Cluster?: string;\r\n        RequestId?: string;\r\n        ExpirySeconds?: int;\r\n        ReturnTextResponse?: boolean;\r\n        SessionId?: long;\r\n        LockTimeoutMs?: int;\r\n    }\r\n\r\n    export interface PartLocations {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface DFUFileCreateRequest {\r\n        ECLRecordDefinition?: string;\r\n        PartLocations?: PartLocations;\r\n        RequestBase?: RequestBase;\r\n    }\r\n\r\n    export interface DFUFileCreateResponse {\r\n        Exceptions: Exceptions;\r\n        FileId: string;\r\n        Warning: string;\r\n        AccessInfo: AccessInfo;\r\n    }\r\n\r\n    export interface DFUFileCreateV2Request {\r\n        Name?: string;\r\n        Cluster?: string;\r\n        Type?: DFUFileType;\r\n        ECLRecordDefinition?: string;\r\n        RequestId?: string;\r\n        ExpirySeconds?: int;\r\n        ReturnTextResponse?: boolean;\r\n        Compressed?: boolean;\r\n        SessionId?: long;\r\n        LockTimeoutMs?: int;\r\n    }\r\n\r\n    export interface DFUFilePublishRequest {\r\n        FileId?: string;\r\n        Overwrite?: boolean;\r\n        FileDescriptorBlob?: base64Binary;\r\n        SessionId?: long;\r\n        LockTimeoutMs?: int;\r\n        ECLRecordDefinition?: string;\r\n        RecordCount?: long;\r\n        FileSize?: long;\r\n    }\r\n\r\n    export interface DFUFilePublishResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface DFUFileViewRequest {\r\n        Scope?: string;\r\n        IncludeSuperOwner?: boolean;\r\n    }\r\n\r\n    export interface DFULogicalFile {\r\n        Prefix: string;\r\n        NodeGroup: string;\r\n        Directory: string;\r\n        Description: string;\r\n        Parts: string;\r\n        Name: string;\r\n        Owner: string;\r\n        Totalsize: string;\r\n        RecordCount: string;\r\n        Modified: string;\r\n        LongSize: string;\r\n        LongRecordCount: string;\r\n        isSuperfile: boolean;\r\n        isDirectory: boolean;\r\n        Replicate: boolean;\r\n        IntSize: long;\r\n        IntRecordCount: long;\r\n        FromRoxieCluster: boolean;\r\n        BrowseData: boolean;\r\n        IsCompressed: boolean;\r\n        ContentType: string;\r\n        CompressedFileSize: long;\r\n        SuperOwners: string;\r\n        Persistent: boolean;\r\n        IsProtected: boolean;\r\n        KeyType: string;\r\n        NumOfSubfiles: int;\r\n        Accessed: string;\r\n        AtRestCost: double;\r\n        AccessCost: double;\r\n        MinSkew: long;\r\n        MaxSkew: long;\r\n        MinSkewPart: long;\r\n        MaxSkewPart: long;\r\n    }\r\n\r\n    export interface DFULogicalFiles {\r\n        DFULogicalFile: DFULogicalFile[];\r\n    }\r\n\r\n    export interface DFUFileViewResponse {\r\n        Exceptions: Exceptions;\r\n        Scope: string;\r\n        NumFiles: int;\r\n        DFULogicalFiles: DFULogicalFiles;\r\n    }\r\n\r\n    export interface DFUGetDataColumnsRequest {\r\n        OpenLogicalName?: string;\r\n        LogicalName?: string;\r\n        FilterBy?: string;\r\n        ShowColumns?: string;\r\n        ChooseFile?: int;\r\n        Cluster?: string;\r\n        ClusterType?: string;\r\n        StartIndex?: long;\r\n        EndIndex?: long;\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns1 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns2 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns3 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns4 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns5 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns6 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns7 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns8 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns9 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns10 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns11 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns12 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns13 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns14 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns15 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns16 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns17 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns18 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns19 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataKeyedColumns20 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns1 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns2 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns3 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns4 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns5 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns6 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns7 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns8 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns9 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns10 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns11 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns12 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns13 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns14 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns15 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns16 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns17 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns18 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns19 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUDataNonKeyedColumns20 {\r\n        DFUDataColumn: DFUDataColumn[];\r\n    }\r\n\r\n    export interface DFUGetDataColumnsResponse {\r\n        Exceptions: Exceptions;\r\n        LogicalName: string;\r\n        StartIndex: long;\r\n        EndIndex: long;\r\n        DFUDataKeyedColumns1: DFUDataKeyedColumns1;\r\n        DFUDataKeyedColumns2: DFUDataKeyedColumns2;\r\n        DFUDataKeyedColumns3: DFUDataKeyedColumns3;\r\n        DFUDataKeyedColumns4: DFUDataKeyedColumns4;\r\n        DFUDataKeyedColumns5: DFUDataKeyedColumns5;\r\n        DFUDataKeyedColumns6: DFUDataKeyedColumns6;\r\n        DFUDataKeyedColumns7: DFUDataKeyedColumns7;\r\n        DFUDataKeyedColumns8: DFUDataKeyedColumns8;\r\n        DFUDataKeyedColumns9: DFUDataKeyedColumns9;\r\n        DFUDataKeyedColumns10: DFUDataKeyedColumns10;\r\n        DFUDataKeyedColumns11: DFUDataKeyedColumns11;\r\n        DFUDataKeyedColumns12: DFUDataKeyedColumns12;\r\n        DFUDataKeyedColumns13: DFUDataKeyedColumns13;\r\n        DFUDataKeyedColumns14: DFUDataKeyedColumns14;\r\n        DFUDataKeyedColumns15: DFUDataKeyedColumns15;\r\n        DFUDataKeyedColumns16: DFUDataKeyedColumns16;\r\n        DFUDataKeyedColumns17: DFUDataKeyedColumns17;\r\n        DFUDataKeyedColumns18: DFUDataKeyedColumns18;\r\n        DFUDataKeyedColumns19: DFUDataKeyedColumns19;\r\n        DFUDataKeyedColumns20: DFUDataKeyedColumns20;\r\n        DFUDataNonKeyedColumns1: DFUDataNonKeyedColumns1;\r\n        DFUDataNonKeyedColumns2: DFUDataNonKeyedColumns2;\r\n        DFUDataNonKeyedColumns3: DFUDataNonKeyedColumns3;\r\n        DFUDataNonKeyedColumns4: DFUDataNonKeyedColumns4;\r\n        DFUDataNonKeyedColumns5: DFUDataNonKeyedColumns5;\r\n        DFUDataNonKeyedColumns6: DFUDataNonKeyedColumns6;\r\n        DFUDataNonKeyedColumns7: DFUDataNonKeyedColumns7;\r\n        DFUDataNonKeyedColumns8: DFUDataNonKeyedColumns8;\r\n        DFUDataNonKeyedColumns9: DFUDataNonKeyedColumns9;\r\n        DFUDataNonKeyedColumns10: DFUDataNonKeyedColumns10;\r\n        DFUDataNonKeyedColumns11: DFUDataNonKeyedColumns11;\r\n        DFUDataNonKeyedColumns12: DFUDataNonKeyedColumns12;\r\n        DFUDataNonKeyedColumns13: DFUDataNonKeyedColumns13;\r\n        DFUDataNonKeyedColumns14: DFUDataNonKeyedColumns14;\r\n        DFUDataNonKeyedColumns15: DFUDataNonKeyedColumns15;\r\n        DFUDataNonKeyedColumns16: DFUDataNonKeyedColumns16;\r\n        DFUDataNonKeyedColumns17: DFUDataNonKeyedColumns17;\r\n        DFUDataNonKeyedColumns18: DFUDataNonKeyedColumns18;\r\n        DFUDataNonKeyedColumns19: DFUDataNonKeyedColumns19;\r\n        DFUDataNonKeyedColumns20: DFUDataNonKeyedColumns20;\r\n        RowCount: long;\r\n        ShowColumns: string;\r\n        ChooseFile: int;\r\n        Cluster: string;\r\n        ClusterType: string;\r\n    }\r\n\r\n    export interface DFUGetFileMetaDataRequest {\r\n        LogicalFileName?: string;\r\n        ClusterName?: string;\r\n        IncludeXmlSchema?: boolean;\r\n        AddHeaderInXmlSchema?: boolean;\r\n        IncludeXmlXPathSchema?: boolean;\r\n        AddHeaderInXmlXPathSchema?: boolean;\r\n    }\r\n\r\n    export interface DFUGetFileMetaDataResponse {\r\n        Exceptions: Exceptions;\r\n        TotalColumnCount: int;\r\n        KeyedColumnCount: int;\r\n        DataColumns: DataColumns;\r\n        XmlSchema: string;\r\n        XmlXPathSchema: string;\r\n        TotalResultRows: long;\r\n    }\r\n\r\n    export interface DFUInfoRequest {\r\n        Name?: string;\r\n        Cluster?: string;\r\n        UpdateDescription?: boolean;\r\n        QuerySet?: string;\r\n        Query?: string;\r\n        FileDesc?: string;\r\n        IncludeJsonTypeInfo?: boolean;\r\n        IncludeBinTypeInfo?: boolean;\r\n        Protect?: DFUChangeProtection;\r\n        Restrict?: DFUChangeRestriction;\r\n        ForceIndexInfo?: boolean;\r\n    }\r\n\r\n    export interface Stat {\r\n        MinSkew: string;\r\n        MaxSkew: string;\r\n        MinSkewInt64: long;\r\n        MaxSkewInt64: long;\r\n        MinSkewPart: long;\r\n        MaxSkewPart: long;\r\n    }\r\n\r\n    export interface DFUPart {\r\n        Id: int;\r\n        Copy: int;\r\n        Ip: string;\r\n        Partsize: string;\r\n        PartSizeInt64: long;\r\n        CompressedSize: long;\r\n    }\r\n\r\n    export interface DFUFileParts {\r\n        DFUPart: DFUPart[];\r\n    }\r\n\r\n    export interface DFUFilePartsOnCluster {\r\n        Cluster: string;\r\n        BaseDir: string;\r\n        ReplicateDir: string;\r\n        Replicate: boolean;\r\n        CanReplicate: boolean;\r\n        DFUFileParts: DFUFileParts;\r\n    }\r\n\r\n    export interface DFUFilePartsOnClusters {\r\n        DFUFilePartsOnCluster: DFUFilePartsOnCluster[];\r\n    }\r\n\r\n    export interface subfiles {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface Superfiles {\r\n        DFULogicalFile: DFULogicalFile[];\r\n    }\r\n\r\n    export interface DFUFileProtect {\r\n        Owner: string;\r\n        Modified: string;\r\n    }\r\n\r\n    export interface ProtectList {\r\n        DFUFileProtect: DFUFileProtect[];\r\n    }\r\n\r\n    export interface Graphs {\r\n        ECLGraph: string[];\r\n    }\r\n\r\n    export interface FieldNames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface Partition {\r\n        FieldMask: long;\r\n        FieldNames: FieldNames;\r\n    }\r\n\r\n    export interface DFUFileBloom {\r\n        FieldMask: long;\r\n        FieldNames: FieldNames;\r\n        Limit: long;\r\n        Probability: string;\r\n    }\r\n\r\n    export interface Blooms {\r\n        DFUFileBloom: DFUFileBloom[];\r\n    }\r\n\r\n    export interface ExtendedIndexInfo {\r\n        IsLeafCountEstimated: boolean;\r\n        NumLeafNodes: long;\r\n        NumBlobNodes: long;\r\n        NumBranchNodes: long;\r\n        SizeDiskLeaves: long;\r\n        SizeDiskBlobs: long;\r\n        SizeDiskBranches: long;\r\n        SizeOriginalData: long;\r\n        SizeOriginalBranches: long;\r\n        SizeMemoryLeaves: long;\r\n        SizeMemoryBranches: long;\r\n        BranchCompressionPercent: double;\r\n        DataCompressionPercent: double;\r\n    }\r\n\r\n    export interface FileDetail {\r\n        Name: string;\r\n        Filename: string;\r\n        Prefix: string;\r\n        NodeGroup: string;\r\n        NumParts: int;\r\n        Description: string;\r\n        Dir: string;\r\n        PathMask: string;\r\n        Filesize: string;\r\n        FileSizeInt64: long;\r\n        RecordSize: string;\r\n        RecordCount: string;\r\n        RecordSizeInt64: long;\r\n        RecordCountInt64: long;\r\n        Wuid: string;\r\n        Owner: string;\r\n        JobName: string;\r\n        Persistent: string;\r\n        Format: string;\r\n        MaxRecordSize: string;\r\n        CsvSeparate: string;\r\n        CsvQuote: string;\r\n        CsvTerminate: string;\r\n        CsvEscape: string;\r\n        Modified: string;\r\n        Ecl: string;\r\n        Stat: Stat;\r\n        DFUFilePartsOnClusters: DFUFilePartsOnClusters;\r\n        isSuperfile: boolean;\r\n        ShowFileContent: boolean;\r\n        subfiles: subfiles;\r\n        Superfiles: Superfiles;\r\n        ProtectList: ProtectList;\r\n        FromRoxieCluster: boolean;\r\n        Graphs: Graphs;\r\n        UserPermission: string;\r\n        ContentType: string;\r\n        CompressedFileSize: long;\r\n        PercentCompressed: string;\r\n        IsCompressed: boolean;\r\n        IsRestricted: boolean;\r\n        BrowseData: boolean;\r\n        jsonInfo: string;\r\n        binInfo: base64Binary;\r\n        PackageID: string;\r\n        Partition: Partition;\r\n        Blooms: Blooms;\r\n        ExpireDays: int;\r\n        KeyType: string;\r\n        AtRestCost: double;\r\n        AccessCost: double;\r\n        ExpirationDate: string;\r\n        ExtendedIndexInfo: ExtendedIndexInfo;\r\n    }\r\n\r\n    export interface DFUInfoResponse {\r\n        Exceptions: Exceptions;\r\n        FileDetail: FileDetail;\r\n    }\r\n\r\n    export interface DFUQueryRequest {\r\n        Prefix?: string;\r\n        NodeGroup?: string;\r\n        ContentType?: string;\r\n        InvertContent?: boolean;\r\n        LogicalName?: string;\r\n        Owner?: string;\r\n        StartDate?: string;\r\n        EndDate?: string;\r\n        FileType?: string;\r\n        FileSizeFrom?: long;\r\n        FileSizeTo?: long;\r\n        FirstN?: int;\r\n        PageSize?: int;\r\n        PageStartFrom?: int;\r\n        Sortby?: string;\r\n        Descending?: boolean;\r\n        OneLevelDirFileReturn?: boolean;\r\n        CacheHint?: long;\r\n        MaxNumberOfFiles?: int;\r\n        IncludeSuperOwner?: boolean;\r\n        StartAccessedTime?: string;\r\n        EndAccessedTime?: string;\r\n        MaxSkewFrom?: long;\r\n        MaxSkewTo?: long;\r\n        MinSkewFrom?: long;\r\n        MinSkewTo?: long;\r\n    }\r\n\r\n    export interface DFUQueryResponse {\r\n        Exceptions: Exceptions;\r\n        DFULogicalFiles: DFULogicalFiles;\r\n        Prefix: string;\r\n        NodeGroup: string;\r\n        LogicalName: string;\r\n        Description: string;\r\n        Owner: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        FileType: string;\r\n        FileSizeFrom: long;\r\n        FileSizeTo: long;\r\n        FirstN: int;\r\n        PageSize: int;\r\n        PageStartFrom: long;\r\n        LastPageFrom: long;\r\n        PageEndAt: long;\r\n        PrevPageFrom: long;\r\n        NextPageFrom: long;\r\n        NumFiles: long;\r\n        Sortby: string;\r\n        Descending: boolean;\r\n        BasicQuery: string;\r\n        ParametersForPaging: string;\r\n        Filters: string;\r\n        CacheHint: long;\r\n        IsSubsetOfFiles: boolean;\r\n        Warning: string;\r\n    }\r\n\r\n    export interface DFURecordTypeInfoRequest {\r\n        Name?: string;\r\n        IncludeJsonTypeInfo?: boolean;\r\n        IncludeBinTypeInfo?: boolean;\r\n    }\r\n\r\n    export interface DFURecordTypeInfoResponse {\r\n        jsonInfo: string;\r\n        binInfo: base64Binary;\r\n    }\r\n\r\n    export interface DFUSearchRequest {\r\n        ShowExample?: string;\r\n    }\r\n\r\n    export interface ClusterNames {\r\n        ClusterName: string[];\r\n    }\r\n\r\n    export interface FileTypes {\r\n        FileType: string[];\r\n    }\r\n\r\n    export interface DFUSearchResponse {\r\n        Exceptions: Exceptions;\r\n        ShowExample: string;\r\n        ClusterNames: ClusterNames;\r\n        FileTypes: FileTypes;\r\n    }\r\n\r\n    export interface DFUSearchDataRequest {\r\n        Cluster?: string;\r\n        ClusterType?: string;\r\n        OpenLogicalName?: string;\r\n        FilterBy?: string;\r\n        ShowColumns?: string;\r\n        ChooseFile?: int;\r\n        StartIndex?: long;\r\n        EndIndex?: long;\r\n        LogicalName?: string;\r\n        ParentName?: string;\r\n        StartForGoback?: long;\r\n        CountForGoback?: int;\r\n        Start?: long;\r\n        Count?: int;\r\n        File?: string;\r\n        Key?: string;\r\n        SchemaOnly?: boolean;\r\n        RoxieSelections?: boolean;\r\n        DisableUppercaseTranslation?: boolean;\r\n        SelectedKey?: string;\r\n    }\r\n\r\n    export interface DFUSearchDataResponse {\r\n        Exceptions: Exceptions;\r\n        OpenLogicalName: string;\r\n        LogicalName: string;\r\n        ParentName: string;\r\n        StartIndex: long;\r\n        EndIndex: long;\r\n        DFUDataKeyedColumns1: DFUDataKeyedColumns1;\r\n        DFUDataKeyedColumns2: DFUDataKeyedColumns2;\r\n        DFUDataKeyedColumns3: DFUDataKeyedColumns3;\r\n        DFUDataKeyedColumns4: DFUDataKeyedColumns4;\r\n        DFUDataKeyedColumns5: DFUDataKeyedColumns5;\r\n        DFUDataKeyedColumns6: DFUDataKeyedColumns6;\r\n        DFUDataKeyedColumns7: DFUDataKeyedColumns7;\r\n        DFUDataKeyedColumns8: DFUDataKeyedColumns8;\r\n        DFUDataKeyedColumns9: DFUDataKeyedColumns9;\r\n        DFUDataKeyedColumns10: DFUDataKeyedColumns10;\r\n        DFUDataKeyedColumns11: DFUDataKeyedColumns11;\r\n        DFUDataKeyedColumns12: DFUDataKeyedColumns12;\r\n        DFUDataKeyedColumns13: DFUDataKeyedColumns13;\r\n        DFUDataKeyedColumns14: DFUDataKeyedColumns14;\r\n        DFUDataKeyedColumns15: DFUDataKeyedColumns15;\r\n        DFUDataKeyedColumns16: DFUDataKeyedColumns16;\r\n        DFUDataKeyedColumns17: DFUDataKeyedColumns17;\r\n        DFUDataKeyedColumns18: DFUDataKeyedColumns18;\r\n        DFUDataKeyedColumns19: DFUDataKeyedColumns19;\r\n        DFUDataKeyedColumns20: DFUDataKeyedColumns20;\r\n        DFUDataNonKeyedColumns1: DFUDataNonKeyedColumns1;\r\n        DFUDataNonKeyedColumns2: DFUDataNonKeyedColumns2;\r\n        DFUDataNonKeyedColumns3: DFUDataNonKeyedColumns3;\r\n        DFUDataNonKeyedColumns4: DFUDataNonKeyedColumns4;\r\n        DFUDataNonKeyedColumns5: DFUDataNonKeyedColumns5;\r\n        DFUDataNonKeyedColumns6: DFUDataNonKeyedColumns6;\r\n        DFUDataNonKeyedColumns7: DFUDataNonKeyedColumns7;\r\n        DFUDataNonKeyedColumns8: DFUDataNonKeyedColumns8;\r\n        DFUDataNonKeyedColumns9: DFUDataNonKeyedColumns9;\r\n        DFUDataNonKeyedColumns10: DFUDataNonKeyedColumns10;\r\n        DFUDataNonKeyedColumns11: DFUDataNonKeyedColumns11;\r\n        DFUDataNonKeyedColumns12: DFUDataNonKeyedColumns12;\r\n        DFUDataNonKeyedColumns13: DFUDataNonKeyedColumns13;\r\n        DFUDataNonKeyedColumns14: DFUDataNonKeyedColumns14;\r\n        DFUDataNonKeyedColumns15: DFUDataNonKeyedColumns15;\r\n        DFUDataNonKeyedColumns16: DFUDataNonKeyedColumns16;\r\n        DFUDataNonKeyedColumns17: DFUDataNonKeyedColumns17;\r\n        DFUDataNonKeyedColumns18: DFUDataNonKeyedColumns18;\r\n        DFUDataNonKeyedColumns19: DFUDataNonKeyedColumns19;\r\n        DFUDataNonKeyedColumns20: DFUDataNonKeyedColumns20;\r\n        RowCount: long;\r\n        ShowColumns: string;\r\n        ChooseFile: int;\r\n        Name: string;\r\n        FilterBy: string;\r\n        FilterForGoBack: string;\r\n        ColumnsHidden: ColumnsHidden;\r\n        ColumnCount: int;\r\n        StartForGoback: long;\r\n        CountForGoback: int;\r\n        Start: long;\r\n        Count: long;\r\n        PageSize: long;\r\n        Total: long;\r\n        Result: string;\r\n        MsgToDisplay: string;\r\n        Cluster: string;\r\n        ClusterType: string;\r\n        File: string;\r\n        Key: string;\r\n        SchemaOnly: boolean;\r\n        RoxieSelections: boolean;\r\n        DisableUppercaseTranslation: boolean;\r\n        AutoUppercaseTranslation: boolean;\r\n        SelectedKey: string;\r\n    }\r\n\r\n    export interface DFUSpaceRequest {\r\n        CountBy?: string;\r\n        ScopeUnder?: string;\r\n        OwnerUnder?: string;\r\n        Interval?: string;\r\n        StartDate?: string;\r\n        EndDate?: string;\r\n    }\r\n\r\n    export interface DFUSpaceItem {\r\n        Name: string;\r\n        NumOfFiles: string;\r\n        NumOfFilesUnknown: string;\r\n        TotalSize: string;\r\n        LargestFile: string;\r\n        LargestSize: string;\r\n        SmallestFile: string;\r\n        SmallestSize: string;\r\n        NumOfFilesInt64: long;\r\n        NumOfFilesUnknownInt64: long;\r\n        TotalSizeInt64: long;\r\n        LargestSizeInt64: long;\r\n        SmallestSizeInt64: long;\r\n    }\r\n\r\n    export interface DFUSpaceItems {\r\n        DFUSpaceItem: DFUSpaceItem[];\r\n    }\r\n\r\n    export interface DFUSpaceResponse {\r\n        Exceptions: Exceptions;\r\n        CountBy: string;\r\n        ScopeUnder: string;\r\n        OwnerUnder: string;\r\n        Interval: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        DFUSpaceItems: DFUSpaceItems;\r\n    }\r\n\r\n    export interface EclRecordTypeInfoRequest {\r\n        Ecl?: string;\r\n        IncludeJsonTypeInfo?: boolean;\r\n        IncludeBinTypeInfo?: boolean;\r\n    }\r\n\r\n    export interface EclRecordTypeInfoResponse {\r\n        jsonInfo: string;\r\n        binInfo: base64Binary;\r\n    }\r\n\r\n    export interface EraseHistoryRequest {\r\n        Name?: string;\r\n    }\r\n\r\n    export interface Origin {\r\n        Name: string;\r\n        Operation: string;\r\n        Timestamp: string;\r\n        IP: string;\r\n        Path: string;\r\n        Owner: string;\r\n        Workunit: string;\r\n    }\r\n\r\n    export interface History {\r\n        Origin: Origin[];\r\n    }\r\n\r\n    export interface EraseHistoryResponse {\r\n        Exceptions: Exceptions;\r\n        History: History;\r\n    }\r\n\r\n    export interface ListHistoryRequest {\r\n        Name?: string;\r\n    }\r\n\r\n    export interface ListHistoryResponse {\r\n        Exceptions: Exceptions;\r\n        History: History;\r\n    }\r\n\r\n    export interface WsDfuPingRequest {\r\n\r\n    }\r\n\r\n    export interface WsDfuPingResponse {\r\n\r\n    }\r\n\r\n    export interface SavexmlRequest {\r\n        name?: string;\r\n    }\r\n\r\n    export interface SavexmlResponse {\r\n        Exceptions: Exceptions;\r\n        xmlmap: base64Binary;\r\n    }\r\n\r\n    export interface SuperfileActionRequest {\r\n        action?: string;\r\n        superfile?: string;\r\n        subfiles?: subfiles;\r\n        before?: string;\r\n        delete?: boolean;\r\n        removeSuperfile?: boolean;\r\n    }\r\n\r\n    export interface SuperfileActionResponse {\r\n        Exceptions: Exceptions;\r\n        superfile: string;\r\n        retcode: int;\r\n    }\r\n\r\n    export interface SuperfileListRequest {\r\n        superfile?: string;\r\n    }\r\n\r\n    export interface SuperfileListResponse {\r\n        Exceptions: Exceptions;\r\n        superfile: string;\r\n        subfiles: subfiles;\r\n    }\r\n\r\n}\r\n\r\nexport class DfuServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WsDfu\", \"1.65\");\r\n    }\r\n\r\n    Add(request: Partial<WsDfu.AddRequest>): Promise<WsDfu.AddResponse> {\r\n        return this._connection.send(\"Add\", request, \"json\", false, undefined, \"AddResponse\");\r\n    }\r\n\r\n    AddRemote(request: Partial<WsDfu.AddRemoteRequest>): Promise<WsDfu.AddRemoteResponse> {\r\n        return this._connection.send(\"AddRemote\", request, \"json\", false, undefined, \"AddRemoteResponse\");\r\n    }\r\n\r\n    AddtoSuperfile(request: Partial<WsDfu.AddtoSuperfileRequest>): Promise<WsDfu.AddtoSuperfileResponse> {\r\n        return this._connection.send(\"AddtoSuperfile\", request, \"json\", false, undefined, \"AddtoSuperfileResponse\");\r\n    }\r\n\r\n    DFUArrayAction(request: Partial<WsDfu.DFUArrayActionRequest>): Promise<WsDfu.DFUArrayActionResponse> {\r\n        return this._connection.send(\"DFUArrayAction\", request, \"json\", false, undefined, \"DFUArrayActionResponse\");\r\n    }\r\n\r\n    DFUBrowseData(request: Partial<WsDfu.DFUBrowseDataRequest>): Promise<WsDfu.DFUBrowseDataResponse> {\r\n        return this._connection.send(\"DFUBrowseData\", request, \"json\", false, undefined, \"DFUBrowseDataResponse\");\r\n    }\r\n\r\n    DFUDefFile(request: Partial<WsDfu.DFUDefFileRequest>): Promise<WsDfu.DFUDefFileResponse> {\r\n        return this._connection.send(\"DFUDefFile\", request, \"json\", false, undefined, \"DFUDefFileResponse\");\r\n    }\r\n\r\n    DFUFileAccess(request: Partial<WsDfu.DFUFileAccessRequest>): Promise<WsDfu.DFUFileAccessResponse> {\r\n        return this._connection.send(\"DFUFileAccess\", request, \"json\", false, undefined, \"DFUFileAccessResponse\");\r\n    }\r\n\r\n    DFUFileAccessV2(request: Partial<WsDfu.DFUFileAccessV2Request>): Promise<WsDfu.DFUFileAccessResponse> {\r\n        return this._connection.send(\"DFUFileAccessV2\", request, \"json\", false, undefined, \"DFUFileAccessResponse\");\r\n    }\r\n\r\n    DFUFileCreate(request: Partial<WsDfu.DFUFileCreateRequest>): Promise<WsDfu.DFUFileCreateResponse> {\r\n        return this._connection.send(\"DFUFileCreate\", request, \"json\", false, undefined, \"DFUFileCreateResponse\");\r\n    }\r\n\r\n    DFUFileCreateV2(request: Partial<WsDfu.DFUFileCreateV2Request>): Promise<WsDfu.DFUFileCreateResponse> {\r\n        return this._connection.send(\"DFUFileCreateV2\", request, \"json\", false, undefined, \"DFUFileCreateResponse\");\r\n    }\r\n\r\n    DFUFilePublish(request: Partial<WsDfu.DFUFilePublishRequest>): Promise<WsDfu.DFUFilePublishResponse> {\r\n        return this._connection.send(\"DFUFilePublish\", request, \"json\", false, undefined, \"DFUFilePublishResponse\");\r\n    }\r\n\r\n    DFUFileView(request: Partial<WsDfu.DFUFileViewRequest>): Promise<WsDfu.DFUFileViewResponse> {\r\n        return this._connection.send(\"DFUFileView\", request, \"json\", false, undefined, \"DFUFileViewResponse\");\r\n    }\r\n\r\n    DFUGetDataColumns(request: Partial<WsDfu.DFUGetDataColumnsRequest>): Promise<WsDfu.DFUGetDataColumnsResponse> {\r\n        return this._connection.send(\"DFUGetDataColumns\", request, \"json\", false, undefined, \"DFUGetDataColumnsResponse\");\r\n    }\r\n\r\n    DFUGetFileMetaData(request: Partial<WsDfu.DFUGetFileMetaDataRequest>): Promise<WsDfu.DFUGetFileMetaDataResponse> {\r\n        return this._connection.send(\"DFUGetFileMetaData\", request, \"json\", false, undefined, \"DFUGetFileMetaDataResponse\");\r\n    }\r\n\r\n    DFUInfo(request: Partial<WsDfu.DFUInfoRequest>): Promise<WsDfu.DFUInfoResponse> {\r\n        return this._connection.send(\"DFUInfo\", request, \"json\", false, undefined, \"DFUInfoResponse\");\r\n    }\r\n\r\n    DFUQuery(request: Partial<WsDfu.DFUQueryRequest>): Promise<WsDfu.DFUQueryResponse> {\r\n        return this._connection.send(\"DFUQuery\", request, \"json\", false, undefined, \"DFUQueryResponse\");\r\n    }\r\n\r\n    DFURecordTypeInfo(request: Partial<WsDfu.DFURecordTypeInfoRequest>): Promise<WsDfu.DFURecordTypeInfoResponse> {\r\n        return this._connection.send(\"DFURecordTypeInfo\", request, \"json\", false, undefined, \"DFURecordTypeInfoResponse\");\r\n    }\r\n\r\n    DFUSearch(request: Partial<WsDfu.DFUSearchRequest>): Promise<WsDfu.DFUSearchResponse> {\r\n        return this._connection.send(\"DFUSearch\", request, \"json\", false, undefined, \"DFUSearchResponse\");\r\n    }\r\n\r\n    DFUSearchData(request: Partial<WsDfu.DFUSearchDataRequest>): Promise<WsDfu.DFUSearchDataResponse> {\r\n        return this._connection.send(\"DFUSearchData\", request, \"json\", false, undefined, \"DFUSearchDataResponse\");\r\n    }\r\n\r\n    DFUSpace(request: Partial<WsDfu.DFUSpaceRequest>): Promise<WsDfu.DFUSpaceResponse> {\r\n        return this._connection.send(\"DFUSpace\", request, \"json\", false, undefined, \"DFUSpaceResponse\");\r\n    }\r\n\r\n    EclRecordTypeInfo(request: Partial<WsDfu.EclRecordTypeInfoRequest>): Promise<WsDfu.EclRecordTypeInfoResponse> {\r\n        return this._connection.send(\"EclRecordTypeInfo\", request, \"json\", false, undefined, \"EclRecordTypeInfoResponse\");\r\n    }\r\n\r\n    EraseHistory(request: Partial<WsDfu.EraseHistoryRequest>): Promise<WsDfu.EraseHistoryResponse> {\r\n        return this._connection.send(\"EraseHistory\", request, \"json\", false, undefined, \"EraseHistoryResponse\");\r\n    }\r\n\r\n    ListHistory(request: Partial<WsDfu.ListHistoryRequest>): Promise<WsDfu.ListHistoryResponse> {\r\n        return this._connection.send(\"ListHistory\", request, \"json\", false, undefined, \"ListHistoryResponse\");\r\n    }\r\n\r\n    Ping(request: Partial<WsDfu.WsDfuPingRequest>): Promise<WsDfu.WsDfuPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"WsDfuPingResponse\");\r\n    }\r\n\r\n    Savexml(request: Partial<WsDfu.SavexmlRequest>): Promise<WsDfu.SavexmlResponse> {\r\n        return this._connection.send(\"Savexml\", request, \"json\", false, undefined, \"SavexmlResponse\");\r\n    }\r\n\r\n    SuperfileAction(request: Partial<WsDfu.SuperfileActionRequest>): Promise<WsDfu.SuperfileActionResponse> {\r\n        return this._connection.send(\"SuperfileAction\", request, \"json\", false, undefined, \"SuperfileActionResponse\");\r\n    }\r\n\r\n    SuperfileList(request: Partial<WsDfu.SuperfileListRequest>): Promise<WsDfu.SuperfileListResponse> {\r\n        return this._connection.send(\"SuperfileList\", request, \"json\", false, undefined, \"SuperfileListResponse\");\r\n    }\r\n\r\n}\r\n","import { DfuServiceBase, WsDfu } from \"./wsdl/WsDfu/v1.65/WsDfu\";\r\n\r\nexport { WsDfu };\r\n\r\nexport const DFUArrayActions = WsDfu.DFUArrayActions;\r\nexport const DFUDefFileFormat = WsDfu.DFUDefFileFormat;\r\nexport const DFUChangeProtection = WsDfu.DFUChangeProtection;\r\nexport const DFUChangeRestriction = WsDfu.DFUChangeRestriction;\r\n\r\nexport type base64Binary = WsDfu.base64Binary;\r\n\r\nexport class DFUService extends DfuServiceBase {\r\n\r\n    DFUFile(request: WsDfu.DFUDefFileRequest): Promise<string> {\r\n        return this._connection.send(\"DFUDefFile\", request, \"text\");\r\n    }\r\n\r\n}\r\n","import { IConnection, IOptions } from \"../connection\";\r\nimport { Service } from \"../espConnection\";\r\n\r\n/*\r\n    Response structures generated via:\r\n    * http://localhost:8010/WsDFUXRef/?ver_=1.01&reqjson_\r\n    * http://localhost:8010/WsDFUXRef/?ver_=1.01&respjson_\r\n    * http://json2ts.com/\r\n*/\r\n\r\nexport namespace WsDFUXRef {\r\n\r\n    export interface XRefFiles {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface DFUXRefArrayActionRequest {\r\n        Type: string;\r\n        Cluster: string;\r\n        Action: string;\r\n        XRefFiles: XRefFiles;\r\n    }\r\n\r\n    export interface DFUXRefBuildRequest {\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefBuildCancelRequest {\r\n    }\r\n\r\n    export interface DFUXRefCleanDirectoriesRequest {\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefDirectoriesQueryRequest {\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefFoundFilesQueryRequest {\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefListRequest {\r\n    }\r\n\r\n    export interface DFUXRefLostFilesQueryRequest {\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefMessagesQueryRequest {\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefOrphanFilesQueryRequest {\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefUnusedFilesRequest {\r\n        ProcessCluster: string;\r\n        CheckPackageMaps: boolean;\r\n        GetFileDetails: boolean;\r\n    }\r\n\r\n    export interface WsDFUXRefPingRequest {\r\n    }\r\n\r\n    export interface Request {\r\n        DFUXRefArrayActionRequest: DFUXRefArrayActionRequest;\r\n        DFUXRefBuildRequest: DFUXRefBuildRequest;\r\n        DFUXRefBuildCancelRequest: DFUXRefBuildCancelRequest;\r\n        DFUXRefCleanDirectoriesRequest: DFUXRefCleanDirectoriesRequest;\r\n        DFUXRefDirectoriesQueryRequest: DFUXRefDirectoriesQueryRequest;\r\n        DFUXRefFoundFilesQueryRequest: DFUXRefFoundFilesQueryRequest;\r\n        DFUXRefListRequest: DFUXRefListRequest;\r\n        DFUXRefLostFilesQueryRequest: DFUXRefLostFilesQueryRequest;\r\n        DFUXRefMessagesQueryRequest: DFUXRefMessagesQueryRequest;\r\n        DFUXRefOrphanFilesQueryRequest: DFUXRefOrphanFilesQueryRequest;\r\n        DFUXRefUnusedFilesRequest: DFUXRefUnusedFilesRequest;\r\n        WsDFUXRefPingRequest: WsDFUXRefPingRequest;\r\n    }\r\n\r\n    export interface DFUXRefArrayActionResponse {\r\n        DFUXRefArrayActionResult: string;\r\n    }\r\n\r\n    export interface DFUXRefBuildResponse {\r\n        DFUXRefActionResult: string;\r\n    }\r\n\r\n    export interface DFUXRefBuildCancelResponse {\r\n        DFUXRefBuildCancelResult: string;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface Directory {\r\n        Num: string;\r\n        Name: string;\r\n        MaxSize: string;\r\n        MaxIP: string;\r\n        MinSize: string;\r\n        MinIP: string;\r\n        Size: string;\r\n        PositiveSkew: string;\r\n    }\r\n\r\n    export interface DFUXRefDirectoriesQueryResult {\r\n        Directory: Directory[];\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefDirectoriesQueryResponse {\r\n        DFUXRefDirectoriesQueryResult: DFUXRefDirectoriesQueryResult;\r\n    }\r\n\r\n    export interface Part {\r\n        Num: string;\r\n        Node: string;\r\n    }\r\n\r\n    export interface File {\r\n        Size: string;\r\n        Partmask: string;\r\n        Modified: Date;\r\n        Numparts: string;\r\n        Part: Part[];\r\n    }\r\n\r\n    export interface DFUXRefFoundFilesQueryResult {\r\n        File: File[];\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefFoundFilesQueryResponse {\r\n        DFUXRefFoundFilesQueryResult: DFUXRefFoundFilesQueryResult;\r\n    }\r\n\r\n    export interface XRefNode {\r\n        Name: string;\r\n        Modified: string;\r\n        Status: string;\r\n    }\r\n\r\n    export interface DFUXRefListResult {\r\n        XRefNode: XRefNode[];\r\n    }\r\n\r\n    export interface DFUXRefListResponse {\r\n        DFUXRefListResult: DFUXRefListResult;\r\n    }\r\n\r\n    export interface File2 {\r\n        Partslost: string;\r\n        Name: string;\r\n        Partmask: string;\r\n        Modified: Date;\r\n        Numparts: string;\r\n        Part: any;\r\n        Cluster: string;\r\n        Size: string;\r\n        Primarylost: string;\r\n        Replicatedlost: string;\r\n    }\r\n\r\n    export interface DFUXRefLostFilesQueryResult {\r\n        File: File2[];\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefLostFilesQueryResponse {\r\n        DFUXRefLostFilesQueryResult: DFUXRefLostFilesQueryResult;\r\n    }\r\n\r\n    export interface Warning {\r\n        Text: string;\r\n        File: string;\r\n    }\r\n\r\n    export interface DFUXRefMessagesQueryResult {\r\n        Warning: Warning[];\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefMessagesQueryResponse {\r\n        DFUXRefMessagesQueryResult: DFUXRefMessagesQueryResult;\r\n    }\r\n\r\n    export interface DFUXRefOrphanFilesQueryResult {\r\n        File: File[];\r\n        Cluster: string;\r\n    }\r\n\r\n    export interface DFUXRefOrphanFilesQueryResponse {\r\n        DFUXRefOrphanFilesQueryResult: DFUXRefOrphanFilesQueryResult;\r\n    }\r\n\r\n    export interface Exception2 {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions2 {\r\n        Source: string;\r\n        Exception: Exception2[];\r\n    }\r\n\r\n    export interface UnusedFiles {\r\n        File: string[];\r\n    }\r\n\r\n    export interface DFULogicalFile {\r\n        Prefix: string;\r\n        ClusterName: string;\r\n        Directory: string;\r\n        Description: string;\r\n        Parts: string;\r\n        Name: string;\r\n        Owner: string;\r\n        Totalsize: string;\r\n        RecordCount: string;\r\n        Modified: string;\r\n        LongSize: string;\r\n        LongRecordCount: string;\r\n        isSuperfile: boolean;\r\n        isZipfile: boolean;\r\n        isDirectory: boolean;\r\n        Replicate: boolean;\r\n        IntSize: number;\r\n        IntRecordCount: number;\r\n    }\r\n\r\n    export interface UnusedFilesWithDetails {\r\n        DFULogicalFile: DFULogicalFile[];\r\n    }\r\n\r\n    export interface DFUXRefUnusedFilesResponse {\r\n        Exceptions: Exceptions2;\r\n        UnusedFileCount: number;\r\n        UnusedFiles: UnusedFiles;\r\n        UnusedFilesWithDetails: UnusedFilesWithDetails;\r\n    }\r\n\r\n    export interface WsDFUXRefPingResponse {\r\n    }\r\n}\r\n\r\nexport class DFUXRefService extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WsDFUXRef\", \"1.01\");\r\n    }\r\n\r\n    DFUXRefArrayAction(request: WsDFUXRef.DFUXRefArrayActionRequest): Promise<WsDFUXRef.DFUXRefArrayActionResponse> {\r\n        return this._connection.send(\"DFUXRefArrayAction\", request);\r\n    }\r\n\r\n    DFUXRefBuild(request: WsDFUXRef.DFUXRefBuildRequest): Promise<WsDFUXRef.DFUXRefBuildResponse> {\r\n        return this._connection.send(\"DFUXRefBuild\", request);\r\n    }\r\n\r\n    DFUXRefBuildCancel(request: WsDFUXRef.DFUXRefBuildCancelRequest): Promise<WsDFUXRef.DFUXRefBuildCancelResponse> {\r\n        return this._connection.send(\"DFUXRefBuildCancel\", request);\r\n    }\r\n\r\n    DFUXRefCleanDirectories(request: WsDFUXRef.DFUXRefCleanDirectoriesRequest): Promise<WsDFUXRef.DFUXRefDirectoriesQueryResponse> {\r\n        return this._connection.send(\"DFUXRefCleanDirectories\", request);\r\n    }\r\n\r\n    DFUXRefDirectories(request: WsDFUXRef.DFUXRefDirectoriesQueryRequest): Promise<WsDFUXRef.DFUXRefDirectoriesQueryResponse> {\r\n        return this._connection.send(\"DFUXRefDirectories\", request, undefined, undefined, undefined, \"DFUXRefDirectoriesQueryResponse\");\r\n    }\r\n\r\n    DFUXRefFoundFiles(request: WsDFUXRef.DFUXRefFoundFilesQueryRequest): Promise<WsDFUXRef.DFUXRefFoundFilesQueryResponse> {\r\n        return this._connection.send(\"DFUXRefFoundFiles\", request, undefined, undefined, undefined, \"DFUXRefFoundFilesQueryResponse\");\r\n    }\r\n\r\n    DFUXRefList(request: WsDFUXRef.DFUXRefListRequest = {}): Promise<WsDFUXRef.DFUXRefListResponse> {\r\n        return this._connection.send(\"DFUXRefList\", request);\r\n    }\r\n\r\n    DFUXRefLostFiles(request: WsDFUXRef.DFUXRefLostFilesQueryRequest): Promise<WsDFUXRef.DFUXRefLostFilesQueryResponse> {\r\n        return this._connection.send(\"DFUXRefLostFiles\", request, undefined, undefined, undefined, \"DFUXRefLostFilesQueryResponse\");\r\n    }\r\n\r\n    DFUXRefMessages(request: WsDFUXRef.DFUXRefMessagesQueryRequest): Promise<WsDFUXRef.DFUXRefMessagesQueryResponse> {\r\n        return this._connection.send(\"DFUXRefMessages\", request, undefined, undefined, undefined, \"DFUXRefMessagesQueryResponse\");\r\n    }\r\n\r\n    DFUXRefOrphanFiles(request: WsDFUXRef.DFUXRefOrphanFilesQueryRequest): Promise<WsDFUXRef.DFUXRefOrphanFilesQueryResponse> {\r\n        return this._connection.send(\"DFUXRefOrphanFiles\", request, undefined, undefined, undefined, \"DFUXRefOrphanFilesQueryResponse\");\r\n    }\r\n\r\n    DFUXRefUnusedFiles(request: WsDFUXRef.DFUXRefUnusedFilesRequest): Promise<WsDFUXRef.DFUXRefUnusedFilesResponse> {\r\n        return this._connection.send(\"DFUXRefUnusedFiles\", request);\r\n    }\r\n}\r\n","import { DDL2 } from \"@hpcc-js/ddl-shim\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { ESPExceptions, Service } from \"../espConnection\";\r\n\r\nexport type IFieldType = DDL2.IFieldType;\r\nexport type IField = DDL2.IField;\r\n\r\nexport type IWsEclRequest = IField[];\r\nexport type IWsEclResult = IField[];\r\nexport type IWsEclResponse = { [id: string]: IField[] };\r\n\r\nfunction jsonToIField(id: string, item: any): IField {\r\n    const type = typeof item;\r\n    switch (type) {\r\n        case \"boolean\":\r\n        case \"number\":\r\n        case \"string\":\r\n            return { id, type };\r\n        case \"object\":\r\n            if (item.Row instanceof Array) {\r\n                item = item.Row;\r\n            }\r\n            if (item instanceof Array) {\r\n                return {\r\n                    id,\r\n                    type: \"dataset\",\r\n                    children: jsonToIFieldArr(item[0])\r\n                };\r\n            } else if (item instanceof Object) {\r\n                if (item.Item && item.Item instanceof Array && item.Item.length === 1) {\r\n                    const fieldType = typeof item.Item[0];\r\n                    if (fieldType === \"string\" || fieldType === \"number\") {\r\n                        return {\r\n                            id,\r\n                            type: \"set\",\r\n                            fieldType\r\n                        };\r\n                    }\r\n                    throw new Error(\"Unknown field type\");\r\n                }\r\n                return {\r\n                    id,\r\n                    type: \"object\",\r\n                    fields: jsonToIFieldObj(item)\r\n                };\r\n            }\r\n        // Fall through  ---\r\n        default:\r\n            throw new Error(\"Unknown field type\");\r\n    }\r\n}\r\n\r\nfunction jsonToIFieldArr(json: any): IField[] {\r\n    if (json.Row && json.Row instanceof Array) {\r\n        json = json.Row[0];\r\n    }\r\n    const retVal: IField[] = [];\r\n    for (const key in json) {\r\n        retVal.push(jsonToIField(key, json[key]));\r\n    }\r\n    return retVal;\r\n}\r\n\r\nfunction jsonToIFieldObj(json: any): { [id: string]: IField } {\r\n    const fields = {};\r\n    for (const key in json) {\r\n        fields[key] = jsonToIField(key, json[key]);\r\n    }\r\n    return fields;\r\n}\r\n\r\nexport class EclService extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WsEcl\", \"0\");\r\n    }\r\n\r\n    opts() {\r\n        return this._connection.opts();\r\n    }\r\n\r\n    requestJson(querySet: string, queryId: string): Promise<IWsEclRequest> {\r\n        // http://192.168.3.22:8002/WsEcl/example/request/query/roxie/peopleaccounts/json?display\r\n        return this._connection.send(`example/request/query/${querySet}/${queryId}/json`, {}, \"text\").then(response => {\r\n            const requestSchema = JSON.parse(response);\r\n            for (const key in requestSchema) {\r\n                return requestSchema[key];\r\n            }\r\n            return {};\r\n        }).then(jsonToIFieldArr);\r\n    }\r\n\r\n    responseJson(querySet: string, queryId: string): Promise<IWsEclResponse> {\r\n        // http://192.168.3.22:8002/WsEcl/example/response/query/roxie/peopleaccounts/json?display\r\n        return this._connection.send(`example/response/query/${querySet}/${queryId}/json`, {}, \"text\").then(response => {\r\n            const responseSchema = JSON.parse(response);\r\n            for (const key in responseSchema) {\r\n                return responseSchema[key].Results;\r\n            }\r\n            return {};\r\n        }).then(resultsJson => {\r\n            const retVal: IWsEclResponse = {};\r\n            for (const key in resultsJson) {\r\n                retVal[key] = jsonToIFieldArr(resultsJson[key]);\r\n            }\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    submit(querySet: string, queryId: string, request: object) {\r\n        // http://192.168.3.22:8002/WsEcl/submit/query/roxie/peopleaccounts.1/json\r\n        const action = `submit/query/${querySet}/${queryId}`;\r\n        return this._connection.send(action, request, \"json2\").then(response => {\r\n            if (response.Results && response.Results.Exception) {\r\n                throw new ESPExceptions(action, request, {\r\n                    Source: \"wsEcl.submit\",\r\n                    Exception: response.Results.Exception\r\n                });\r\n            }\r\n            return response.Results;\r\n        });\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsElk {\r\n\r\nexport interface GetConfigDetailsRequest {\r\n\r\n}\r\n\r\nexport interface GetConfigDetailsResponse {\r\n    IntegrateKibana: boolean;\r\n    KibanaAddress: string;\r\n    KibanaPort: string;\r\n    KibanaEntryPointURI: string;\r\n    ReportElasticSearchHealth: boolean;\r\n    ElasticSearchAddresses: string;\r\n    ElasticSearchPort: string;\r\n    ReportLogStashHealth: boolean;\r\n    LogStashAddress: string;\r\n    LogStashPort: string;\r\n}\r\n\r\nexport interface ws_elkPingRequest {\r\n\r\n}\r\n\r\nexport interface ws_elkPingResponse {\r\n\r\n}\r\n\r\n}\r\n\r\nexport class ElkServiceBase extends Service {\r\n\r\nconstructor(optsConnection: IOptions | IConnection) {\r\nsuper(optsConnection, \"ws_elk\", \"1\");\r\n}\r\n\r\nGetConfigDetails(request: WsElk.GetConfigDetailsRequest): Promise<WsElk.GetConfigDetailsResponse> {\r\n\treturn this._connection.send(\"GetConfigDetails\", request);\r\n}\r\n\r\nPing(request: WsElk.ws_elkPingRequest): Promise<WsElk.ws_elkPingResponse> {\r\n\treturn this._connection.send(\"Ping\", request);\r\n}\r\n\r\n}\r\n","import { ElkServiceBase, WsElk } from \"./wsdl/ws_elk/v1/ws_elk\";\r\n\r\nexport {\r\n    WsElk\r\n};\r\n\r\nexport class ElkService extends ElkServiceBase {\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsLogaccess {\r\n\r\n    export type dateTime = string;\r\n    export type unsignedInt = number;\r\n    export type long = number;\r\n\r\n    export enum LogColumnType {\r\n        global = \"global\",\r\n        workunits = \"workunits\",\r\n        components = \"components\",\r\n        audience = \"audience\",\r\n        class = \"class\",\r\n        instance = \"instance\",\r\n        node = \"node\",\r\n        message = \"message\",\r\n        logid = \"logid\",\r\n        processid = \"processid\",\r\n        threadid = \"threadid\",\r\n        timestamp = \"timestamp\",\r\n        pod = \"pod\"\r\n    }\r\n\r\n    export enum LogColumnValueType {\r\n        string = \"string\",\r\n        numeric = \"numeric\",\r\n        datetime = \"datetime\",\r\n        enum = \"enum\"\r\n    }\r\n\r\n    export enum LogAccessType {\r\n        All = 0,\r\n        ByJobID = 1,\r\n        ByComponent = 2,\r\n        ByLogType = 3,\r\n        ByTargetAudience = 4,\r\n        BySourceInstance = 5,\r\n        BySourceNode = 6,\r\n        ByFieldName = 7,\r\n        ByPod = 8\r\n    }\r\n\r\n    export enum LogAccessFilterOperator {\r\n        NONE = 0,\r\n        AND = 1,\r\n        OR = 2\r\n    }\r\n\r\n    export enum LogSelectColumnMode {\r\n        MIN = 0,\r\n        DEFAULT = 1,\r\n        ALL = 2,\r\n        CUSTOM = 3\r\n    }\r\n\r\n    export enum SortColumType {\r\n        ByDate = 0,\r\n        ByJobID = 1,\r\n        ByComponent = 2,\r\n        ByLogType = 3,\r\n        ByTargetAudience = 4,\r\n        BySourceInstance = 5,\r\n        BySourceNode = 6,\r\n        ByFieldName = 7,\r\n        ByPod = 8\r\n    }\r\n\r\n    export enum SortDirection {\r\n        ASC = 0,\r\n        DSC = 1\r\n    }\r\n\r\n    export interface GetLogAccessInfoRequest {\r\n\r\n    }\r\n\r\n    export interface EnumeratedValues {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface Column {\r\n        Name: string;\r\n        LogType: LogColumnType;\r\n        EnumeratedValues: {\r\n            Item: string[];\r\n        };\r\n        ColumnMode: LogSelectColumnMode;\r\n        ColumnType: LogColumnValueType;\r\n    }\r\n\r\n    export interface Columns {\r\n        Column: Column[];\r\n    }\r\n\r\n    export interface GetLogAccessInfoResponse {\r\n        Columns: {\r\n            Column: Column[];\r\n        };\r\n        RemoteLogManagerType: string;\r\n        RemoteLogManagerConnectionString: string;\r\n        SupportsResultPaging: boolean;\r\n    }\r\n\r\n    export interface leftFilter {\r\n        LogCategory: LogAccessType;\r\n        SearchByValue: string;\r\n        SearchField: string;\r\n    }\r\n\r\n    export interface rightFilter {\r\n        LogCategory: LogAccessType;\r\n        SearchByValue: string;\r\n        SearchField: string;\r\n    }\r\n\r\n    export interface rightBinaryFilter {\r\n        BinaryLogFilter: BinaryLogFilter[];\r\n    }\r\n\r\n    export interface BinaryLogFilter {\r\n        leftFilter: leftFilter;\r\n        leftBinaryFilter: leftBinaryFilter;\r\n        Operator: LogAccessFilterOperator;\r\n        rightFilter: {\r\n            LogCategory: LogAccessType;\r\n            SearchByValue: string;\r\n            SearchField: string;\r\n        };\r\n        rightBinaryFilter: {\r\n            BinaryLogFilter: BinaryLogFilter[];\r\n        };\r\n    }\r\n\r\n    export interface leftBinaryFilter {\r\n        BinaryLogFilter: BinaryLogFilter[];\r\n    }\r\n\r\n    export interface Filter {\r\n        leftFilter: leftFilter;\r\n        leftBinaryFilter: leftBinaryFilter;\r\n        Operator: LogAccessFilterOperator;\r\n        rightFilter: rightFilter;\r\n        rightBinaryFilter: rightBinaryFilter;\r\n    }\r\n\r\n    export interface Range {\r\n        StartDate: dateTime;\r\n        EndDate: dateTime;\r\n    }\r\n\r\n    export interface SortCondition {\r\n        BySortType: SortColumType;\r\n        ColumnName: string;\r\n        Direction: SortDirection;\r\n    }\r\n\r\n    export interface SortBy {\r\n        SortCondition: SortCondition[];\r\n    }\r\n\r\n    export interface GetLogsRequest {\r\n        Filter?: {\r\n            leftFilter?: leftFilter;\r\n            leftBinaryFilter?: leftBinaryFilter;\r\n            Operator?: LogAccessFilterOperator;\r\n            rightFilter?: rightFilter;\r\n            rightBinaryFilter?: rightBinaryFilter;\r\n        };\r\n        Range?: {\r\n            StartDate?: dateTime;\r\n            EndDate?: dateTime;\r\n        };\r\n        LogLineLimit?: unsignedInt;\r\n        LogLineStartFrom?: long;\r\n        SelectColumnMode?: LogSelectColumnMode;\r\n        Columns?: Columns;\r\n        Format?: string;\r\n        SortBy?: {\r\n            SortCondition?: SortCondition[];\r\n        };\r\n    }\r\n\r\n    export interface GetLogsResponse {\r\n        LogLines: string;\r\n        LogLineCount: unsignedInt;\r\n        TotalLogLinesAvailable: unsignedInt;\r\n    }\r\n\r\n    export interface ws_logaccessPingRequest {\r\n\r\n    }\r\n\r\n    export interface ws_logaccessPingResponse {\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class LogaccessServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"ws_logaccess\", \"1.05\");\r\n    }\r\n\r\n    GetLogAccessInfo(request: WsLogaccess.GetLogAccessInfoRequest): Promise<WsLogaccess.GetLogAccessInfoResponse> {\r\n        return this._connection.send(\"GetLogAccessInfo\", request, \"json\", false, undefined, \"GetLogAccessInfoResponse\");\r\n    }\r\n\r\n    GetLogs(request: WsLogaccess.GetLogsRequest): Promise<WsLogaccess.GetLogsResponse> {\r\n        return this._connection.send(\"GetLogs\", request, \"json\", false, undefined, \"GetLogsResponse\");\r\n    }\r\n\r\n    Ping(request: WsLogaccess.ws_logaccessPingRequest): Promise<WsLogaccess.ws_logaccessPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"ws_logaccessPingResponse\");\r\n    }\r\n\r\n}\r\n","import { scopedLogger } from \"@hpcc-js/util\";\r\nimport { LogaccessServiceBase, WsLogaccess } from \"./wsdl/ws_logaccess/v1.05/ws_logaccess\";\r\n\r\nconst logger = scopedLogger(\"@hpcc-js/comms/services/wsLogaccess.ts\");\r\n\r\nexport {\r\n    WsLogaccess\r\n};\r\n\r\nexport interface GetLogsExRequest {\r\n    audience?: string;\r\n    class?: string[];\r\n    workunits?: string;\r\n    message?: string;\r\n    processid?: string;\r\n    logid?: string;\r\n    threadid?: string;\r\n    timestamp?: string;\r\n    components?: string;\r\n    instance?: string;\r\n    StartDate?: Date;\r\n    EndDate?: Date;\r\n    LogLineStartFrom: number,\r\n    LogLineLimit: number\r\n}\r\n\r\nexport const enum LogType {\r\n    Disaster = \"DIS\",\r\n    Error = \"ERR\",\r\n    Warning = \"WRN\",\r\n    Information = \"INF\",\r\n    Progress = \"PRO\",\r\n    Metric = \"MET\"\r\n}\r\n\r\nexport const enum TargetAudience {\r\n    Operator = \"OPR\",\r\n    User = \"USR\",\r\n    Programmer = \"PRO\",\r\n    Audit = \"ADT\"\r\n}\r\n\r\n//properties here are \"LogType\" values in Ws_logaccess.GetLogAccessInfo\r\nexport interface LogLine {\r\n    audience?: string;\r\n    class?: string;\r\n    workunits?: string;\r\n    message?: string;\r\n    processid?: number;\r\n    logid?: string;\r\n    threadid?: number;\r\n    timestamp?: string;\r\n    components?: string;\r\n    instance?: string;\r\n}\r\n\r\nexport interface GetLogsExResponse {\r\n    lines: LogLine[],\r\n    total: number,\r\n}\r\n\r\nexport class LogaccessService extends LogaccessServiceBase {\r\n\r\n    protected _logAccessInfo: Promise<WsLogaccess.GetLogAccessInfoResponse>;\r\n\r\n    GetLogAccessInfo(request: WsLogaccess.GetLogAccessInfoRequest = {}): Promise<WsLogaccess.GetLogAccessInfoResponse> {\r\n        if (!this._logAccessInfo) {\r\n            this._logAccessInfo = super.GetLogAccessInfo(request);\r\n        }\r\n        return this._logAccessInfo;\r\n    }\r\n\r\n    GetLogs(request: WsLogaccess.GetLogsRequest): Promise<WsLogaccess.GetLogsResponse> {\r\n        return super.GetLogs(request);\r\n    }\r\n\r\n    async GetLogsEx(request: GetLogsExRequest): Promise<GetLogsExResponse> {\r\n        const logInfo = await this.GetLogAccessInfo();\r\n        const columnMap = {};\r\n        logInfo.Columns.Column.forEach(column => columnMap[column.LogType] = column.Name);\r\n\r\n        const convertLogLine = (line: any) => {\r\n            const retVal: LogLine = {};\r\n            for (const key in columnMap) {\r\n                if (line?.fields) {\r\n                    retVal[key] = Object.assign({}, ...line.fields)[columnMap[key]] ?? \"\";\r\n                } else {\r\n                    retVal[key] = \"\";\r\n                }\r\n            }\r\n            return retVal;\r\n        };\r\n\r\n        const getLogsRequest: WsLogaccess.GetLogsRequest = {\r\n            Filter: {\r\n                leftBinaryFilter: {\r\n                    BinaryLogFilter: [{\r\n                        leftFilter: {\r\n                            LogCategory: WsLogaccess.LogAccessType.All,\r\n                        },\r\n                    } as WsLogaccess.BinaryLogFilter]\r\n                }\r\n            },\r\n            Range: {\r\n                StartDate: new Date(0).toISOString(),\r\n            },\r\n            LogLineStartFrom: request.LogLineStartFrom ?? 0,\r\n            LogLineLimit: request.LogLineLimit ?? 100,\r\n            SelectColumnMode: WsLogaccess.LogSelectColumnMode.DEFAULT,\r\n            Format: \"JSON\",\r\n            SortBy: {\r\n                SortCondition: [{\r\n                    BySortType: WsLogaccess.SortColumType.ByDate,\r\n                    ColumnName: \"\",\r\n                    Direction: 0\r\n                }]\r\n            }\r\n        };\r\n\r\n        const filters: WsLogaccess.leftFilter[] = [];\r\n        for (const key in request) {\r\n            let searchField;\r\n            if (key in columnMap) {\r\n                if (Object.values(WsLogaccess.LogColumnType).includes(key as WsLogaccess.LogColumnType)) {\r\n                    searchField = key;\r\n                } else {\r\n                    searchField = columnMap[key];\r\n                }\r\n            }\r\n            let logCategory;\r\n            if (searchField) {\r\n                switch (searchField) {\r\n                    case WsLogaccess.LogColumnType.workunits:\r\n                    case \"hpcc.log.jobid\":\r\n                        logCategory = WsLogaccess.LogAccessType.ByJobID;\r\n                        break;\r\n                    case WsLogaccess.LogColumnType.audience:\r\n                    case \"hpcc.log.audience\":\r\n                        logCategory = WsLogaccess.LogAccessType.ByTargetAudience;\r\n                        break;\r\n                    case WsLogaccess.LogColumnType.class:\r\n                    case \"hpcc.log.class\":\r\n                        logCategory = WsLogaccess.LogAccessType.ByLogType;\r\n                        break;\r\n                    case WsLogaccess.LogColumnType.components:\r\n                    case \"kubernetes.container.name\":\r\n                        logCategory = WsLogaccess.LogAccessType.ByComponent;\r\n                        break;\r\n                    default:\r\n                        logCategory = WsLogaccess.LogAccessType.ByFieldName;\r\n                        searchField = columnMap[key];\r\n                }\r\n                if (Array.isArray(request[key])) {\r\n                    request[key].forEach(value => {\r\n                        if (logCategory === WsLogaccess.LogAccessType.ByComponent) {\r\n                            value += \"*\";\r\n                        }\r\n                        filters.push({\r\n                            LogCategory: logCategory,\r\n                            SearchField: searchField,\r\n                            SearchByValue: value\r\n                        });\r\n                    });\r\n                } else {\r\n                    let value = request[key];\r\n                    if (logCategory === WsLogaccess.LogAccessType.ByComponent) {\r\n                        // append wildcard to end of search value to include ephemeral\r\n                        // containers that aren't listed in ECL Watch's filters\r\n                        value += \"*\";\r\n                    }\r\n                    filters.push({\r\n                        LogCategory: logCategory,\r\n                        SearchField: searchField,\r\n                        SearchByValue: value\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (filters.length > 2) {\r\n            let binaryLogFilter = getLogsRequest.Filter.leftBinaryFilter.BinaryLogFilter[0];\r\n            filters.forEach((filter, i) => {\r\n                let operator = WsLogaccess.LogAccessFilterOperator.AND;\r\n                if (i > 0) {\r\n                    if (filters[i - 1].SearchField === filter.SearchField) {\r\n                        operator = WsLogaccess.LogAccessFilterOperator.OR;\r\n                    }\r\n                    if (i === filters.length - 1) {\r\n                        binaryLogFilter.Operator = operator;\r\n                        binaryLogFilter.rightFilter = filter as WsLogaccess.rightFilter;\r\n                    } else {\r\n                        binaryLogFilter.Operator = operator;\r\n                        binaryLogFilter.rightBinaryFilter = {\r\n                            BinaryLogFilter: [{\r\n                                leftFilter: filter\r\n                            } as WsLogaccess.BinaryLogFilter]\r\n                        };\r\n                        binaryLogFilter = binaryLogFilter.rightBinaryFilter.BinaryLogFilter[0];\r\n                    }\r\n                } else {\r\n                    binaryLogFilter.leftFilter = filter as WsLogaccess.leftFilter;\r\n                }\r\n            });\r\n        } else {\r\n            delete getLogsRequest.Filter.leftBinaryFilter;\r\n            getLogsRequest.Filter.leftFilter = {\r\n                LogCategory: WsLogaccess.LogAccessType.All\r\n            } as WsLogaccess.leftFilter;\r\n            if (filters[0]?.SearchField) {\r\n                getLogsRequest.Filter.leftFilter = {\r\n                    LogCategory: filters[0]?.LogCategory,\r\n                    SearchField: filters[0]?.SearchField,\r\n                    SearchByValue: filters[0]?.SearchByValue\r\n                };\r\n            }\r\n            if (filters[1]?.SearchField) {\r\n                getLogsRequest.Filter.Operator = WsLogaccess.LogAccessFilterOperator.AND;\r\n                if (filters[0].SearchField === filters[1].SearchField) {\r\n                    getLogsRequest.Filter.Operator = WsLogaccess.LogAccessFilterOperator.OR;\r\n                }\r\n                getLogsRequest.Filter.rightFilter = {\r\n                    LogCategory: filters[1]?.LogCategory,\r\n                    SearchField: filters[1]?.SearchField,\r\n                    SearchByValue: filters[1]?.SearchByValue\r\n                };\r\n            }\r\n        }\r\n\r\n        if (request.StartDate) {\r\n            getLogsRequest.Range.StartDate = request.StartDate.toISOString();\r\n        }\r\n        if (request.EndDate) {\r\n            getLogsRequest.Range.EndDate = request.EndDate.toISOString();\r\n        }\r\n\r\n        return this.GetLogs(getLogsRequest).then(response => {\r\n            try {\r\n                const logLines = JSON.parse(response.LogLines);\r\n                let lines = [];\r\n                switch (logInfo.RemoteLogManagerType) {\r\n                    case \"azureloganalyticscurl\":\r\n                    case \"elasticstack\":\r\n                    case \"grafanacurl\":\r\n                        lines = logLines.lines?.map(convertLogLine) ?? [];\r\n                        break;\r\n                    default:\r\n                        logger.warning(`Unknown RemoteLogManagerType: ${logInfo.RemoteLogManagerType}`);\r\n                        lines = [];\r\n                }\r\n                return {\r\n                    lines: lines,\r\n                    total: response.TotalLogLinesAvailable ?? 10000\r\n                };\r\n            } catch (e) {\r\n                logger.error(e);\r\n            }\r\n            return {\r\n                lines: [],\r\n                total: 0\r\n            };\r\n        });\r\n    }\r\n}\r\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\ntype int = number;\r\ntype long = number;\r\ntype unsignedInt = number;\r\n\r\nexport namespace WsMachine {\r\n\r\n    export interface GetComponentStatusRequest {\r\n\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface StatusReport {\r\n        StatusID: int;\r\n        Status: string;\r\n        StatusDetails: string;\r\n        Reporter: string;\r\n        TimeReported: long;\r\n        TimeReportedStr: string;\r\n        TimeCached: string;\r\n        URL: string;\r\n    }\r\n\r\n    export interface StatusReports {\r\n        StatusReport: StatusReport[];\r\n    }\r\n\r\n    export interface ComponentStatus {\r\n        ComponentTypeID: int;\r\n        ComponentType: string;\r\n        EndPoint: string;\r\n        StatusID: int;\r\n        Status: string;\r\n        TimeReported: long;\r\n        TimeReportedStr: string;\r\n        Reporter: string;\r\n        StatusReports: {\r\n            StatusReport: StatusReport[];\r\n        };\r\n    }\r\n\r\n    export interface ComponentStatusList {\r\n        ComponentStatus: ComponentStatus[];\r\n    }\r\n\r\n    export interface GetComponentStatusResponse {\r\n        Exceptions: {\r\n            Source: string;\r\n            Exception: Exception[];\r\n        };\r\n        StatusCode: int;\r\n        Status: string;\r\n        ComponentType: string;\r\n        EndPoint: string;\r\n        ComponentStatusID: int;\r\n        ComponentStatus: string;\r\n        TimeReported: long;\r\n        TimeReportedStr: string;\r\n        Reporter: string;\r\n        StatusReport: {\r\n            StatusID: int;\r\n            Status: string;\r\n            StatusDetails: string;\r\n            Reporter: string;\r\n            TimeReported: long;\r\n            TimeReportedStr: string;\r\n            TimeCached: string;\r\n            URL: string;\r\n        };\r\n        ComponentStatusList: {\r\n            ComponentStatus: ComponentStatus[];\r\n        };\r\n    }\r\n\r\n    export interface Component {\r\n        Type: string;\r\n        Name: string;\r\n    }\r\n\r\n    export interface Components {\r\n        Component: Component[];\r\n    }\r\n\r\n    export interface GetComponentUsageRequest {\r\n        Components?: {\r\n            Component?: Component[];\r\n        };\r\n        BypassCachedResult?: boolean;\r\n    }\r\n\r\n    export interface DiskUsage {\r\n        Name: string;\r\n        Path: string;\r\n        Description: string;\r\n        InUse: long;\r\n        Available: long;\r\n        PercentAvailable: int;\r\n        Exception: string;\r\n    }\r\n\r\n    export interface DiskUsages {\r\n        DiskUsage: DiskUsage[];\r\n    }\r\n\r\n    export interface MachineUsage {\r\n        Name: string;\r\n        NetAddress: string;\r\n        Description: string;\r\n        Exception: string;\r\n        DiskUsages: {\r\n            DiskUsage: DiskUsage[];\r\n        };\r\n    }\r\n\r\n    export interface MachineUsages {\r\n        MachineUsage: MachineUsage[];\r\n    }\r\n\r\n    export interface ComponentUsage {\r\n        Type: string;\r\n        Name: string;\r\n        Description: string;\r\n        Exception: string;\r\n        MachineUsages: {\r\n            MachineUsage: MachineUsage[];\r\n        };\r\n    }\r\n\r\n    export interface ComponentUsages {\r\n        ComponentUsage: ComponentUsage[];\r\n    }\r\n\r\n    export interface GetComponentUsageResponse {\r\n        Exceptions: Exceptions;\r\n        ComponentUsages: {\r\n            ComponentUsage: ComponentUsage[];\r\n        };\r\n        UsageTime: string;\r\n    }\r\n\r\n    export interface Addresses {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface GetMachineInfoRequest {\r\n        Addresses?: {\r\n            Item?: string[];\r\n        };\r\n        ClusterType?: string;\r\n        Cluster?: string;\r\n        OldIP?: string;\r\n        Path?: string;\r\n        AddProcessesToFilter?: string;\r\n        ApplyProcessFilter?: boolean;\r\n        GetProcessorInfo?: boolean;\r\n        GetStorageInfo?: boolean;\r\n        LocalFileSystemsOnly?: boolean;\r\n        GetSoftwareInfo?: boolean;\r\n        MemThreshold?: int;\r\n        DiskThreshold?: int;\r\n        CpuThreshold?: int;\r\n        AutoRefresh?: int;\r\n        MemThresholdType?: string;\r\n        DiskThresholdType?: string;\r\n        UserName?: string;\r\n        Password?: string;\r\n        SecurityString?: string;\r\n    }\r\n\r\n    export interface RequestInfo {\r\n        Addresses: Addresses;\r\n        ClusterType: string;\r\n        Cluster: string;\r\n        OldIP: string;\r\n        Path: string;\r\n        AddProcessesToFilter: string;\r\n        ApplyProcessFilter: boolean;\r\n        GetProcessorInfo: boolean;\r\n        GetStorageInfo: boolean;\r\n        LocalFileSystemsOnly: boolean;\r\n        GetSoftwareInfo: boolean;\r\n        MemThreshold: int;\r\n        DiskThreshold: int;\r\n        CpuThreshold: int;\r\n        AutoRefresh: int;\r\n        MemThresholdType: string;\r\n        DiskThresholdType: string;\r\n        SecurityString: string;\r\n        UserName: string;\r\n        Password: string;\r\n        EnableSNMP: boolean;\r\n    }\r\n\r\n    export interface Columns {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface ProcessorInfo {\r\n        Type: string;\r\n        Load: int;\r\n    }\r\n\r\n    export interface Processors {\r\n        ProcessorInfo: ProcessorInfo[];\r\n    }\r\n\r\n    export interface StorageInfo {\r\n        Description: string;\r\n        Type: string;\r\n        Available: long;\r\n        PercentAvail: int;\r\n        Total: long;\r\n        Failures: int;\r\n    }\r\n\r\n    export interface Storage {\r\n        StorageInfo: StorageInfo[];\r\n    }\r\n\r\n    export interface SWRunInfo {\r\n        Name: string;\r\n        Instances: int;\r\n        State: int;\r\n    }\r\n\r\n    export interface Running {\r\n        SWRunInfo: SWRunInfo[];\r\n    }\r\n\r\n    export interface PhysicalMemory {\r\n        Description: string;\r\n        Type: string;\r\n        Available: long;\r\n        PercentAvail: int;\r\n        Total: long;\r\n        Failures: int;\r\n    }\r\n\r\n    export interface VirtualMemory {\r\n        Description: string;\r\n        Type: string;\r\n        Available: long;\r\n        PercentAvail: int;\r\n        Total: long;\r\n        Failures: int;\r\n    }\r\n\r\n    export interface ComponentInfo {\r\n        Condition: int;\r\n        State: int;\r\n        UpTime: string;\r\n    }\r\n\r\n    export interface MachineInfoEx {\r\n        Address: string;\r\n        ConfigAddress: string;\r\n        Name: string;\r\n        ProcessType: string;\r\n        DisplayType: string;\r\n        Description: string;\r\n        AgentVersion: string;\r\n        Contact: string;\r\n        Location: string;\r\n        UpTime: string;\r\n        ComponentName: string;\r\n        ComponentPath: string;\r\n        RoxieState: string;\r\n        RoxieStateDetails: string;\r\n        OS: int;\r\n        ProcessNumber: int;\r\n        Channels: unsignedInt;\r\n        Processors: {\r\n            ProcessorInfo: ProcessorInfo[];\r\n        };\r\n        Storage: {\r\n            StorageInfo: StorageInfo[];\r\n        };\r\n        Running: {\r\n            SWRunInfo: SWRunInfo[];\r\n        };\r\n        PhysicalMemory: {\r\n            Description: string;\r\n            Type: string;\r\n            Available: long;\r\n            PercentAvail: int;\r\n            Total: long;\r\n            Failures: int;\r\n        };\r\n        VirtualMemory: {\r\n            Description: string;\r\n            Type: string;\r\n            Available: long;\r\n            PercentAvail: int;\r\n            Total: long;\r\n            Failures: int;\r\n        };\r\n        ComponentInfo: {\r\n            Condition: int;\r\n            State: int;\r\n            UpTime: string;\r\n        };\r\n        Exception: string;\r\n    }\r\n\r\n    export interface Machines {\r\n        MachineInfoEx: MachineInfoEx[];\r\n    }\r\n\r\n    export interface GetMachineInfoResponse {\r\n        Exceptions: Exceptions;\r\n        RequestInfo: {\r\n            Addresses: Addresses;\r\n            ClusterType: string;\r\n            Cluster: string;\r\n            OldIP: string;\r\n            Path: string;\r\n            AddProcessesToFilter: string;\r\n            ApplyProcessFilter: boolean;\r\n            GetProcessorInfo: boolean;\r\n            GetStorageInfo: boolean;\r\n            LocalFileSystemsOnly: boolean;\r\n            GetSoftwareInfo: boolean;\r\n            MemThreshold: int;\r\n            DiskThreshold: int;\r\n            CpuThreshold: int;\r\n            AutoRefresh: int;\r\n            MemThresholdType: string;\r\n            DiskThresholdType: string;\r\n            SecurityString: string;\r\n            UserName: string;\r\n            Password: string;\r\n            EnableSNMP: boolean;\r\n        };\r\n        Columns: {\r\n            Item: string[];\r\n        };\r\n        Machines: {\r\n            MachineInfoEx: MachineInfoEx[];\r\n        };\r\n        TimeStamp: string;\r\n        UserName: string;\r\n        Password: string;\r\n        AcceptLanguage: string;\r\n    }\r\n\r\n    export interface GetMachineInfoRequestEx {\r\n        Addresses: Addresses;\r\n        ClusterType: string;\r\n    }\r\n\r\n    export interface GetMachineInfoResponseEx {\r\n        Exceptions: Exceptions;\r\n        AcceptLanguage: string;\r\n        Machines: Machines;\r\n    }\r\n\r\n    export interface ShowColumns {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface MetricsRequest {\r\n        SecurityString?: string;\r\n        Addresses?: Addresses;\r\n        ShowColumns?: {\r\n            Item?: string[];\r\n        };\r\n        AutoRefresh?: int;\r\n        SelectAllChecked?: boolean;\r\n        Cluster?: string;\r\n        AutoUpdate?: boolean;\r\n    }\r\n\r\n    export interface MetricsResponse {\r\n        Exceptions: Exceptions;\r\n        FieldInformation: string;\r\n        Metrics: string;\r\n        AutoRefresh: int;\r\n        Cluster: string;\r\n        SelectAllChecked: boolean;\r\n        AutoUpdate: boolean;\r\n        AcceptLanguage: string;\r\n    }\r\n\r\n    export interface NodeGroups {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface GetNodeGroupUsageRequest {\r\n        NodeGroups?: {\r\n            Item?: string[];\r\n        };\r\n        BypassCachedResult?: boolean;\r\n    }\r\n\r\n    export interface NodeGroupUsage {\r\n        Name: string;\r\n        Description: string;\r\n        Exception: string;\r\n        ComponentUsages: ComponentUsages;\r\n    }\r\n\r\n    export interface NodeGroupUsages {\r\n        NodeGroupUsage: NodeGroupUsage[];\r\n    }\r\n\r\n    export interface GetNodeGroupUsageResponse {\r\n        Exceptions: Exceptions;\r\n        NodeGroupUsages: {\r\n            NodeGroupUsage: NodeGroupUsage[];\r\n        };\r\n        UsageTime: string;\r\n    }\r\n\r\n    export interface TargetClusters {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface GetTargetClusterInfoRequest {\r\n        TargetClusters?: {\r\n            Item?: string[];\r\n        };\r\n        AddProcessesToFilter?: string;\r\n        ApplyProcessFilter?: boolean;\r\n        GetProcessorInfo?: boolean;\r\n        GetStorageInfo?: boolean;\r\n        LocalFileSystemsOnly?: boolean;\r\n        GetSoftwareInfo?: boolean;\r\n        MemThreshold?: int;\r\n        DiskThreshold?: int;\r\n        CpuThreshold?: int;\r\n        AutoRefresh?: int;\r\n        MemThresholdType?: string;\r\n        DiskThresholdType?: string;\r\n    }\r\n\r\n    export interface Processes {\r\n        MachineInfoEx: MachineInfoEx[];\r\n    }\r\n\r\n    export interface TargetClusterInfo {\r\n        Name: string;\r\n        Type: string;\r\n        Processes: {\r\n            MachineInfoEx: MachineInfoEx[];\r\n        };\r\n    }\r\n\r\n    export interface TargetClusterInfoList {\r\n        TargetClusterInfo: TargetClusterInfo[];\r\n    }\r\n\r\n    export interface GetTargetClusterInfoResponse {\r\n        Exceptions: Exceptions;\r\n        Columns: Columns;\r\n        RequestInfo: RequestInfo;\r\n        TargetClusterInfoList: {\r\n            TargetClusterInfo: TargetClusterInfo[];\r\n        };\r\n        TimeStamp: string;\r\n        AcceptLanguage: string;\r\n    }\r\n\r\n    export interface GetTargetClusterUsageRequest {\r\n        TargetClusters?: TargetClusters;\r\n        BypassCachedResult?: boolean;\r\n    }\r\n\r\n    export interface TargetClusterUsage {\r\n        Name: string;\r\n        Description: string;\r\n        Exception: string;\r\n        ComponentUsages: ComponentUsages;\r\n    }\r\n\r\n    export interface TargetClusterUsages {\r\n        TargetClusterUsage: TargetClusterUsage[];\r\n    }\r\n\r\n    export interface GetTargetClusterUsageResponse {\r\n        Exceptions: Exceptions;\r\n        TargetClusterUsages: {\r\n            TargetClusterUsage: TargetClusterUsage[];\r\n        };\r\n        UsageTime: string;\r\n    }\r\n\r\n    export interface ws_machinePingRequest {\r\n\r\n    }\r\n\r\n    export interface ws_machinePingResponse {\r\n\r\n    }\r\n\r\n    export interface UpdateComponentStatusRequest {\r\n        Reporter?: string;\r\n        ComponentStatusList?: ComponentStatusList;\r\n    }\r\n\r\n    export interface UpdateComponentStatusResponse {\r\n        Exceptions: Exceptions;\r\n        StatusCode: int;\r\n        Status: string;\r\n    }\r\n\r\n}\r\n\r\nexport class MachineServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"ws_machine\", \"1.17\");\r\n    }\r\n\r\n    GetComponentStatus(request: WsMachine.GetComponentStatusRequest): Promise<WsMachine.GetComponentStatusResponse> {\r\n        return this._connection.send(\"GetComponentStatus\", request);\r\n    }\r\n\r\n    GetComponentUsage(request: WsMachine.GetComponentUsageRequest): Promise<WsMachine.GetComponentUsageResponse> {\r\n        return this._connection.send(\"GetComponentUsage\", request);\r\n    }\r\n\r\n    GetMachineInfo(request: WsMachine.GetMachineInfoRequest): Promise<WsMachine.GetMachineInfoResponse> {\r\n        return this._connection.send(\"GetMachineInfo\", request);\r\n    }\r\n\r\n    GetMachineInfoEx(request: WsMachine.GetMachineInfoRequestEx): Promise<WsMachine.GetMachineInfoResponseEx> {\r\n        return this._connection.send(\"GetMachineInfoEx\", request);\r\n    }\r\n\r\n    GetMetrics(request: WsMachine.MetricsRequest): Promise<WsMachine.MetricsResponse> {\r\n        return this._connection.send(\"GetMetrics\", request);\r\n    }\r\n\r\n    GetNodeGroupUsage(request: WsMachine.GetNodeGroupUsageRequest): Promise<WsMachine.GetNodeGroupUsageResponse> {\r\n        return this._connection.send(\"GetNodeGroupUsage\", request);\r\n    }\r\n\r\n    GetTargetClusterInfo(request: WsMachine.GetTargetClusterInfoRequest): Promise<WsMachine.GetTargetClusterInfoResponse> {\r\n        return this._connection.send(\"GetTargetClusterInfo\", request);\r\n    }\r\n\r\n    GetTargetClusterUsage(request: WsMachine.GetTargetClusterUsageRequest): Promise<WsMachine.GetTargetClusterUsageResponse> {\r\n        return this._connection.send(\"GetTargetClusterUsage\", request);\r\n    }\r\n\r\n    Ping(request: WsMachine.ws_machinePingRequest): Promise<WsMachine.ws_machinePingResponse> {\r\n        return this._connection.send(\"Ping\", request);\r\n    }\r\n\r\n    UpdateComponentStatus(request: WsMachine.UpdateComponentStatusRequest): Promise<WsMachine.UpdateComponentStatusResponse> {\r\n        return this._connection.send(\"UpdateComponentStatus\", request);\r\n    }\r\n\r\n}\r\n","import { exists } from \"@hpcc-js/util\";\r\nimport { max as d3Max, mean as d3Mean } from \"d3-array\";\r\n\r\nimport { MachineServiceBase, WsMachine } from \"./wsdl/ws_machine/v1.17/ws_machine\";\r\n\r\nexport {\r\n    WsMachine\r\n};\r\n\r\nexport namespace WsMachineEx {\r\n\r\n    export interface DiskUsage extends WsMachine.DiskUsage {\r\n        Total: number;\r\n        PercentUsed: number;\r\n    }\r\n\r\n    export interface MachineUsage extends Omit<WsMachine.MachineUsage, \"DiskUsages\"> {\r\n        DiskUsages: DiskUsage[];\r\n        mean: number;\r\n        max: number;\r\n    }\r\n\r\n    export interface ComponentUsage extends Omit<WsMachine.ComponentUsage, \"MachineUsages\"> {\r\n        MachineUsages: MachineUsage[];\r\n        MachineUsagesDescription: string;\r\n        mean: number;\r\n        max: number;\r\n    }\r\n\r\n    export interface TargetClusterUsage extends Omit<WsMachine.TargetClusterUsage, \"ComponentUsages\"> {\r\n        ComponentUsages: ComponentUsage[];\r\n        ComponentUsagesDescription: string;\r\n        mean: number;\r\n        max: number;\r\n    }\r\n\r\n}\r\n\r\nexport class MachineService extends MachineServiceBase {\r\n\r\n    GetTargetClusterUsageEx(targetClusters?: string[], bypassCachedResult: boolean = false): Promise<WsMachineEx.TargetClusterUsage[]> {\r\n        return this._connection.send(\"GetTargetClusterUsage\", {\r\n            TargetClusters: targetClusters ? { Item: targetClusters } : {},\r\n            BypassCachedResult: bypassCachedResult\r\n        }).then(response => {\r\n            return exists(\"TargetClusterUsages.TargetClusterUsage\", response) ? response.TargetClusterUsages.TargetClusterUsage : [];\r\n        }).then(response => {\r\n            return response.filter(tcu => !!tcu.ComponentUsages).map(tcu => {\r\n                const ComponentUsages: WsMachineEx.ComponentUsage[] = tcu.ComponentUsages.ComponentUsage.map(cu => {\r\n                    const MachineUsages: WsMachineEx.MachineUsage[] = (cu.MachineUsages && cu.MachineUsages.MachineUsage ? cu.MachineUsages.MachineUsage : []).map(mu => {\r\n                        const DiskUsages: WsMachineEx.DiskUsage[] = mu.DiskUsages && mu.DiskUsages.DiskUsage ? mu.DiskUsages.DiskUsage.map(du => {\r\n                            return {\r\n                                ...du,\r\n                                InUse: du.InUse * 1024,\r\n                                Total: (du.InUse + du.Available) * 1024,\r\n                                PercentUsed: 100 - du.PercentAvailable\r\n                            };\r\n                        }) : [];\r\n                        return {\r\n                            Name: mu.Name,\r\n                            NetAddress: mu.NetAddress,\r\n                            Description: mu.Description,\r\n                            DiskUsages,\r\n                            mean: d3Mean(DiskUsages.filter(du => !isNaN(du.PercentUsed)), du => du.PercentUsed),\r\n                            max: d3Max(DiskUsages.filter(du => !isNaN(du.PercentUsed)), du => du.PercentUsed)\r\n                        };\r\n                    });\r\n                    return {\r\n                        Type: cu.Type,\r\n                        Name: cu.Name,\r\n                        Description: cu.Description,\r\n                        MachineUsages,\r\n                        MachineUsagesDescription: MachineUsages.reduce((prev, mu) => prev + (mu.Description || \"\"), \"\"),\r\n                        mean: d3Mean(MachineUsages.filter(mu => !isNaN(mu.mean)), mu => mu.mean),\r\n                        max: d3Max(MachineUsages.filter(mu => !isNaN(mu.max)), mu => mu.max)\r\n                    };\r\n                });\r\n                return {\r\n                    Name: tcu.Name,\r\n                    Description: tcu.Description,\r\n                    ComponentUsages,\r\n                    ComponentUsagesDescription: ComponentUsages.reduce((prev, cu) => prev + (cu.MachineUsagesDescription || \"\"), \"\"),\r\n                    mean: d3Mean(ComponentUsages.filter(cu => !isNaN(cu.mean)), cu => cu.mean),\r\n                    max: d3Max(ComponentUsages.filter(cu => !isNaN(cu.max)), cu => cu.max)\r\n                };\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\ntype int = number;\r\n\r\nexport namespace WsPackageProcess {\r\n\r\nexport interface ActivatePackageRequest {\r\n    Target?: string;\r\n    PackageMap?: string;\r\n    Process?: string;\r\n    GlobalScope?: boolean;\r\n}\r\n\r\nexport interface Exception {\r\n    Code: string;\r\n    Audience: string;\r\n    Source: string;\r\n    Message: string;\r\n}\r\n\r\nexport interface Exceptions {\r\n    Source: string;\r\n    Exception: Exception[];\r\n}\r\n\r\nexport interface status {\r\n    Code: int;\r\n    Description: string;\r\n}\r\n\r\nexport interface ActivatePackageResponse {\r\n    Exceptions: {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    };\r\n    status: {\r\n        Code: int;\r\n        Description: string;\r\n    };\r\n}\r\n\r\nexport interface AddPackageRequest {\r\n    Info?: string;\r\n    Activate?: boolean;\r\n    OverWrite?: boolean;\r\n    Target?: string;\r\n    PackageMap?: string;\r\n    Process?: string;\r\n    DaliIp?: string;\r\n    GlobalScope?: boolean;\r\n    SourceProcess?: string;\r\n    AllowForeignFiles?: boolean;\r\n    PreloadAllPackages?: boolean;\r\n    ReplacePackageMap?: boolean;\r\n    UpdateSuperFiles?: boolean;\r\n    UpdateCloneFrom?: boolean;\r\n    AppendCluster?: boolean;\r\n}\r\n\r\nexport interface FilesNotFound {\r\n    File: string[];\r\n}\r\n\r\nexport interface AddPackageResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    FilesNotFound: {\r\n        File: string[];\r\n    };\r\n}\r\n\r\nexport interface AddPartToPackageMapRequest {\r\n    Target?: string;\r\n    Process?: string;\r\n    PackageMap?: string;\r\n    GlobalScope?: boolean;\r\n    PartName?: string;\r\n    Content?: string;\r\n    DeletePrevious?: boolean;\r\n    DaliIp?: string;\r\n    SourceProcess?: string;\r\n    AllowForeignFiles?: boolean;\r\n    PreloadAllPackages?: boolean;\r\n    UpdateSuperFiles?: boolean;\r\n    UpdateCloneFrom?: boolean;\r\n    AppendCluster?: boolean;\r\n}\r\n\r\nexport interface AddPartToPackageMapResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    FilesNotFound: FilesNotFound;\r\n}\r\n\r\nexport interface CopyPackageMapRequest {\r\n    SourcePath?: string;\r\n    RemoteUserName?: string;\r\n    RemotePassword?: string;\r\n    Target?: string;\r\n    Process?: string;\r\n    PMID?: string;\r\n    Activate?: boolean;\r\n    DaliIp?: string;\r\n    GlobalScope?: boolean;\r\n    SourceProcess?: string;\r\n    PreloadAllPackages?: boolean;\r\n    ReplacePackageMap?: boolean;\r\n    UpdateSuperFiles?: boolean;\r\n    UpdateCloneFrom?: boolean;\r\n    AppendCluster?: boolean;\r\n}\r\n\r\nexport interface CopyPackageMapResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    FilesNotFound: FilesNotFound;\r\n}\r\n\r\nexport interface DeActivatePackageRequest {\r\n    Target?: string;\r\n    PackageMap?: string;\r\n    Process?: string;\r\n    GlobalScope?: boolean;\r\n}\r\n\r\nexport interface DeActivatePackageResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n}\r\n\r\nexport interface PackageMap {\r\n    Id: string;\r\n    Target: string;\r\n    Process: string;\r\n}\r\n\r\nexport interface PackageMaps {\r\n    PackageMap: PackageMap[];\r\n}\r\n\r\nexport interface DeletePackageRequest {\r\n    Target?: string;\r\n    PackageMap?: string;\r\n    Process?: string;\r\n    GlobalScope?: boolean;\r\n    PackageMaps?: {\r\n        PackageMap?: PackageMap[];\r\n    };\r\n}\r\n\r\nexport interface DeletePackageResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n}\r\n\r\nexport interface EchoRequest {\r\n    Request?: string;\r\n}\r\n\r\nexport interface EchoResponse {\r\n    Response: string;\r\n}\r\n\r\nexport interface GetPackageRequest {\r\n    Target?: string;\r\n    Process?: string;\r\n}\r\n\r\nexport interface GetPackageResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    Info: string;\r\n}\r\n\r\nexport interface GetPackageMapByIdRequest {\r\n    PackageMapId?: string;\r\n}\r\n\r\nexport interface GetPackageMapByIdResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    Info: string;\r\n}\r\n\r\nexport interface GetPackageMapSelectOptionsRequest {\r\n    IncludeTargets?: boolean;\r\n    IncludeProcesses?: boolean;\r\n    IncludeProcessFilters?: boolean;\r\n}\r\n\r\nexport interface Processes {\r\n    Item: string[];\r\n}\r\n\r\nexport interface TargetData {\r\n    Name: string;\r\n    Type: string;\r\n    Processes: {\r\n        Item: string[];\r\n    };\r\n}\r\n\r\nexport interface Targets {\r\n    TargetData: TargetData[];\r\n}\r\n\r\nexport interface ProcessFilters {\r\n    Item: string[];\r\n}\r\n\r\nexport interface GetPackageMapSelectOptionsResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    Targets: {\r\n        TargetData: TargetData[];\r\n    };\r\n    ProcessFilters: {\r\n        Item: string[];\r\n    };\r\n}\r\n\r\nexport interface GetPartFromPackageMapRequest {\r\n    Target?: string;\r\n    PackageMap?: string;\r\n    GlobalScope?: boolean;\r\n    PartName?: string;\r\n}\r\n\r\nexport interface GetPartFromPackageMapResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    Content: string;\r\n}\r\n\r\nexport interface GetQueryFileMappingRequest {\r\n    Target?: string;\r\n    PMID?: string;\r\n    QueryName?: string;\r\n    GlobalScope?: boolean;\r\n}\r\n\r\nexport interface UnmappedFiles {\r\n    File: string[];\r\n}\r\n\r\nexport interface SubFiles {\r\n    File: string[];\r\n}\r\n\r\nexport interface SuperFile {\r\n    Name: string;\r\n    SubFiles: {\r\n        File: string[];\r\n    };\r\n}\r\n\r\nexport interface SuperFiles {\r\n    SuperFile: SuperFile[];\r\n}\r\n\r\nexport interface GetQueryFileMappingResponse {\r\n    Exceptions: Exceptions;\r\n    UnmappedFiles: {\r\n        File: string[];\r\n    };\r\n    SuperFiles: {\r\n        SuperFile: SuperFile[];\r\n    };\r\n}\r\n\r\nexport interface ListPackageRequest {\r\n    Target?: string;\r\n    Process?: string;\r\n}\r\n\r\nexport interface PackageListData {\r\n    Id: string;\r\n    Queries: string;\r\n}\r\n\r\nexport interface PkgListData {\r\n    PackageListData: PackageListData[];\r\n}\r\n\r\nexport interface PackageListMapData {\r\n    Id: string;\r\n    Target: string;\r\n    Process: string;\r\n    PkgListData: {\r\n        PackageListData: PackageListData[];\r\n    };\r\n    Active: boolean;\r\n    Description: string;\r\n}\r\n\r\nexport interface PkgListMapData {\r\n    PackageListMapData: PackageListMapData[];\r\n}\r\n\r\nexport interface ListPackageResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    PkgListMapData: {\r\n        PackageListMapData: PackageListMapData[];\r\n    };\r\n}\r\n\r\nexport interface ListPackagesRequest {\r\n    Target?: string;\r\n    Process?: string;\r\n    ProcessFilter?: string;\r\n}\r\n\r\nexport interface PackageMapList {\r\n    PackageListMapData: PackageListMapData[];\r\n}\r\n\r\nexport interface ListPackagesResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n    PackageMapList: {\r\n        PackageListMapData: PackageListMapData[];\r\n    };\r\n}\r\n\r\nexport interface WsPackageProcessPingRequest {\r\n\r\n}\r\n\r\nexport interface WsPackageProcessPingResponse {\r\n\r\n}\r\n\r\nexport interface RemovePartFromPackageMapRequest {\r\n    Target?: string;\r\n    PackageMap?: string;\r\n    GlobalScope?: boolean;\r\n    PartName?: string;\r\n}\r\n\r\nexport interface RemovePartFromPackageMapResponse {\r\n    Exceptions: Exceptions;\r\n    status: status;\r\n}\r\n\r\nexport interface QueriesToVerify {\r\n    Item: string[];\r\n}\r\n\r\nexport interface QueriesToIgnore {\r\n    Item: string[];\r\n}\r\n\r\nexport interface ValidatePackageRequest {\r\n    Info?: string;\r\n    Target?: string;\r\n    Process?: string;\r\n    Active?: boolean;\r\n    PMID?: string;\r\n    QueryIdToVerify?: string;\r\n    QueriesToVerify?: {\r\n        Item?: string[];\r\n    };\r\n    QueriesToIgnore?: {\r\n        Item?: string[];\r\n    };\r\n    CheckDFS?: boolean;\r\n    GlobalScope?: boolean;\r\n    IgnoreWarnings?: boolean;\r\n    IgnoreOptionalFiles?: boolean;\r\n}\r\n\r\nexport interface Warnings {\r\n    Item: string[];\r\n}\r\n\r\nexport interface Errors {\r\n    Item: string[];\r\n}\r\n\r\nexport interface Unmatched {\r\n    Item: string[];\r\n}\r\n\r\nexport interface packages {\r\n    Unmatched: {\r\n        Item: string[];\r\n    };\r\n}\r\n\r\nexport interface queries {\r\n    Unmatched: Unmatched;\r\n}\r\n\r\nexport interface NotInDFS {\r\n    File: string[];\r\n}\r\n\r\nexport interface files {\r\n    Unmatched: Unmatched;\r\n    NotInDFS: {\r\n        File: string[];\r\n    };\r\n}\r\n\r\nexport interface Result {\r\n    Target: string;\r\n    PMID: string;\r\n    Warnings: {\r\n        Item: string[];\r\n    };\r\n    Errors: {\r\n        Item: string[];\r\n    };\r\n    packages: {\r\n        Unmatched: {\r\n            Item: string[];\r\n        };\r\n    };\r\n    queries: {\r\n        Unmatched: Unmatched;\r\n    };\r\n    files: {\r\n        Unmatched: Unmatched;\r\n        NotInDFS: {\r\n            File: string[];\r\n        };\r\n    };\r\n}\r\n\r\nexport interface Results {\r\n    Result: Result[];\r\n}\r\n\r\nexport interface ValidatePackageResponse {\r\n    Exceptions: Exceptions;\r\n    Results: {\r\n        Result: Result[];\r\n    };\r\n}\r\n\r\n}\r\n\r\nexport class PackageProcessServiceBase extends Service {\r\n\r\nconstructor(optsConnection: IOptions | IConnection) {\r\nsuper(optsConnection, \"WsPackageProcess\", \"1.04\");\r\n}\r\n\r\nActivatePackage(request: WsPackageProcess.ActivatePackageRequest): Promise<WsPackageProcess.ActivatePackageResponse> {\r\n\treturn this._connection.send(\"ActivatePackage\", request);\r\n}\r\n\r\nAddPackage(request: WsPackageProcess.AddPackageRequest): Promise<WsPackageProcess.AddPackageResponse> {\r\n\treturn this._connection.send(\"AddPackage\", request);\r\n}\r\n\r\nAddPartToPackageMap(request: WsPackageProcess.AddPartToPackageMapRequest): Promise<WsPackageProcess.AddPartToPackageMapResponse> {\r\n\treturn this._connection.send(\"AddPartToPackageMap\", request);\r\n}\r\n\r\nCopyPackageMap(request: WsPackageProcess.CopyPackageMapRequest): Promise<WsPackageProcess.CopyPackageMapResponse> {\r\n\treturn this._connection.send(\"CopyPackageMap\", request);\r\n}\r\n\r\nDeActivatePackage(request: WsPackageProcess.DeActivatePackageRequest): Promise<WsPackageProcess.DeActivatePackageResponse> {\r\n\treturn this._connection.send(\"DeActivatePackage\", request);\r\n}\r\n\r\nDeletePackage(request: WsPackageProcess.DeletePackageRequest): Promise<WsPackageProcess.DeletePackageResponse> {\r\n\treturn this._connection.send(\"DeletePackage\", request);\r\n}\r\n\r\nEcho(request: WsPackageProcess.EchoRequest): Promise<WsPackageProcess.EchoResponse> {\r\n\treturn this._connection.send(\"Echo\", request);\r\n}\r\n\r\nGetPackage(request: WsPackageProcess.GetPackageRequest): Promise<WsPackageProcess.GetPackageResponse> {\r\n\treturn this._connection.send(\"GetPackage\", request);\r\n}\r\n\r\nGetPackageMapById(request: WsPackageProcess.GetPackageMapByIdRequest): Promise<WsPackageProcess.GetPackageMapByIdResponse> {\r\n\treturn this._connection.send(\"GetPackageMapById\", request);\r\n}\r\n\r\nGetPackageMapSelectOptions(request: WsPackageProcess.GetPackageMapSelectOptionsRequest): Promise<WsPackageProcess.GetPackageMapSelectOptionsResponse> {\r\n\treturn this._connection.send(\"GetPackageMapSelectOptions\", request);\r\n}\r\n\r\nGetPartFromPackageMap(request: WsPackageProcess.GetPartFromPackageMapRequest): Promise<WsPackageProcess.GetPartFromPackageMapResponse> {\r\n\treturn this._connection.send(\"GetPartFromPackageMap\", request);\r\n}\r\n\r\nGetQueryFileMapping(request: WsPackageProcess.GetQueryFileMappingRequest): Promise<WsPackageProcess.GetQueryFileMappingResponse> {\r\n\treturn this._connection.send(\"GetQueryFileMapping\", request);\r\n}\r\n\r\nListPackage(request: WsPackageProcess.ListPackageRequest): Promise<WsPackageProcess.ListPackageResponse> {\r\n\treturn this._connection.send(\"ListPackage\", request);\r\n}\r\n\r\nListPackages(request: WsPackageProcess.ListPackagesRequest): Promise<WsPackageProcess.ListPackagesResponse> {\r\n\treturn this._connection.send(\"ListPackages\", request);\r\n}\r\n\r\nPing(request: WsPackageProcess.WsPackageProcessPingRequest): Promise<WsPackageProcess.WsPackageProcessPingResponse> {\r\n\treturn this._connection.send(\"Ping\", request);\r\n}\r\n\r\nRemovePartFromPackageMap(request: WsPackageProcess.RemovePartFromPackageMapRequest): Promise<WsPackageProcess.RemovePartFromPackageMapResponse> {\r\n\treturn this._connection.send(\"RemovePartFromPackageMap\", request);\r\n}\r\n\r\nValidatePackage(request: WsPackageProcess.ValidatePackageRequest): Promise<WsPackageProcess.ValidatePackageResponse> {\r\n\treturn this._connection.send(\"ValidatePackage\", request);\r\n}\r\n\r\n}\r\n","import { PackageProcessServiceBase, WsPackageProcess } from \"./wsdl/WsPackageProcess/v1.04/WsPackageProcess\";\r\n\r\nexport {\r\n    WsPackageProcess\r\n};\r\n\r\nexport class PackageProcessService extends PackageProcessServiceBase {\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\ntype unsignedInt = number;\r\n\r\nexport namespace WsResources {\r\n\r\n    export interface WsResourcesPingRequest {\r\n\r\n    }\r\n\r\n    export interface WsResourcesPingResponse {\r\n\r\n    }\r\n\r\n    export interface ServiceQueryRequest {\r\n        Type?: string;\r\n        Name?: string;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface Service {\r\n        Name: string;\r\n        Type: string;\r\n        Port: unsignedInt;\r\n        TLSSecure: boolean;\r\n    }\r\n\r\n    export interface Services {\r\n        Service: Service[];\r\n    }\r\n\r\n    export interface ServiceQueryResponse {\r\n        Exceptions: {\r\n            Source: string;\r\n            Exception: Exception[];\r\n        };\r\n        Services: {\r\n            Service: Service[];\r\n        };\r\n    }\r\n\r\n    export interface WebLinksQueryRequest {\r\n\r\n    }\r\n\r\n    export interface NamedValue {\r\n        Name: string;\r\n        Value: string;\r\n    }\r\n\r\n    export interface Annotations {\r\n        NamedValue: NamedValue[];\r\n    }\r\n\r\n    export interface DiscoveredWebLink {\r\n        ServiceName: string;\r\n        NameSpace: string;\r\n        Annotations: {\r\n            NamedValue: NamedValue[];\r\n        };\r\n    }\r\n\r\n    export interface DiscoveredWebLinks {\r\n        DiscoveredWebLink: DiscoveredWebLink[];\r\n    }\r\n\r\n    export interface ConfiguredWebLink {\r\n        Name: string;\r\n        Description: string;\r\n        URL: string;\r\n    }\r\n\r\n    export interface ConfiguredWebLinks {\r\n        ConfiguredWebLink: ConfiguredWebLink[];\r\n    }\r\n\r\n    export interface WebLinksQueryResponse {\r\n        Exceptions: Exceptions;\r\n        DiscoveredWebLinks: {\r\n            DiscoveredWebLink: DiscoveredWebLink[];\r\n        };\r\n        ConfiguredWebLinks: {\r\n            ConfiguredWebLink: ConfiguredWebLink[];\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport class ResourcesServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WsResources\", \"1.01\");\r\n    }\r\n\r\n    Ping(request: WsResources.WsResourcesPingRequest): Promise<WsResources.WsResourcesPingResponse> {\r\n        return this._connection.send(\"Ping\", request);\r\n    }\r\n\r\n    ServiceQuery(request: WsResources.ServiceQueryRequest): Promise<WsResources.ServiceQueryResponse> {\r\n        return this._connection.send(\"ServiceQuery\", request);\r\n    }\r\n\r\n    WebLinksQuery(request: WsResources.WebLinksQueryRequest): Promise<WsResources.WebLinksQueryResponse> {\r\n        return this._connection.send(\"WebLinksQuery\", request);\r\n    }\r\n\r\n}\r\n","import { ResourcesServiceBase, WsResources } from \"./wsdl/WsResources/v1.01/WsResources\";\r\n\r\nexport {\r\n    WsResources\r\n};\r\n\r\nexport class ResourcesService extends ResourcesServiceBase {\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsSasha {\r\n\r\n    export type unsignedInt = number;\r\n\r\n    export enum WUTypes {\r\n        ECL = \"ECL\",\r\n        DFU = \"DFU\"\r\n    }\r\n\r\n    export interface ArchiveWURequest {\r\n        Wuid?: string;\r\n        WUType?: WUTypes;\r\n        DeleteOnSuccess?: boolean;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface ResultResponse {\r\n        Exceptions: Exceptions;\r\n        Result: string;\r\n    }\r\n\r\n    export interface GetVersionRequest {\r\n\r\n    }\r\n\r\n    export interface ListWURequest {\r\n        WUType?: WUTypes;\r\n        Wuid?: string;\r\n        Cluster?: string;\r\n        Owner?: string;\r\n        JobName?: string;\r\n        State?: string;\r\n        FromDate?: string;\r\n        ToDate?: string;\r\n        Archived?: boolean;\r\n        Online?: boolean;\r\n        IncludeDT?: boolean;\r\n        BeforeWU?: string;\r\n        AfterWU?: string;\r\n        MaxNumberWUs?: unsignedInt;\r\n        Descending?: boolean;\r\n        OutputFields?: string;\r\n    }\r\n\r\n    export interface WSSashaPingRequest {\r\n\r\n    }\r\n\r\n    export interface WSSashaPingResponse {\r\n\r\n    }\r\n\r\n    export interface RestoreWURequest {\r\n        Wuid?: string;\r\n        WUType?: WUTypes;\r\n    }\r\n\r\n}\r\n\r\nexport class SashaServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WSSasha\", \"1.01\");\r\n    }\r\n\r\n    ArchiveWU(request: Partial<WsSasha.ArchiveWURequest>): Promise<WsSasha.ResultResponse> {\r\n        return this._connection.send(\"ArchiveWU\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    GetVersion(request: Partial<WsSasha.GetVersionRequest>): Promise<WsSasha.ResultResponse> {\r\n        return this._connection.send(\"GetVersion\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    ListWU(request: Partial<WsSasha.ListWURequest>): Promise<WsSasha.ResultResponse> {\r\n        return this._connection.send(\"ListWU\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n    Ping(request: Partial<WsSasha.WSSashaPingRequest>): Promise<WsSasha.WSSashaPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"WSSashaPingResponse\");\r\n    }\r\n\r\n    RestoreWU(request: Partial<WsSasha.RestoreWURequest>): Promise<WsSasha.ResultResponse> {\r\n        return this._connection.send(\"RestoreWU\", request, \"json\", false, undefined, \"ResultResponse\");\r\n    }\r\n\r\n}\r\n","import { SashaServiceBase, WsSasha } from \"./wsdl/WsSasha/v1.01/WsSasha\";\r\n\r\nexport {\r\n    WsSasha\r\n};\r\n\r\nexport class SashaService extends SashaServiceBase {\r\n}","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsSMC {\r\n\r\n    export type int = number;\r\n    export type unsignedInt = number;\r\n    export type long = number;\r\n\r\n    export enum LockModes {\r\n        ALL = \"ALL\",\r\n        READ = \"READ\",\r\n        WRITE = \"WRITE\",\r\n        HOLD = \"HOLD\",\r\n        SUB = \"SUB\"\r\n    }\r\n\r\n    export enum RoxieControlCmdType {\r\n        Attach = \"Attach\",\r\n        Detach = \"Detach\",\r\n        State = \"State\",\r\n        Reload = \"Reload\",\r\n        ReloadRetry = \"ReloadRetry\",\r\n        MemLock = \"MemLock\",\r\n        MemUnlock = \"MemUnlock\",\r\n        GetMemLocked = \"GetMemLocked\"\r\n    }\r\n\r\n    export interface Activity {\r\n        ChatURL: string;\r\n        BannerContent: string;\r\n        BannerColor: string;\r\n        BannerSize: string;\r\n        BannerScroll: string;\r\n        BannerAction: int;\r\n        EnableChatURL: boolean;\r\n        FromSubmitBtn: boolean;\r\n        SortBy: string;\r\n        Descending: boolean;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface TargetCluster {\r\n        ClusterName: string;\r\n        QueueName: string;\r\n        QueueStatus: string;\r\n        StatusDetails: string;\r\n        Warning: string;\r\n        ClusterType: int;\r\n        ClusterSize: int;\r\n        ClusterStatus: int;\r\n    }\r\n\r\n    export interface ThorClusterList {\r\n        TargetCluster: TargetCluster[];\r\n    }\r\n\r\n    export interface RoxieClusterList {\r\n        TargetCluster: TargetCluster[];\r\n    }\r\n\r\n    export interface HThorClusterList {\r\n        TargetCluster: TargetCluster[];\r\n    }\r\n\r\n    export interface DFUJob {\r\n        TimeStarted: string;\r\n        Done: int;\r\n        Total: int;\r\n        Command: string;\r\n    }\r\n\r\n    export interface DFUJobs {\r\n        DFUJob: DFUJob[];\r\n    }\r\n\r\n    export interface ActiveWorkunit {\r\n        Wuid: string;\r\n        State: string;\r\n        StateID: int;\r\n        Owner: string;\r\n        Jobname: string;\r\n        Server: string;\r\n        Instance: string;\r\n        Priority: string;\r\n        Extra: string;\r\n        GraphName: string;\r\n        Duration: string;\r\n        GID: string;\r\n        QueueName: string;\r\n        MemoryBlocked: int;\r\n        IsPausing: boolean;\r\n        Warning: string;\r\n        ClusterName: string;\r\n        ClusterType: string;\r\n        ClusterQueueName: string;\r\n        TargetClusterName: string;\r\n        NoAccess: boolean;\r\n    }\r\n\r\n    export interface Running {\r\n        ActiveWorkunit: ActiveWorkunit[];\r\n    }\r\n\r\n    export interface Queues {\r\n        ServerJobQueue: ServerJobQueue[];\r\n    }\r\n\r\n    export interface ServerJobQueue {\r\n        QueueName: string;\r\n        Queues: {\r\n            ServerJobQueue: ServerJobQueue[];\r\n        };\r\n        ServerName: string;\r\n        ServerType: string;\r\n        QueueStatus: string;\r\n        StatusDetails: string;\r\n        NetworkAddress: string;\r\n        Port: int;\r\n    }\r\n\r\n    export interface ServerJobQueues {\r\n        ServerJobQueue: ServerJobQueue[];\r\n    }\r\n\r\n    export interface ActivityResponse {\r\n        Exceptions: {\r\n            Source: string;\r\n            Exception: Exception[];\r\n        };\r\n        Build: string;\r\n        ThorClusterList: {\r\n            TargetCluster: TargetCluster[];\r\n        };\r\n        RoxieClusterList: {\r\n            TargetCluster: TargetCluster[];\r\n        };\r\n        HThorClusterList: {\r\n            TargetCluster: TargetCluster[];\r\n        };\r\n        DFUJobs: {\r\n            DFUJob: DFUJob[];\r\n        };\r\n        Running: {\r\n            ActiveWorkunit: ActiveWorkunit[];\r\n        };\r\n        BannerContent: string;\r\n        BannerColor: string;\r\n        BannerSize: string;\r\n        BannerScroll: string;\r\n        ChatURL: string;\r\n        ShowBanner: int;\r\n        ShowChatURL: int;\r\n        SortBy: string;\r\n        Descending: boolean;\r\n        SuperUser: boolean;\r\n        AccessRight: string;\r\n        ServerJobQueues: {\r\n            ServerJobQueue: ServerJobQueue[];\r\n        };\r\n        ActivityTime: string;\r\n        DaliDetached: boolean;\r\n    }\r\n\r\n    export interface BrowseResources {\r\n\r\n    }\r\n\r\n    export interface HPCCResource {\r\n        Name: string;\r\n        Description: string;\r\n        FileName: string;\r\n        Version: string;\r\n    }\r\n\r\n    export interface HPCCResources {\r\n        HPCCResource: HPCCResource[];\r\n    }\r\n\r\n    export interface HPCCResourceRepository {\r\n        Name: string;\r\n        Path: string;\r\n        HPCCResources: {\r\n            HPCCResource: HPCCResource[];\r\n        };\r\n    }\r\n\r\n    export interface HPCCResourceRepositories {\r\n        HPCCResourceRepository: HPCCResourceRepository[];\r\n    }\r\n\r\n    export interface BrowseResourcesResponse {\r\n        Exceptions: Exceptions;\r\n        PortalURL: string;\r\n        ESPInstance: string;\r\n        OS: int;\r\n        UseResource: boolean;\r\n        HPCCResourceRepositories: {\r\n            HPCCResourceRepository: HPCCResourceRepository[];\r\n        };\r\n    }\r\n\r\n    export interface ClearQueue {\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Comment: string;\r\n        ServerType: string;\r\n        NetworkAddress: string;\r\n        Port: int;\r\n    }\r\n\r\n    export interface TargetClusterInfo {\r\n        ClusterName: string;\r\n        QueueName: string;\r\n        QueueStatus: string;\r\n        StatusDetails: string;\r\n        Warning: string;\r\n        ClusterType: int;\r\n        ClusterSize: int;\r\n        ClusterStatus: int;\r\n    }\r\n\r\n    export interface ServerInfo {\r\n        QueueName: string;\r\n        Queues: Queues;\r\n        ServerName: string;\r\n        ServerType: string;\r\n        QueueStatus: string;\r\n        StatusDetails: string;\r\n        NetworkAddress: string;\r\n        Port: int;\r\n    }\r\n\r\n    export interface Workunits {\r\n        ActiveWorkunit: ActiveWorkunit[];\r\n    }\r\n\r\n    export interface StatusServerInfo {\r\n        TargetClusterInfo: {\r\n            ClusterName: string;\r\n            QueueName: string;\r\n            QueueStatus: string;\r\n            StatusDetails: string;\r\n            Warning: string;\r\n            ClusterType: int;\r\n            ClusterSize: int;\r\n            ClusterStatus: int;\r\n        };\r\n        ServerInfo: {\r\n            QueueName: string;\r\n            Queues: Queues;\r\n            ServerName: string;\r\n            ServerType: string;\r\n            QueueStatus: string;\r\n            StatusDetails: string;\r\n            NetworkAddress: string;\r\n            Port: int;\r\n        };\r\n        Workunits: {\r\n            ActiveWorkunit: ActiveWorkunit[];\r\n        };\r\n    }\r\n\r\n    export interface SMCQueueResponse {\r\n        Exceptions: Exceptions;\r\n        StatusServerInfo: {\r\n            TargetClusterInfo: {\r\n                ClusterName: string;\r\n                QueueName: string;\r\n                QueueStatus: string;\r\n                StatusDetails: string;\r\n                Warning: string;\r\n                ClusterType: int;\r\n                ClusterSize: int;\r\n                ClusterStatus: int;\r\n            };\r\n            ServerInfo: {\r\n                QueueName: string;\r\n                Queues: Queues;\r\n                ServerName: string;\r\n                ServerType: string;\r\n                QueueStatus: string;\r\n                StatusDetails: string;\r\n                NetworkAddress: string;\r\n                Port: int;\r\n            };\r\n            Workunits: {\r\n                ActiveWorkunit: ActiveWorkunit[];\r\n            };\r\n        };\r\n    }\r\n\r\n    export interface GetBuildInfo {\r\n\r\n    }\r\n\r\n    export interface NamedValue {\r\n        Name: string;\r\n        Value: string;\r\n    }\r\n\r\n    export interface BuildInfo {\r\n        NamedValue: NamedValue[];\r\n    }\r\n\r\n    export interface GetBuildInfoResponse {\r\n        Exceptions: Exceptions;\r\n        BuildInfo: {\r\n            NamedValue: NamedValue[];\r\n        };\r\n    }\r\n\r\n    export interface GetStatusServerInfo {\r\n        ServerName: string;\r\n        ServerType: string;\r\n        NetworkAddress: string;\r\n        Port: int;\r\n    }\r\n\r\n    export interface GetStatusServerInfoResponse {\r\n        Exceptions: Exceptions;\r\n        StatusServerInfo: StatusServerInfo;\r\n    }\r\n\r\n    export interface GetThorQueueAvailability {\r\n\r\n    }\r\n\r\n    export interface ThorCluster {\r\n        ClusterName: string;\r\n        QueueName: string;\r\n        QueueStatus: string;\r\n        QueueAvailable: int;\r\n        JobsRunning: int;\r\n        JobsInQueue: int;\r\n        QueueStatus2: int;\r\n        ThorLCR: string;\r\n        ClusterSize: int;\r\n    }\r\n\r\n    export interface ThorClusters {\r\n        ThorCluster: ThorCluster[];\r\n    }\r\n\r\n    export interface GetThorQueueAvailabilityResponse {\r\n        Exceptions: Exceptions;\r\n        ThorClusters: {\r\n            ThorCluster: ThorCluster[];\r\n        };\r\n    }\r\n\r\n    export interface Index {\r\n\r\n    }\r\n\r\n    export interface SMCIndexResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface LockQuery {\r\n        EPIP: string;\r\n        XPath: string;\r\n        DurationMSLow: unsignedInt;\r\n        DurationMSHigh: unsignedInt;\r\n        TimeLockedLow: string;\r\n        TimeLockedHigh: string;\r\n        Mode: LockModes;\r\n        AllFileLocks: boolean;\r\n    }\r\n\r\n    export interface ModeNames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface Lock {\r\n        EPIP: string;\r\n        XPath: string;\r\n        LogicalFile: string;\r\n        SessionID: long;\r\n        DurationMS: unsignedInt;\r\n        TimeLocked: string;\r\n        Modes: string;\r\n        ModeNames: {\r\n            Item: string[];\r\n        };\r\n    }\r\n\r\n    export interface Locks {\r\n        Lock: Lock[];\r\n    }\r\n\r\n    export interface LockQueryResponse {\r\n        Exceptions: Exceptions;\r\n        Locks: {\r\n            Lock: Lock[];\r\n        };\r\n        NumLocks: int;\r\n    }\r\n\r\n    export interface MoveJobBack {\r\n        ClusterType: int;\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Wuid: string;\r\n    }\r\n\r\n    export interface SMCJobResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface MoveJobDown {\r\n        ClusterType: int;\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Wuid: string;\r\n    }\r\n\r\n    export interface MoveJobFront {\r\n        ClusterType: int;\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Wuid: string;\r\n    }\r\n\r\n    export interface MoveJobUp {\r\n        ClusterType: int;\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Wuid: string;\r\n    }\r\n\r\n    export interface NotInCommunityEdition {\r\n        EEPortal: string;\r\n    }\r\n\r\n    export interface NotInCommunityEditionResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface PauseQueue {\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Comment: string;\r\n        ServerType: string;\r\n        NetworkAddress: string;\r\n        Port: int;\r\n    }\r\n\r\n    export interface Ping {\r\n\r\n    }\r\n\r\n    export interface WsSMCPingResponse {\r\n\r\n    }\r\n\r\n    export interface RemoveJob {\r\n        ClusterType: int;\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Wuid: string;\r\n    }\r\n\r\n    export interface ResumeQueue {\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Comment: string;\r\n        ServerType: string;\r\n        NetworkAddress: string;\r\n        Port: int;\r\n    }\r\n\r\n    export interface RoxieControlCmd {\r\n        ProcessCluster: string;\r\n        TargetCluster: string;\r\n        Command: RoxieControlCmdType;\r\n        Wait: int;\r\n    }\r\n\r\n    export interface Endpoint {\r\n        Address: string;\r\n        Attached: boolean;\r\n        StateHash: string;\r\n        Status: string;\r\n        MemLocked: boolean;\r\n    }\r\n\r\n    export interface Endpoints {\r\n        Endpoint: Endpoint[];\r\n    }\r\n\r\n    export interface RoxieControlCmdResponse {\r\n        Exceptions: Exceptions;\r\n        Endpoints: {\r\n            Endpoint: Endpoint[];\r\n        };\r\n    }\r\n\r\n    export interface QueryIds {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface RoxieXrefCmd {\r\n        RoxieCluster: string;\r\n        QueryIds: {\r\n            Item: string[];\r\n        };\r\n        CheckAllNodes: boolean;\r\n        Wait: int;\r\n    }\r\n\r\n    export interface RoxieXrefCmdResponse {\r\n        Exceptions: Exceptions;\r\n        Result: string;\r\n    }\r\n\r\n    export interface SetBanner {\r\n        ChatURL: string;\r\n        BannerContent: string;\r\n        BannerColor: string;\r\n        BannerSize: string;\r\n        BannerScroll: string;\r\n        BannerAction: int;\r\n        EnableChatURL: boolean;\r\n        FromSubmitBtn: boolean;\r\n    }\r\n\r\n    export interface SetBannerResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface SMCJob {\r\n        Wuid: string;\r\n        QueueName: string;\r\n    }\r\n\r\n    export interface SMCJobs {\r\n        SMCJob: SMCJob[];\r\n    }\r\n\r\n    export interface SetJobPriority {\r\n        QueueName: string;\r\n        Wuid: string;\r\n        Priority: string;\r\n        SMCJobs: {\r\n            SMCJob: SMCJob[];\r\n        };\r\n    }\r\n\r\n    export interface SMCPriorityResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface StopQueue {\r\n        Cluster: string;\r\n        QueueName: string;\r\n        Comment: string;\r\n        ServerType: string;\r\n        NetworkAddress: string;\r\n        Port: int;\r\n    }\r\n\r\n}\r\n\r\nexport class SMCServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WsSMC\", \"1.27\");\r\n    }\r\n\r\n    Activity(request: WsSMC.Activity): Promise<WsSMC.ActivityResponse> {\r\n        return this._connection.send(\"Activity\", request, \"json\", false, undefined, \"ActivityResponse\");\r\n    }\r\n\r\n    BrowseResources(request: WsSMC.BrowseResources): Promise<WsSMC.BrowseResourcesResponse> {\r\n        return this._connection.send(\"BrowseResources\", request, \"json\", false, undefined, \"BrowseResourcesResponse\");\r\n    }\r\n\r\n    ClearQueue(request: WsSMC.ClearQueue): Promise<WsSMC.SMCQueueResponse> {\r\n        return this._connection.send(\"ClearQueue\", request, \"json\", false, undefined, \"SMCQueueResponse\");\r\n    }\r\n\r\n    GetBuildInfo(request: WsSMC.GetBuildInfo): Promise<WsSMC.GetBuildInfoResponse> {\r\n        return this._connection.send(\"GetBuildInfo\", request, \"json\", false, undefined, \"GetBuildInfoResponse\");\r\n    }\r\n\r\n    GetStatusServerInfo(request: WsSMC.GetStatusServerInfo): Promise<WsSMC.GetStatusServerInfoResponse> {\r\n        return this._connection.send(\"GetStatusServerInfo\", request, \"json\", false, undefined, \"GetStatusServerInfoResponse\");\r\n    }\r\n\r\n    GetThorQueueAvailability(request: WsSMC.GetThorQueueAvailability): Promise<WsSMC.GetThorQueueAvailabilityResponse> {\r\n        return this._connection.send(\"GetThorQueueAvailability\", request, \"json\", false, undefined, \"GetThorQueueAvailabilityResponse\");\r\n    }\r\n\r\n    Index(request: WsSMC.Index): Promise<WsSMC.SMCIndexResponse> {\r\n        return this._connection.send(\"Index\", request, \"json\", false, undefined, \"SMCIndexResponse\");\r\n    }\r\n\r\n    LockQuery(request: WsSMC.LockQuery): Promise<WsSMC.LockQueryResponse> {\r\n        return this._connection.send(\"LockQuery\", request, \"json\", false, undefined, \"LockQueryResponse\");\r\n    }\r\n\r\n    MoveJobBack(request: WsSMC.MoveJobBack): Promise<WsSMC.SMCJobResponse> {\r\n        return this._connection.send(\"MoveJobBack\", request, \"json\", false, undefined, \"SMCJobResponse\");\r\n    }\r\n\r\n    MoveJobDown(request: WsSMC.MoveJobDown): Promise<WsSMC.SMCJobResponse> {\r\n        return this._connection.send(\"MoveJobDown\", request, \"json\", false, undefined, \"SMCJobResponse\");\r\n    }\r\n\r\n    MoveJobFront(request: WsSMC.MoveJobFront): Promise<WsSMC.SMCJobResponse> {\r\n        return this._connection.send(\"MoveJobFront\", request, \"json\", false, undefined, \"SMCJobResponse\");\r\n    }\r\n\r\n    MoveJobUp(request: WsSMC.MoveJobUp): Promise<WsSMC.SMCJobResponse> {\r\n        return this._connection.send(\"MoveJobUp\", request, \"json\", false, undefined, \"SMCJobResponse\");\r\n    }\r\n\r\n    NotInCommunityEdition(request: WsSMC.NotInCommunityEdition): Promise<WsSMC.NotInCommunityEditionResponse> {\r\n        return this._connection.send(\"NotInCommunityEdition\", request, \"json\", false, undefined, \"NotInCommunityEditionResponse\");\r\n    }\r\n\r\n    PauseQueue(request: WsSMC.PauseQueue): Promise<WsSMC.SMCQueueResponse> {\r\n        return this._connection.send(\"PauseQueue\", request, \"json\", false, undefined, \"SMCQueueResponse\");\r\n    }\r\n\r\n    Ping(request: WsSMC.Ping): Promise<WsSMC.WsSMCPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"WsSMCPingResponse\");\r\n    }\r\n\r\n    RemoveJob(request: WsSMC.RemoveJob): Promise<WsSMC.SMCJobResponse> {\r\n        return this._connection.send(\"RemoveJob\", request, \"json\", false, undefined, \"SMCJobResponse\");\r\n    }\r\n\r\n    ResumeQueue(request: WsSMC.ResumeQueue): Promise<WsSMC.SMCQueueResponse> {\r\n        return this._connection.send(\"ResumeQueue\", request, \"json\", false, undefined, \"SMCQueueResponse\");\r\n    }\r\n\r\n    RoxieControlCmd(request: WsSMC.RoxieControlCmd): Promise<WsSMC.RoxieControlCmdResponse> {\r\n        return this._connection.send(\"RoxieControlCmd\", request, \"json\", false, undefined, \"RoxieControlCmdResponse\");\r\n    }\r\n\r\n    RoxieXrefCmd(request: WsSMC.RoxieXrefCmd): Promise<WsSMC.RoxieXrefCmdResponse> {\r\n        return this._connection.send(\"RoxieXrefCmd\", request, \"json\", false, undefined, \"RoxieXrefCmdResponse\");\r\n    }\r\n\r\n    SetBanner(request: WsSMC.SetBanner): Promise<WsSMC.SetBannerResponse> {\r\n        return this._connection.send(\"SetBanner\", request, \"json\", false, undefined, \"SetBannerResponse\");\r\n    }\r\n\r\n    SetJobPriority(request: WsSMC.SetJobPriority): Promise<WsSMC.SMCPriorityResponse> {\r\n        return this._connection.send(\"SetJobPriority\", request, \"json\", false, undefined, \"SMCPriorityResponse\");\r\n    }\r\n\r\n    StopQueue(request: WsSMC.StopQueue): Promise<WsSMC.SMCQueueResponse> {\r\n        return this._connection.send(\"StopQueue\", request, \"json\", false, undefined, \"SMCQueueResponse\");\r\n    }\r\n\r\n}\r\n","import { SMCServiceBase, WsSMC } from \"./wsdl/WsSMC/v1.27/WsSMC\";\r\nimport { IOptions } from \"../connection\";\r\n\r\nexport {\r\n    WsSMC\r\n};\r\n\r\nexport class SMCService extends SMCServiceBase {\r\n\r\n    connectionOptions(): IOptions {\r\n        return this._connection.opts();\r\n    }\r\n\r\n    Activity(request: WsSMC.Activity): Promise<WsSMC.ActivityResponse> {\r\n        return super.Activity(request).then(response => {\r\n            return {\r\n                Running: {\r\n                    ActiveWorkunit: []\r\n                },\r\n                ...response\r\n            };\r\n        });\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../connection\";\r\nimport { Service } from \"../espConnection\";\r\n\r\n/*\r\n    Response structures generated via:\r\n    * http://localhost:8010/wsstore/Fetch?reqjson_\r\n    * http://localhost:8010/wsstore/Fetch?respjson_\r\n    * http://json2ts.com/\r\n*/\r\n\r\nexport namespace WsStore {\r\n\r\n    export interface CreateStoreRequest {\r\n        Name: string;\r\n        Type: string;\r\n        Description: string;\r\n        UserSpecific: boolean;\r\n    }\r\n\r\n    export interface DeleteRequest {\r\n        StoreName: string;\r\n        Namespace: string;\r\n        Key: string;\r\n        UserSpecific: boolean;\r\n        TargetUser?: string;\r\n    }\r\n\r\n    export interface DeleteNamespaceRequest {\r\n        StoreName: string;\r\n        Namespace: string;\r\n        UserSpecific: boolean;\r\n        TargetUser: string;\r\n    }\r\n\r\n    export interface FetchRequest {\r\n        StoreName: string;\r\n        Namespace: string;\r\n        Key: string;\r\n        UserSpecific: boolean;\r\n    }\r\n\r\n    export interface FetchAllRequest {\r\n        StoreName: string;\r\n        Namespace: string;\r\n        UserSpecific: boolean;\r\n    }\r\n\r\n    export interface FetchKeyMDRequest {\r\n        StoreName: string;\r\n        Namespace: string;\r\n        Key: string;\r\n        UserSpecific: boolean;\r\n    }\r\n\r\n    export interface ListKeysRequest {\r\n        StoreName: string;\r\n        Namespace: string;\r\n        UserSpecific: boolean;\r\n    }\r\n\r\n    export interface ListNamespacesRequest {\r\n        StoreName: string;\r\n        UserSpecific: boolean;\r\n    }\r\n\r\n    export interface SetRequest {\r\n        StoreName: string;\r\n        Namespace: string;\r\n        Key: string;\r\n        Value: string;\r\n        UserSpecific: boolean;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface CreateStoreResponse {\r\n        Exceptions: Exceptions;\r\n        Name: string;\r\n        Type: string;\r\n        Description: string;\r\n        Owner: string;\r\n    }\r\n\r\n    export interface DeleteResponse {\r\n        Exceptions: Exceptions;\r\n        Success: boolean;\r\n    }\r\n\r\n    export interface DeleteNamespaceResponse {\r\n        Exceptions: Exceptions;\r\n        Success: boolean;\r\n    }\r\n\r\n    export interface FetchResponse {\r\n        Exceptions: Exceptions;\r\n        Value: string;\r\n    }\r\n\r\n    export interface Pair {\r\n        Key: string;\r\n        Value: string;\r\n    }\r\n\r\n    export interface Pairs {\r\n        Pair: Pair[];\r\n    }\r\n\r\n    export interface FetchAllResponse {\r\n        Exceptions: Exceptions;\r\n        Namespace: string;\r\n        Pairs: Pairs;\r\n    }\r\n\r\n    export interface Pair2 {\r\n        Key: string;\r\n        Value: string;\r\n    }\r\n\r\n    export interface Pairs2 {\r\n        Pair: Pair2[];\r\n    }\r\n\r\n    export interface FetchKeyMDResponse {\r\n        Exceptions: Exceptions;\r\n        StoreName: string;\r\n        Namespace: string;\r\n        Key: string;\r\n        Pairs: Pairs2;\r\n    }\r\n\r\n    export interface KeySet {\r\n        Key: string[];\r\n    }\r\n\r\n    export interface ListKeysResponse {\r\n        Exceptions: Exceptions;\r\n        StoreName: string;\r\n        Namespace: string;\r\n        KeySet: KeySet;\r\n    }\r\n\r\n    export interface Namespaces {\r\n        Namespace: string[];\r\n    }\r\n\r\n    export interface ListNamespacesResponse {\r\n        Exceptions: Exceptions;\r\n        StoreName: string;\r\n        Namespaces: Namespaces;\r\n    }\r\n\r\n    export interface WsstorePingResponse {\r\n    }\r\n\r\n    export interface SetResponse {\r\n        Exceptions: Exceptions;\r\n        Success: boolean;\r\n    }\r\n}\r\n\r\nexport class StoreService extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WsStore\", \"1\");\r\n    }\r\n\r\n    CreateStore(request: WsStore.CreateStoreRequest): Promise<WsStore.CreateStoreResponse> {\r\n        return this._connection.send(\"Fetch\", request);\r\n    }\r\n\r\n    Delete(request: WsStore.DeleteRequest): Promise<WsStore.DeleteResponse> {\r\n        return this._connection.send(\"Delete\", request).catch(e => {\r\n            if (e.isESPExceptions && e.Exception.some(e => e.Code === -1)) {\r\n                //  \"Delete\" item does not exist  ---\r\n                return {\r\n                    Exceptions: undefined,\r\n                    Success: true\r\n                } as WsStore.DeleteResponse;\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n\r\n    DeleteNamespace(request: WsStore.DeleteNamespaceRequest): Promise<WsStore.DeleteNamespaceResponse> {\r\n        return this._connection.send(\"DeleteNamespace\", request);\r\n    }\r\n\r\n    Fetch(request: WsStore.FetchRequest): Promise<WsStore.FetchResponse> {\r\n        return this._connection.send(\"Fetch\", request).catch(e => {\r\n            if (e.isESPExceptions && e.Exception.some(e => e.Code === -1)) {\r\n                //  \"Fetch\" item does not exist  ---\r\n                return {\r\n                    Exceptions: undefined,\r\n                    Value: undefined\r\n                } as WsStore.FetchResponse;\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n\r\n    FetchAll(request: WsStore.FetchAllRequest): Promise<WsStore.FetchAllResponse> {\r\n        return this._connection.send(\"FetchAll\", request);\r\n    }\r\n\r\n    FetchKeyMD(request: WsStore.FetchKeyMDRequest): Promise<WsStore.FetchKeyMDResponse> {\r\n        return this._connection.send(\"FetchKeyMD\", request);\r\n    }\r\n\r\n    ListKeys(request: WsStore.ListKeysRequest): Promise<WsStore.ListKeysResponse> {\r\n        return this._connection.send(\"ListKeys\", request);\r\n    }\r\n\r\n    ListNamespaces(request: WsStore.ListNamespacesRequest): Promise<WsStore.ListNamespacesResponse> {\r\n        return this._connection.send(\"ListNamespaces\", request);\r\n    }\r\n\r\n    Set(request: WsStore.SetRequest): Promise<WsStore.SetResponse> {\r\n        return this._connection.send(\"Set\", request);\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsTopology {\r\n\r\n    export type int = number;\r\n    export type base64Binary = string;\r\n    export type unsignedInt = number;\r\n    export type long = number;\r\n\r\n    export enum RoxieQueueFilter {\r\n        All = \"All\",\r\n        QueriesOnly = \"QueriesOnly\",\r\n        WorkunitsOnly = \"WorkunitsOnly\"\r\n    }\r\n\r\n    export interface WsTopologyPingRequest {\r\n\r\n    }\r\n\r\n    export interface WsTopologyPingResponse {\r\n\r\n    }\r\n\r\n    export interface SystemLogRequest {\r\n        Name?: string;\r\n        Type?: string;\r\n        Zip?: int;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface SystemLogResponse {\r\n        Exceptions: {\r\n            Source: string;\r\n            Exception: Exception[];\r\n        };\r\n        thefile: base64Binary;\r\n    }\r\n\r\n    export interface TpClusterInfoRequest {\r\n        Name?: string;\r\n    }\r\n\r\n    export interface TpQueue {\r\n        Name: string;\r\n        WorkUnit: string;\r\n    }\r\n\r\n    export interface TpQueues {\r\n        TpQueue: TpQueue[];\r\n    }\r\n\r\n    export interface TpClusterInfoResponse {\r\n        Exceptions: Exceptions;\r\n        Name: string;\r\n        WorkUnit: string;\r\n        TpQueues: {\r\n            TpQueue: TpQueue[];\r\n        };\r\n    }\r\n\r\n    export interface TpClusterQueryRequest {\r\n        Type?: string;\r\n    }\r\n\r\n    export interface TpMachine {\r\n        Name: string;\r\n        Netaddress: string;\r\n        ConfigNetaddress: string;\r\n        Domain: string;\r\n        Directory: string;\r\n        Type: string;\r\n        Available: string;\r\n        OS: int;\r\n        Path: string;\r\n        Port: int;\r\n        ProcessNumber: int;\r\n        Channels: unsignedInt;\r\n    }\r\n\r\n    export interface TpMachines {\r\n        TpMachine: TpMachine[];\r\n    }\r\n\r\n    export interface TpCluster {\r\n        Type: string;\r\n        Name: string;\r\n        QueueName: string;\r\n        Build: string;\r\n        Directory: string;\r\n        LogDirectory: string;\r\n        Desc: string;\r\n        Path: string;\r\n        DataModel: string;\r\n        OS: int;\r\n        HasThorSpareProcess: boolean;\r\n        TpMachines: {\r\n            TpMachine: TpMachine[];\r\n        };\r\n    }\r\n\r\n    export interface TpClusters {\r\n        TpCluster: TpCluster[];\r\n    }\r\n\r\n    export interface TpClusterQueryResponse {\r\n        Exceptions: Exceptions;\r\n        EnableSNMP: boolean;\r\n        AcceptLanguage: string;\r\n        TpClusters: {\r\n            TpCluster: TpCluster[];\r\n        };\r\n    }\r\n\r\n    export interface TpDropZoneQueryRequest {\r\n        Name?: string;\r\n        ECLWatchVisibleOnly?: boolean;\r\n    }\r\n\r\n    export interface TpDropZone {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Path: string;\r\n        ECLWatchVisible: boolean;\r\n        UMask: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpDropZones {\r\n        TpDropZone: TpDropZone[];\r\n    }\r\n\r\n    export interface TpDropZoneQueryResponse {\r\n        Exceptions: Exceptions;\r\n        TpDropZones: {\r\n            TpDropZone: TpDropZone[];\r\n        };\r\n    }\r\n\r\n    export interface TpGetComponentFileRequest {\r\n        CompType?: string;\r\n        CompName?: string;\r\n        NetAddress?: string;\r\n        Directory?: string;\r\n        FileType?: string;\r\n        OsType?: int;\r\n        PlainText?: string;\r\n    }\r\n\r\n    export interface TpGetComponentFileResponse {\r\n        Exceptions: Exceptions;\r\n        FileContents: base64Binary;\r\n    }\r\n\r\n    export interface TpGetServicePluginsRequest {\r\n\r\n    }\r\n\r\n    export interface Plugin {\r\n        ShortName: string;\r\n        LongName: string;\r\n        FolderName: string;\r\n        WidgetName: string;\r\n    }\r\n\r\n    export interface Plugins {\r\n        Plugin: Plugin[];\r\n    }\r\n\r\n    export interface TpGetServicePluginsResponse {\r\n        Exceptions: Exceptions;\r\n        Plugins: {\r\n            Plugin: Plugin[];\r\n        };\r\n    }\r\n\r\n    export interface TpGroupQueryRequest {\r\n        Kind?: string;\r\n    }\r\n\r\n    export interface TpGroup {\r\n        Name: string;\r\n        Kind: string;\r\n        ReplicateOutputs: boolean;\r\n    }\r\n\r\n    export interface TpGroups {\r\n        TpGroup: TpGroup[];\r\n    }\r\n\r\n    export interface TpGroupQueryResponse {\r\n        Exceptions: Exceptions;\r\n        TpGroups: {\r\n            TpGroup: TpGroup[];\r\n        };\r\n    }\r\n\r\n    export interface TpListLogFilesRequest {\r\n        NetworkAddress?: string;\r\n        Path?: string;\r\n    }\r\n\r\n    export interface LogFileStruct {\r\n        Name: string;\r\n        Path: string;\r\n        Host: string;\r\n        IsDir: boolean;\r\n        FileSize: long;\r\n        Modifiedtime: string;\r\n    }\r\n\r\n    export interface Files {\r\n        LogFileStruct: LogFileStruct[];\r\n    }\r\n\r\n    export interface TpListLogFilesResponse {\r\n        Exceptions: Exceptions;\r\n        Files: {\r\n            LogFileStruct: LogFileStruct[];\r\n        };\r\n    }\r\n\r\n    export interface TpListTargetClustersRequest {\r\n\r\n    }\r\n\r\n    export interface TpClusterNameType {\r\n        Name: string;\r\n        Type: string;\r\n        IsDefault: boolean;\r\n    }\r\n\r\n    export interface TargetClusters {\r\n        TpClusterNameType: TpClusterNameType[];\r\n    }\r\n\r\n    export interface TpListTargetClustersResponse {\r\n        Exceptions: Exceptions;\r\n        TargetClusters: {\r\n            TpClusterNameType: TpClusterNameType[];\r\n        };\r\n    }\r\n\r\n    export interface TpLogFileRequest {\r\n        Name?: string;\r\n        Type?: string;\r\n        LastHours?: int;\r\n        StartDate?: string;\r\n        EndDate?: string;\r\n        FirstRows?: int;\r\n        LastRows?: int;\r\n        FilterType?: int;\r\n        Reversely?: boolean;\r\n        Zip?: boolean;\r\n        PageNumber?: int;\r\n        LoadData?: boolean;\r\n        IncludeLogFieldNames?: boolean;\r\n    }\r\n\r\n    export interface LogFieldNames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface TpLogFileResponse {\r\n        Exceptions: Exceptions;\r\n        Name: string;\r\n        Type: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        LastHours: int;\r\n        FirstRows: int;\r\n        LastRows: int;\r\n        Reversely: boolean;\r\n        Zip: boolean;\r\n        FilterType: int;\r\n        LogData: string;\r\n        HasDate: boolean;\r\n        FileSize: long;\r\n        PageFrom: long;\r\n        PageTo: long;\r\n        PageNumber: int;\r\n        PrevPage: int;\r\n        NextPage: int;\r\n        TotalPages: int;\r\n        AcceptLanguage: string;\r\n        LogFieldNames: {\r\n            Item: string[];\r\n        };\r\n    }\r\n\r\n    export interface TpLogicalClusterQueryRequest {\r\n        EclServerQueue?: string;\r\n        RoxieQueueFilter?: RoxieQueueFilter;\r\n    }\r\n\r\n    export interface TpLogicalCluster {\r\n        Name: string;\r\n        Queue: string;\r\n        LanguageVersion: string;\r\n        Process: string;\r\n        Type: string;\r\n        QueriesOnly: boolean;\r\n    }\r\n\r\n    export interface TpLogicalClusters {\r\n        TpLogicalCluster: TpLogicalCluster[];\r\n    }\r\n\r\n    export interface TpLogicalClusterQueryResponse {\r\n        Exceptions: Exceptions;\r\n        TpLogicalClusters: {\r\n            TpLogicalCluster: TpLogicalCluster[];\r\n        };\r\n    }\r\n\r\n    export interface TpMachineInfoRequest {\r\n        Name?: string;\r\n        NetAddress?: string;\r\n    }\r\n\r\n    export interface MachineInfo {\r\n        Name: string;\r\n        Netaddress: string;\r\n        ConfigNetaddress: string;\r\n        Domain: string;\r\n        Directory: string;\r\n        Type: string;\r\n        Available: string;\r\n        OS: int;\r\n        Path: string;\r\n        Port: int;\r\n        ProcessNumber: int;\r\n        Channels: unsignedInt;\r\n    }\r\n\r\n    export interface TpMachineInfoResponse {\r\n        Exceptions: Exceptions;\r\n        MachineInfo: {\r\n            Name: string;\r\n            Netaddress: string;\r\n            ConfigNetaddress: string;\r\n            Domain: string;\r\n            Directory: string;\r\n            Type: string;\r\n            Available: string;\r\n            OS: int;\r\n            Path: string;\r\n            Port: int;\r\n            ProcessNumber: int;\r\n            Channels: unsignedInt;\r\n        };\r\n    }\r\n\r\n    export interface TpMachineQueryRequest {\r\n        Type?: string;\r\n        Cluster?: string;\r\n        OldIP?: string;\r\n        Path?: string;\r\n        Directory?: string;\r\n        LogDirectory?: string;\r\n    }\r\n\r\n    export interface TpMachineQueryResponse {\r\n        Exceptions: Exceptions;\r\n        EnablePreflightInfo: boolean;\r\n        HasThorSpareProcess: boolean;\r\n        Type: string;\r\n        Cluster: string;\r\n        OldIP: string;\r\n        LogDirectory: string;\r\n        Path: string;\r\n        MemThreshold: int;\r\n        DiskThreshold: int;\r\n        CpuThreshold: int;\r\n        MemThresholdType: string;\r\n        DiskThresholdType: string;\r\n        PreflightProcessFilter: string;\r\n        EnableSNMP: boolean;\r\n        AcceptLanguage: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpServiceQueryRequest {\r\n        Type?: string;\r\n    }\r\n\r\n    export interface TpDali {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        BackupComputer: string;\r\n        BackupDirectory: string;\r\n        Type: string;\r\n        Path: string;\r\n        LogDirectory: string;\r\n        AuditLogDirectory: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpDalis {\r\n        TpDali: TpDali[];\r\n    }\r\n\r\n    export interface TpDfuServer {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Queue: string;\r\n        Type: string;\r\n        Path: string;\r\n        LogDirectory: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpDfuServers {\r\n        TpDfuServer: TpDfuServer[];\r\n    }\r\n\r\n    export interface TpDkcSlave {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Path: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpDkcSlaves {\r\n        TpDkcSlave: TpDkcSlave[];\r\n    }\r\n\r\n    export interface TpEclAgent {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Type: string;\r\n        Path: string;\r\n        DaliServer: string;\r\n        LogDir: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpEclAgents {\r\n        TpEclAgent: TpEclAgent[];\r\n    }\r\n\r\n    export interface TpEclServer {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        LogDirectory: string;\r\n        Type: string;\r\n        Path: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpEclServers {\r\n        TpEclServer: TpEclServer[];\r\n    }\r\n\r\n    export interface TpEclCCServers {\r\n        TpEclServer: TpEclServer[];\r\n    }\r\n\r\n    export interface TpEclScheduler {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        LogDirectory: string;\r\n        Type: string;\r\n        Path: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpEclSchedulers {\r\n        TpEclScheduler: TpEclScheduler[];\r\n    }\r\n\r\n    export interface TpBinding {\r\n        Name: string;\r\n        Service: string;\r\n        ServiceType: string;\r\n        BindingType: string;\r\n        ServiceBuildSet: string;\r\n        Port: string;\r\n        Protocol: string;\r\n    }\r\n\r\n    export interface TpBindings {\r\n        TpBinding: TpBinding[];\r\n    }\r\n\r\n    export interface TpEspServer {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Type: string;\r\n        Path: string;\r\n        LogDirectory: string;\r\n        TpMachines: TpMachines;\r\n        TpBindings: {\r\n            TpBinding: TpBinding[];\r\n        };\r\n    }\r\n\r\n    export interface TpEspServers {\r\n        TpEspServer: TpEspServer[];\r\n    }\r\n\r\n    export interface TpFTSlave {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Path: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpFTSlaves {\r\n        TpFTSlave: TpFTSlave[];\r\n    }\r\n\r\n    export interface TpGenesisServer {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Path: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpGenesisServers {\r\n        TpGenesisServer: TpGenesisServer[];\r\n    }\r\n\r\n    export interface TpLdapServer {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Path: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpLdapServers {\r\n        TpLdapServer: TpLdapServer[];\r\n    }\r\n\r\n    export interface TpMySqlServer {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Path: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpMySqlServers {\r\n        TpMySqlServer: TpMySqlServer[];\r\n    }\r\n\r\n    export interface TpSashaServer {\r\n        Name: string;\r\n        Description: string;\r\n        Build: string;\r\n        Path: string;\r\n        LogDirectory: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpSashaServers {\r\n        TpSashaServer: TpSashaServer[];\r\n    }\r\n\r\n    export interface TpSparkThor {\r\n        Name: string;\r\n        Build: string;\r\n        ThorClusterName: string;\r\n        ThorPath: string;\r\n        SparkExecutorCores: unsignedInt;\r\n        SparkExecutorMemory: long;\r\n        SparkMasterPort: unsignedInt;\r\n        SparkMasterWebUIPort: unsignedInt;\r\n        SparkWorkerCores: unsignedInt;\r\n        SparkWorkerMemory: long;\r\n        SparkWorkerPort: unsignedInt;\r\n        LogDirectory: string;\r\n        Path: string;\r\n        TpMachines: TpMachines;\r\n    }\r\n\r\n    export interface TpSparkThors {\r\n        TpSparkThor: TpSparkThor[];\r\n    }\r\n\r\n    export interface ServiceList {\r\n        TpDalis: {\r\n            TpDali: TpDali[];\r\n        };\r\n        TpDfuServers: {\r\n            TpDfuServer: TpDfuServer[];\r\n        };\r\n        TpDkcSlaves: {\r\n            TpDkcSlave: TpDkcSlave[];\r\n        };\r\n        TpDropZones: TpDropZones;\r\n        TpEclAgents: {\r\n            TpEclAgent: TpEclAgent[];\r\n        };\r\n        TpEclServers: {\r\n            TpEclServer: TpEclServer[];\r\n        };\r\n        TpEclCCServers: {\r\n            TpEclServer: TpEclServer[];\r\n        };\r\n        TpEclSchedulers: {\r\n            TpEclScheduler: TpEclScheduler[];\r\n        };\r\n        TpEspServers: {\r\n            TpEspServer: TpEspServer[];\r\n        };\r\n        TpFTSlaves: {\r\n            TpFTSlave: TpFTSlave[];\r\n        };\r\n        TpGenesisServers: {\r\n            TpGenesisServer: TpGenesisServer[];\r\n        };\r\n        TpLdapServers: {\r\n            TpLdapServer: TpLdapServer[];\r\n        };\r\n        TpMySqlServers: {\r\n            TpMySqlServer: TpMySqlServer[];\r\n        };\r\n        TpSashaServers: {\r\n            TpSashaServer: TpSashaServer[];\r\n        };\r\n        TpSparkThors: {\r\n            TpSparkThor: TpSparkThor[];\r\n        };\r\n    }\r\n\r\n    export interface TpServiceQueryResponse {\r\n        Exceptions: Exceptions;\r\n        MemThreshold: int;\r\n        DiskThreshold: int;\r\n        CpuThreshold: int;\r\n        EncapsulatedSystem: boolean;\r\n        EnableSNMP: boolean;\r\n        PreflightProcessFilter: string;\r\n        AcceptLanguage: string;\r\n        MemThresholdType: string;\r\n        DiskThresholdType: string;\r\n        ServiceList: {\r\n            TpDalis: {\r\n                TpDali: TpDali[];\r\n            };\r\n            TpDfuServers: {\r\n                TpDfuServer: TpDfuServer[];\r\n            };\r\n            TpDkcSlaves: {\r\n                TpDkcSlave: TpDkcSlave[];\r\n            };\r\n            TpDropZones: TpDropZones;\r\n            TpEclAgents: {\r\n                TpEclAgent: TpEclAgent[];\r\n            };\r\n            TpEclServers: {\r\n                TpEclServer: TpEclServer[];\r\n            };\r\n            TpEclCCServers: {\r\n                TpEclServer: TpEclServer[];\r\n            };\r\n            TpEclSchedulers: {\r\n                TpEclScheduler: TpEclScheduler[];\r\n            };\r\n            TpEspServers: {\r\n                TpEspServer: TpEspServer[];\r\n            };\r\n            TpFTSlaves: {\r\n                TpFTSlave: TpFTSlave[];\r\n            };\r\n            TpGenesisServers: {\r\n                TpGenesisServer: TpGenesisServer[];\r\n            };\r\n            TpLdapServers: {\r\n                TpLdapServer: TpLdapServer[];\r\n            };\r\n            TpMySqlServers: {\r\n                TpMySqlServer: TpMySqlServer[];\r\n            };\r\n            TpSashaServers: {\r\n                TpSashaServer: TpSashaServer[];\r\n            };\r\n            TpSparkThors: {\r\n                TpSparkThor: TpSparkThor[];\r\n            };\r\n        };\r\n    }\r\n\r\n    export interface TpSetMachineStatusRequest {\r\n        MachinePath?: string;\r\n        StatusValue?: string;\r\n    }\r\n\r\n    export interface TpSetMachineStatusResponse {\r\n        Exceptions: Exceptions;\r\n        TpSetMachineStatusResult: boolean;\r\n    }\r\n\r\n    export interface TpSwapNodeRequest {\r\n        Cluster?: string;\r\n        OldIP?: string;\r\n        NewIP?: string;\r\n    }\r\n\r\n    export interface TpSwapNodeResponse {\r\n        Exceptions: Exceptions;\r\n        TpSwapNodeResult: boolean;\r\n    }\r\n\r\n    export interface TpTargetClusterQueryRequest {\r\n        Type?: string;\r\n        Name?: string;\r\n        ShowDetails?: boolean;\r\n    }\r\n\r\n    export interface TpTargetCluster {\r\n        Name: string;\r\n        Prefix: string;\r\n        Type: string;\r\n        TpClusters: TpClusters;\r\n        TpEclCCServers: TpEclCCServers;\r\n        TpEclServers: TpEclServers;\r\n        TpEclAgents: TpEclAgents;\r\n        TpEclSchedulers: TpEclSchedulers;\r\n    }\r\n\r\n    export interface TpTargetClusters {\r\n        TpTargetCluster: TpTargetCluster[];\r\n    }\r\n\r\n    export interface TpTargetClusterQueryResponse {\r\n        Exceptions: Exceptions;\r\n        ShowDetails: boolean;\r\n        MemThreshold: int;\r\n        DiskThreshold: int;\r\n        CpuThreshold: int;\r\n        MemThresholdType: string;\r\n        DiskThresholdType: string;\r\n        PreflightProcessFilter: string;\r\n        AcceptLanguage: string;\r\n        TpTargetClusters: {\r\n            TpTargetCluster: TpTargetCluster[];\r\n        };\r\n    }\r\n\r\n    export interface TpThorStatusRequest {\r\n        Name?: string;\r\n    }\r\n\r\n    export interface TpThorStatusResponse {\r\n        Exceptions: Exceptions;\r\n        Name: string;\r\n        Queue: string;\r\n        Group: string;\r\n        ThorMasterIPAddress: string;\r\n        Port: int;\r\n        StartTime: string;\r\n        LogFile: string;\r\n        Wuid: string;\r\n        Graph: string;\r\n        SubGraph: int;\r\n        SubGraphDuration: int;\r\n        AutoRefresh: int;\r\n    }\r\n\r\n    export interface TpXMLFileRequest {\r\n        Name?: string;\r\n    }\r\n\r\n    export interface TpXMLFileResponse {\r\n        Exceptions: Exceptions;\r\n        thefile: base64Binary;\r\n    }\r\n\r\n}\r\n\r\nexport class TopologyServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WsTopology\", \"1.32\");\r\n    }\r\n\r\n    Ping(request: WsTopology.WsTopologyPingRequest): Promise<WsTopology.WsTopologyPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"WsTopologyPingResponse\");\r\n    }\r\n\r\n    SystemLog(request: WsTopology.SystemLogRequest): Promise<WsTopology.SystemLogResponse> {\r\n        return this._connection.send(\"SystemLog\", request, \"json\", false, undefined, \"SystemLogResponse\");\r\n    }\r\n\r\n    TpClusterInfo(request: WsTopology.TpClusterInfoRequest): Promise<WsTopology.TpClusterInfoResponse> {\r\n        return this._connection.send(\"TpClusterInfo\", request, \"json\", false, undefined, \"TpClusterInfoResponse\");\r\n    }\r\n\r\n    TpClusterQuery(request: WsTopology.TpClusterQueryRequest): Promise<WsTopology.TpClusterQueryResponse> {\r\n        return this._connection.send(\"TpClusterQuery\", request, \"json\", false, undefined, \"TpClusterQueryResponse\");\r\n    }\r\n\r\n    TpDropZoneQuery(request: WsTopology.TpDropZoneQueryRequest): Promise<WsTopology.TpDropZoneQueryResponse> {\r\n        return this._connection.send(\"TpDropZoneQuery\", request, \"json\", false, undefined, \"TpDropZoneQueryResponse\");\r\n    }\r\n\r\n    TpGetComponentFile(request: WsTopology.TpGetComponentFileRequest): Promise<WsTopology.TpGetComponentFileResponse> {\r\n        return this._connection.send(\"TpGetComponentFile\", request, \"json\", false, undefined, \"TpGetComponentFileResponse\");\r\n    }\r\n\r\n    TpGetServicePlugins(request: WsTopology.TpGetServicePluginsRequest): Promise<WsTopology.TpGetServicePluginsResponse> {\r\n        return this._connection.send(\"TpGetServicePlugins\", request, \"json\", false, undefined, \"TpGetServicePluginsResponse\");\r\n    }\r\n\r\n    TpGroupQuery(request: WsTopology.TpGroupQueryRequest): Promise<WsTopology.TpGroupQueryResponse> {\r\n        return this._connection.send(\"TpGroupQuery\", request, \"json\", false, undefined, \"TpGroupQueryResponse\");\r\n    }\r\n\r\n    TpListLogFiles(request: WsTopology.TpListLogFilesRequest): Promise<WsTopology.TpListLogFilesResponse> {\r\n        return this._connection.send(\"TpListLogFiles\", request, \"json\", false, undefined, \"TpListLogFilesResponse\");\r\n    }\r\n\r\n    TpListTargetClusters(request: WsTopology.TpListTargetClustersRequest): Promise<WsTopology.TpListTargetClustersResponse> {\r\n        return this._connection.send(\"TpListTargetClusters\", request, \"json\", false, undefined, \"TpListTargetClustersResponse\");\r\n    }\r\n\r\n    TpLogFile(request: WsTopology.TpLogFileRequest): Promise<WsTopology.TpLogFileResponse> {\r\n        return this._connection.send(\"TpLogFile\", request, \"json\", false, undefined, \"TpLogFileResponse\");\r\n    }\r\n\r\n    TpLogFileDisplay(request: WsTopology.TpLogFileRequest): Promise<WsTopology.TpLogFileResponse> {\r\n        return this._connection.send(\"TpLogFileDisplay\", request, \"json\", false, undefined, \"TpLogFileResponse\");\r\n    }\r\n\r\n    TpLogicalClusterQuery(request: WsTopology.TpLogicalClusterQueryRequest): Promise<WsTopology.TpLogicalClusterQueryResponse> {\r\n        return this._connection.send(\"TpLogicalClusterQuery\", request, \"json\", false, undefined, \"TpLogicalClusterQueryResponse\");\r\n    }\r\n\r\n    TpMachineInfo(request: WsTopology.TpMachineInfoRequest): Promise<WsTopology.TpMachineInfoResponse> {\r\n        return this._connection.send(\"TpMachineInfo\", request, \"json\", false, undefined, \"TpMachineInfoResponse\");\r\n    }\r\n\r\n    TpMachineQuery(request: WsTopology.TpMachineQueryRequest): Promise<WsTopology.TpMachineQueryResponse> {\r\n        return this._connection.send(\"TpMachineQuery\", request, \"json\", false, undefined, \"TpMachineQueryResponse\");\r\n    }\r\n\r\n    TpServiceQuery(request: WsTopology.TpServiceQueryRequest): Promise<WsTopology.TpServiceQueryResponse> {\r\n        return this._connection.send(\"TpServiceQuery\", request, \"json\", false, undefined, \"TpServiceQueryResponse\");\r\n    }\r\n\r\n    TpSetMachineStatus(request: WsTopology.TpSetMachineStatusRequest): Promise<WsTopology.TpSetMachineStatusResponse> {\r\n        return this._connection.send(\"TpSetMachineStatus\", request, \"json\", false, undefined, \"TpSetMachineStatusResponse\");\r\n    }\r\n\r\n    TpSwapNode(request: WsTopology.TpSwapNodeRequest): Promise<WsTopology.TpSwapNodeResponse> {\r\n        return this._connection.send(\"TpSwapNode\", request, \"json\", false, undefined, \"TpSwapNodeResponse\");\r\n    }\r\n\r\n    TpTargetClusterQuery(request: WsTopology.TpTargetClusterQueryRequest): Promise<WsTopology.TpTargetClusterQueryResponse> {\r\n        return this._connection.send(\"TpTargetClusterQuery\", request, \"json\", false, undefined, \"TpTargetClusterQueryResponse\");\r\n    }\r\n\r\n    TpThorStatus(request: WsTopology.TpThorStatusRequest): Promise<WsTopology.TpThorStatusResponse> {\r\n        return this._connection.send(\"TpThorStatus\", request, \"json\", false, undefined, \"TpThorStatusResponse\");\r\n    }\r\n\r\n    TpXMLFile(request: WsTopology.TpXMLFileRequest): Promise<WsTopology.TpXMLFileResponse> {\r\n        return this._connection.send(\"TpXMLFile\", request, \"json\", false, undefined, \"TpXMLFileResponse\");\r\n    }\r\n\r\n}\r\n","import { IOptions } from \"../connection\";\r\nimport { TopologyServiceBase, WsTopology } from \"./wsdl/WsTopology/v1.32/WsTopology\";\r\n\r\nexport {\r\n    WsTopology\r\n};\r\n\r\nexport class TopologyService extends TopologyServiceBase {\r\n\r\n    connectionOptions(): IOptions {\r\n        return this._connection.opts();\r\n    }\r\n\r\n    protocol(): string {\r\n        const parts = this._connection.opts().baseUrl.split(\"//\");\r\n        return parts[0];\r\n    }\r\n\r\n    ip(): string {\r\n        const parts = this._connection.opts().baseUrl.split(\"//\");\r\n        const parts2 = parts[1].split(\":\");\r\n        return parts2[0];\r\n    }\r\n\r\n    DefaultTpLogicalClusterQuery(request: WsTopology.TpLogicalClusterQueryRequest = {}): Promise<WsTopology.TpLogicalCluster> {\r\n        return this.TpLogicalClusterQuery(request).then((response) => {\r\n            if ((response as any).default) {\r\n                return (response as any).default;\r\n            }\r\n            let firstHThor;\r\n            let first;\r\n            response.TpLogicalClusters.TpLogicalCluster.some((item, idx) => {\r\n                if (idx === 0) {\r\n                    first = item;\r\n                }\r\n                if (item.Type === \"hthor\") {\r\n                    firstHThor = item;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            return firstHThor || first;\r\n        });\r\n    }\r\n}\r\n","import { IConnection, IOptions } from \"../../../../connection\";\r\nimport { Service } from \"../../../../espConnection\";\r\n\r\nexport namespace WsWorkunits {\r\n\r\n    export type int = number;\r\n    export type double = number;\r\n    export type long = number;\r\n    export type nonNegativeInteger = number;\r\n    export type unsignedInt = number;\r\n    export type base64Binary = string;\r\n    export type dateTime = string;\r\n    export type integer = number;\r\n    export type uint64 = number;\r\n\r\n    export enum ECLWUActions {\r\n        Abort = \"Abort\",\r\n        Delete = \"Delete\",\r\n        Deschedule = \"Deschedule\",\r\n        Reschedule = \"Reschedule\",\r\n        Pause = \"Pause\",\r\n        PauseNow = \"PauseNow\",\r\n        Protect = \"Protect\",\r\n        Unprotect = \"Unprotect\",\r\n        Restore = \"Restore\",\r\n        Resume = \"Resume\",\r\n        SetToFailed = \"SetToFailed\",\r\n        Archive = \"Archive\"\r\n    }\r\n\r\n    export enum LogSelectColumnMode {\r\n        MIN = 0,\r\n        DEFAULT = 1,\r\n        ALL = 2,\r\n        CUSTOM = 3\r\n    }\r\n\r\n    export enum SortDirection {\r\n        ASC = 0,\r\n        DSC = 1\r\n    }\r\n\r\n    export enum LogEventClass {\r\n        ALL = \"ALL\",\r\n        DIS = \"DIS\",\r\n        ERR = \"ERR\",\r\n        WRN = \"WRN\",\r\n        INF = \"INF\",\r\n        PRO = \"PRO\",\r\n        MET = \"MET\",\r\n        EVT = \"EVT\"\r\n    }\r\n\r\n    export enum WUDetailsAttrValueType {\r\n        Single = \"Single\",\r\n        List = \"List\",\r\n        Multi = \"Multi\"\r\n    }\r\n\r\n    export enum EclDefinitionActions {\r\n        SyntaxCheck = \"SyntaxCheck\",\r\n        Deploy = \"Deploy\",\r\n        Publish = \"Publish\"\r\n    }\r\n\r\n    export enum ErrorMessageFormat {\r\n        xml = \"xml\",\r\n        json = \"json\",\r\n        text = \"text\"\r\n    }\r\n\r\n    export enum LogAccessLogFormat {\r\n        XML = 0,\r\n        JSON = 1,\r\n        CSV = 2\r\n    }\r\n\r\n    export enum WUExceptionSeverity {\r\n        info = \"info\",\r\n        warning = \"warning\",\r\n        error = \"error\",\r\n        alert = \"alert\"\r\n    }\r\n\r\n    export enum WUQueryFilterSuspendedType {\r\n        Allqueries = \"All queries\",\r\n        Notsuspended = \"Not suspended\",\r\n        Suspended = \"Suspended\",\r\n        Suspendedbyuser = \"Suspended by user\",\r\n        Suspendedbyfirstnode = \"Suspended by first node\",\r\n        Suspendedbyanynode = \"Suspended by any node\"\r\n    }\r\n\r\n    export enum WUQuerySetFilterType {\r\n        All = \"All\",\r\n        Id = \"Id\",\r\n        Name = \"Name\",\r\n        Alias = \"Alias\",\r\n        Status = \"Status\"\r\n    }\r\n\r\n    export enum WUProtectFilter {\r\n        All = \"All\",\r\n        Protected = \"Protected\",\r\n        NotProtected = \"NotProtected\"\r\n    }\r\n\r\n    export enum QuerySetAliasActionTypes {\r\n        Deactivate = \"Deactivate\"\r\n    }\r\n\r\n    export enum QuerysetImportActivation {\r\n        None = \"None\",\r\n        ActivateImportedActive = \"ActivateImportedActive\"\r\n    }\r\n\r\n    export enum QuerySetQueryActionTypes {\r\n        Suspend = \"Suspend\",\r\n        Unsuspend = \"Unsuspend\",\r\n        ToggleSuspend = \"ToggleSuspend\",\r\n        Activate = \"Activate\",\r\n        Delete = \"Delete\",\r\n        DeleteQueriesAndWUs = \"DeleteQueriesAndWUs\",\r\n        RemoveAllAliases = \"RemoveAllAliases\",\r\n        ResetQueryStats = \"ResetQueryStats\"\r\n    }\r\n\r\n    export enum WUQueryActivationMode {\r\n        DoNotActivateQuery = 0,\r\n        ActivateQuery = 1,\r\n        ActivateQuerySuspendPrevious = 2,\r\n        ActivateQueryDeletePrevious = 3\r\n    }\r\n\r\n    export interface GVCAjaxGraph {\r\n        Name: string;\r\n        GraphName: string;\r\n        SubGraphId: int;\r\n        SubGraphOnly: boolean;\r\n    }\r\n\r\n    export interface GVCAjaxGraphResponse {\r\n        Name: string;\r\n        GraphName: string;\r\n        GraphType: string;\r\n        SubGraphId: int;\r\n        SubGraphOnly: boolean;\r\n    }\r\n\r\n    export interface Ping {\r\n\r\n    }\r\n\r\n    export interface WsWorkunitsPingResponse {\r\n\r\n    }\r\n\r\n    export interface Wuids {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface WUAbort {\r\n        Wuids: Wuids;\r\n        BlockTillFinishTimer: int;\r\n    }\r\n\r\n    export interface Exception {\r\n        Code: string;\r\n        Audience: string;\r\n        Source: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Exceptions {\r\n        Source: string;\r\n        Exception: Exception[];\r\n    }\r\n\r\n    export interface WUActionResult {\r\n        Wuid: string;\r\n        Action: string;\r\n        Result: string;\r\n    }\r\n\r\n    export interface ActionResults {\r\n        WUActionResult: WUActionResult[];\r\n    }\r\n\r\n    export interface WUAbortResponse {\r\n        Exceptions: Exceptions;\r\n        ActionResults: ActionResults;\r\n    }\r\n\r\n    export interface WUAction {\r\n        Wuids: Wuids;\r\n        WUActionType: ECLWUActions;\r\n        Cluster: string;\r\n        Owner: string;\r\n        State: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        ECL: string;\r\n        Jobname: string;\r\n        Test: string;\r\n        CurrentPage: string;\r\n        PageSize: string;\r\n        Sortby: string;\r\n        Descending: boolean;\r\n        EventServer: string;\r\n        EventName: string;\r\n        PageFrom: string;\r\n        BlockTillFinishTimer: int;\r\n    }\r\n\r\n    export interface WUActionResponse {\r\n        Exceptions: Exceptions;\r\n        ActionResults: ActionResults;\r\n    }\r\n\r\n    export interface WUAddLocalFileToWorkunit {\r\n        Wuid: string;\r\n        Name: string;\r\n        Val: string;\r\n        DefVal: string;\r\n        Type: int;\r\n        Length: int;\r\n    }\r\n\r\n    export interface WUAddLocalFileToWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        Name: string;\r\n        Result: string;\r\n    }\r\n\r\n    export interface PropertyOptions {\r\n        IncludeName: boolean;\r\n        IncludeRawValue: boolean;\r\n        IncludeFormatted: boolean;\r\n        IncludeMeasure: boolean;\r\n        IncludeCreator: boolean;\r\n        IncludeCreatorType: boolean;\r\n    }\r\n\r\n    export interface WUAnalyseHotspot {\r\n        Wuid: string;\r\n        RootScope: string;\r\n        OptOnlyActive: boolean;\r\n        OnlyCriticalPath: boolean;\r\n        IncludeProperties: boolean;\r\n        IncludeStatistics: boolean;\r\n        ThresholdPercent: double;\r\n        PropertyOptions: PropertyOptions;\r\n    }\r\n\r\n    export interface Property {\r\n        Name: string;\r\n        RawValue: string;\r\n        Formatted: string;\r\n        Measure: string;\r\n        Creator: string;\r\n        CreatorType: string;\r\n    }\r\n\r\n    export interface Properties {\r\n        Property: Property[];\r\n    }\r\n\r\n    export interface Note {\r\n        Source: string;\r\n        Message: string;\r\n        ErrorCode: nonNegativeInteger;\r\n        Severity: string;\r\n        Cost: nonNegativeInteger;\r\n    }\r\n\r\n    export interface Notes {\r\n        Note: Note[];\r\n    }\r\n\r\n    export interface Activity {\r\n        ScopeName: string;\r\n        Id: string;\r\n        ScopeType: string;\r\n        Properties: Properties;\r\n        Notes: Notes;\r\n        SinkActivity: string;\r\n    }\r\n\r\n    export interface Activities {\r\n        Activity: Activity[];\r\n    }\r\n\r\n    export interface Dependency {\r\n        ScopeName: string;\r\n        Id: string;\r\n        ScopeType: string;\r\n        Properties: Properties;\r\n        Notes: Notes;\r\n        SinkActivity: string;\r\n    }\r\n\r\n    export interface Dependencies {\r\n        Dependency: Dependency[];\r\n    }\r\n\r\n    export interface WUAnalyseHotspotResponse {\r\n        Exceptions: Exceptions;\r\n        RootScope: string;\r\n        RootTime: long;\r\n        Activities: Activities;\r\n        Dependencies: Dependencies;\r\n    }\r\n\r\n    export interface WUCDebug {\r\n        Wuid: string;\r\n        Command: string;\r\n    }\r\n\r\n    export interface WUDebugResponse {\r\n        Exceptions: Exceptions;\r\n        Result: string;\r\n    }\r\n\r\n    export interface WUCheckFeatures {\r\n        IncludeFullVersion: boolean;\r\n    }\r\n\r\n    export interface Deployment {\r\n        UseCompression: boolean;\r\n    }\r\n\r\n    export interface WUCheckFeaturesResponse {\r\n        Exceptions: Exceptions;\r\n        BuildVersionMajor: int;\r\n        BuildVersionMinor: int;\r\n        BuildVersionPoint: int;\r\n        maxRequestEntityLength: unsignedInt;\r\n        Deployment: Deployment;\r\n        BuildVersion: string;\r\n        BuildMaturity: string;\r\n        BuildTagTimestamp: string;\r\n    }\r\n\r\n    export interface WUClusterJobQueueLOG {\r\n        Cluster: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n    }\r\n\r\n    export interface WUClusterJobQueueLOGResponse {\r\n        Exceptions: Exceptions;\r\n        thefile: base64Binary;\r\n    }\r\n\r\n    export interface WUClusterJobQueueXLS {\r\n        Cluster: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        ShowType: string;\r\n    }\r\n\r\n    export interface WUClusterJobQueueXLSResponse {\r\n        Exceptions: Exceptions;\r\n        Result: base64Binary;\r\n    }\r\n\r\n    export interface WUClusterJobSummaryXLS {\r\n        Cluster: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        ShowAll: boolean;\r\n        BusinessStartTime: string;\r\n        BusinessEndTime: string;\r\n    }\r\n\r\n    export interface WUClusterJobSummaryXLSResponse {\r\n        Exceptions: Exceptions;\r\n        Result: base64Binary;\r\n    }\r\n\r\n    export interface WUClusterJobXLS {\r\n        Cluster: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        ShowAll: boolean;\r\n        BusinessStartTime: string;\r\n        BusinessEndTime: string;\r\n    }\r\n\r\n    export interface WUClusterJobXLSResponse {\r\n        Exceptions: Exceptions;\r\n        Result: base64Binary;\r\n    }\r\n\r\n    export interface WUCompileECL {\r\n        ECL: string;\r\n        ModuleName: string;\r\n        AttributeName: string;\r\n        Queue: string;\r\n        Cluster: string;\r\n        Snapshot: string;\r\n        IncludeDependencies: boolean;\r\n        IncludeComplexity: boolean;\r\n        TimeToWait: int;\r\n    }\r\n\r\n    export interface ECLException {\r\n        Severity: string;\r\n        Source: string;\r\n        Code: int;\r\n        Message: string;\r\n        Column: int;\r\n        LineNo: int;\r\n        FileName: string;\r\n        Activity: int;\r\n        Scope: string;\r\n        Priority: int;\r\n        Cost: double;\r\n    }\r\n\r\n    export interface Errors {\r\n        ECLException: ECLException[];\r\n    }\r\n\r\n    export interface ECLAttribute {\r\n        ModuleName: string;\r\n        AttributeName: string;\r\n        IsLocked: boolean;\r\n        IsCheckedOut: boolean;\r\n        IsSandbox: boolean;\r\n        IsOrphaned: boolean;\r\n    }\r\n\r\n    export interface Dependencies2 {\r\n        ECLAttribute: ECLAttribute[];\r\n    }\r\n\r\n    export interface WUCompileECLResponse {\r\n        Exceptions: Exceptions;\r\n        Complexity: string;\r\n        Errors: Errors;\r\n        Dependencies: Dependencies2;\r\n    }\r\n\r\n    export interface WUCopyLogicalFiles {\r\n        Wuid: string;\r\n        Cluster: string;\r\n        CopyLocal: boolean;\r\n    }\r\n\r\n    export interface Clusters {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface WULogicalFileCopyInfo {\r\n        IsIndex: boolean;\r\n        LogicalName: string;\r\n        DfuCopyWuid: string;\r\n        DfuCopyError: string;\r\n        Clusters: Clusters;\r\n    }\r\n\r\n    export interface OnCluster {\r\n        WULogicalFileCopyInfo: WULogicalFileCopyInfo[];\r\n    }\r\n\r\n    export interface NotOnCluster {\r\n        WULogicalFileCopyInfo: WULogicalFileCopyInfo[];\r\n    }\r\n\r\n    export interface Foreign {\r\n        WULogicalFileCopyInfo: WULogicalFileCopyInfo[];\r\n    }\r\n\r\n    export interface NotFound {\r\n        WULogicalFileCopyInfo: WULogicalFileCopyInfo[];\r\n    }\r\n\r\n    export interface Cluster {\r\n        ClusterName: string;\r\n        OnCluster: OnCluster;\r\n        NotOnCluster: NotOnCluster;\r\n        Foreign: Foreign;\r\n        NotFound: NotFound;\r\n    }\r\n\r\n    export interface ClusterFiles {\r\n        Cluster: Cluster[];\r\n    }\r\n\r\n    export interface WUCopyLogicalFilesResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        ClusterFiles: ClusterFiles;\r\n    }\r\n\r\n    export interface WUCopyQuerySet {\r\n        Source: string;\r\n        Target: string;\r\n        ActiveOnly: boolean;\r\n        CloneActiveState: boolean;\r\n        AllowForeignFiles: boolean;\r\n        DfsServer: string;\r\n        CopyFiles: boolean;\r\n        OverwriteDfs: boolean;\r\n        SourceProcess: string;\r\n        UpdateSuperFiles: boolean;\r\n        UpdateCloneFrom: boolean;\r\n        AppendCluster: boolean;\r\n        IncludeFileErrors: boolean;\r\n        SourceSSL: boolean;\r\n        DfuCopyFiles: boolean;\r\n        DfuQueue: string;\r\n        DfuWait: nonNegativeInteger;\r\n        DfuOverwrite: boolean;\r\n        OnlyCopyFiles: boolean;\r\n        StopIfFilesCopied: boolean;\r\n        DfuPublisherWuid: string;\r\n        RemoteStorage: string;\r\n    }\r\n\r\n    export interface CopiedQueries {\r\n        QueryId: string[];\r\n    }\r\n\r\n    export interface ExistingQueries {\r\n        QueryId: string[];\r\n    }\r\n\r\n    export interface File {\r\n        Error: string;\r\n        LogicalName: string;\r\n    }\r\n\r\n    export interface FileErrors {\r\n        File: File[];\r\n    }\r\n\r\n    export interface WUCopyQuerySetResponse {\r\n        Exceptions: Exceptions;\r\n        CopiedQueries: CopiedQueries;\r\n        ExistingQueries: ExistingQueries;\r\n        FileErrors: FileErrors;\r\n        DfuPublisherWuid: string;\r\n        DfuPublisherState: string;\r\n    }\r\n\r\n    export interface WUCreate {\r\n\r\n    }\r\n\r\n    export interface Query {\r\n        Text: string;\r\n        Cpp: string;\r\n        ResTxt: string;\r\n        Dll: string;\r\n        ThorLog: string;\r\n        QueryMainDefinition: string;\r\n    }\r\n\r\n    export interface ECLHelpFile {\r\n        Name: string;\r\n        Type: string;\r\n        IPAddress: string;\r\n        Description: string;\r\n        FileSize: long;\r\n        PID: unsignedInt;\r\n        minActivityId: unsignedInt;\r\n        maxActivityId: unsignedInt;\r\n        IsAvailable: boolean;\r\n    }\r\n\r\n    export interface Helpers {\r\n        ECLHelpFile: ECLHelpFile[];\r\n    }\r\n\r\n    export interface Exceptions2 {\r\n        ECLException: ECLException[];\r\n    }\r\n\r\n    export interface ECLGraph {\r\n        Name: string;\r\n        Label: string;\r\n        Type: string;\r\n        Running: boolean;\r\n        Complete: boolean;\r\n        Failed: boolean;\r\n        RunningId: long;\r\n        WhenStarted: string;\r\n        WhenFinished: string;\r\n    }\r\n\r\n    export interface Graphs {\r\n        ECLGraph: ECLGraph[];\r\n    }\r\n\r\n    export interface ECLSourceFiles {\r\n        ECLSourceFile: ECLSourceFile[];\r\n    }\r\n\r\n    export interface ECLSourceFile {\r\n        FileCluster: string;\r\n        Name: string;\r\n        IsSuperFile: boolean;\r\n        Subs: int;\r\n        Count: int;\r\n        ECLSourceFiles: ECLSourceFiles;\r\n    }\r\n\r\n    export interface SourceFiles {\r\n        ECLSourceFile: ECLSourceFile[];\r\n    }\r\n\r\n    export interface ECLSchemaItem {\r\n        ColumnName: string;\r\n        ColumnType: string;\r\n        ColumnTypeCode: int;\r\n        isConditional: boolean;\r\n    }\r\n\r\n    export interface ECLSchemas {\r\n        ECLSchemaItem: ECLSchemaItem[];\r\n    }\r\n\r\n    export interface ECLResult {\r\n        Name: string;\r\n        Sequence: int;\r\n        Value: string;\r\n        Link: string;\r\n        FileName: string;\r\n        IsSupplied: boolean;\r\n        ShowFileContent: boolean;\r\n        Total: long;\r\n        ECLSchemas: ECLSchemas;\r\n        XmlSchema: string;\r\n    }\r\n\r\n    export interface Results {\r\n        ECLResult: ECLResult[];\r\n    }\r\n\r\n    export interface Variables {\r\n        ECLResult: ECLResult[];\r\n    }\r\n\r\n    export interface ECLTimer {\r\n        Name: string;\r\n        Value: string;\r\n        count: int;\r\n        GraphName: string;\r\n        SubGraphId: int;\r\n        Timestamp: long;\r\n        When: string;\r\n    }\r\n\r\n    export interface Timers {\r\n        ECLTimer: ECLTimer[];\r\n    }\r\n\r\n    export interface DebugValue {\r\n        Name: string;\r\n        Value: string;\r\n    }\r\n\r\n    export interface DebugValues {\r\n        DebugValue: DebugValue[];\r\n    }\r\n\r\n    export interface ApplicationValue {\r\n        Application: string;\r\n        Name: string;\r\n        Value: string;\r\n    }\r\n\r\n    export interface ApplicationValues {\r\n        ApplicationValue: ApplicationValue[];\r\n    }\r\n\r\n    export interface ECLWorkflow {\r\n        WFID: string;\r\n        EventName: string;\r\n        EventText: string;\r\n        Count: int;\r\n        CountRemaining: int;\r\n    }\r\n\r\n    export interface Workflows {\r\n        ECLWorkflow: ECLWorkflow[];\r\n    }\r\n\r\n    export interface ECLTimingData {\r\n        Name: string;\r\n        GraphNum: int;\r\n        SubGraphNum: int;\r\n        GID: int;\r\n        Min: int;\r\n        MS: int;\r\n    }\r\n\r\n    export interface TimingData {\r\n        ECLTimingData: ECLTimingData[];\r\n    }\r\n\r\n    export interface AllowedClusters {\r\n        AllowedCluster: string[];\r\n    }\r\n\r\n    export interface ThorLogInfo {\r\n        ProcessName: string;\r\n        ClusterGroup: string;\r\n        LogDate: string;\r\n        NumberSlaves: int;\r\n    }\r\n\r\n    export interface ThorLogList {\r\n        ThorLogInfo: ThorLogInfo[];\r\n    }\r\n\r\n    export interface ResourceURLs {\r\n        URL: string[];\r\n    }\r\n\r\n    export interface ServiceNames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface ECLWUProcess {\r\n        Name: string;\r\n        Type: string;\r\n        PodName: string;\r\n        InstanceNumber: int;\r\n        Log: string;\r\n        PID: string;\r\n        Pattern: string;\r\n        Max: int;\r\n    }\r\n\r\n    export interface ECLWUProcessList {\r\n        ECLWUProcess: ECLWUProcess[];\r\n    }\r\n\r\n    export interface Workunit {\r\n        Wuid: string;\r\n        Owner: string;\r\n        Cluster: string;\r\n        RoxieCluster: string;\r\n        Jobname: string;\r\n        Queue: string;\r\n        StateID: int;\r\n        State: string;\r\n        StateEx: string;\r\n        Description: string;\r\n        Protected: boolean;\r\n        Active: boolean;\r\n        Action: int;\r\n        ActionEx: string;\r\n        DateTimeScheduled: dateTime;\r\n        PriorityClass: int;\r\n        PriorityLevel: int;\r\n        Scope: string;\r\n        Snapshot: string;\r\n        ResultLimit: int;\r\n        Archived: boolean;\r\n        IsPausing: boolean;\r\n        ThorLCR: boolean;\r\n        EventSchedule: int;\r\n        TotalClusterTime: string;\r\n        AbortBy: string;\r\n        AbortTime: string;\r\n        Query: Query;\r\n        Helpers: Helpers;\r\n        Exceptions: Exceptions2;\r\n        Graphs: Graphs;\r\n        SourceFiles: SourceFiles;\r\n        Results: Results;\r\n        Variables: Variables;\r\n        Timers: Timers;\r\n        DebugValues: DebugValues;\r\n        ApplicationValues: ApplicationValues;\r\n        Workflows: Workflows;\r\n        TimingData: TimingData;\r\n        AllowedClusters: AllowedClusters;\r\n        ErrorCount: int;\r\n        WarningCount: int;\r\n        InfoCount: int;\r\n        AlertCount: int;\r\n        GraphCount: int;\r\n        SourceFileCount: int;\r\n        ResultCount: int;\r\n        VariableCount: int;\r\n        TimerCount: int;\r\n        HasDebugValue: boolean;\r\n        ApplicationValueCount: int;\r\n        XmlParams: string;\r\n        AccessFlag: int;\r\n        ClusterFlag: int;\r\n        HelpersDesc: string;\r\n        GraphsDesc: string;\r\n        SourceFilesDesc: string;\r\n        ResultsDesc: string;\r\n        VariablesDesc: string;\r\n        TimersDesc: string;\r\n        DebugValuesDesc: string;\r\n        ApplicationValuesDesc: string;\r\n        WorkflowsDesc: string;\r\n        HasArchiveQuery: boolean;\r\n        ThorLogList: ThorLogList;\r\n        ResourceURLs: ResourceURLs;\r\n        ResultViewCount: int;\r\n        ResourceURLCount: int;\r\n        DebugValueCount: int;\r\n        WorkflowCount: int;\r\n        HelpersCount: int;\r\n        ServiceNames: ServiceNames;\r\n        ExecuteCost: double;\r\n        FileAccessCost: double;\r\n        CompileCost: double;\r\n        NoAccess: boolean;\r\n        ECLWUProcessList: ECLWUProcessList;\r\n    }\r\n\r\n    export interface WUCreateResponse {\r\n        Exceptions: Exceptions;\r\n        Workunit: Workunit;\r\n    }\r\n\r\n    export interface WUCreateAndUpdate {\r\n        Wuid: string;\r\n        State: int;\r\n        StateOrig: int;\r\n        Jobname: string;\r\n        JobnameOrig: string;\r\n        QueryText: string;\r\n        Action: int;\r\n        Description: string;\r\n        DescriptionOrig: string;\r\n        AddDrilldownFields: boolean;\r\n        ResultLimit: int;\r\n        Protected: boolean;\r\n        ProtectedOrig: boolean;\r\n        PriorityClass: int;\r\n        PriorityLevel: int;\r\n        Scope: string;\r\n        ScopeOrig: string;\r\n        ClusterSelection: string;\r\n        ClusterOrig: string;\r\n        XmlParams: string;\r\n        ThorSlaveIP: string;\r\n        QueryMainDefinition: string;\r\n        DebugValues: DebugValues;\r\n        ApplicationValues: ApplicationValues;\r\n    }\r\n\r\n    export interface WUUpdateResponse {\r\n        Exceptions: Exceptions;\r\n        Workunit: Workunit;\r\n    }\r\n\r\n    export interface AbsoluteTimeRange {\r\n        StartDate: dateTime;\r\n        EndDate: dateTime;\r\n    }\r\n\r\n    export interface CustomColumns {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface ComponentsFilter {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface LogFilter {\r\n        WildcardFilter: string;\r\n        AbsoluteTimeRange: AbsoluteTimeRange;\r\n        RelativeTimeRangeBuffer: unsignedInt;\r\n        LineLimit: unsignedInt;\r\n        LineStartFrom: long;\r\n        SelectColumnMode: LogSelectColumnMode;\r\n        CustomColumns: CustomColumns;\r\n        ComponentsFilter: ComponentsFilter;\r\n        Format: LogAccessLogFormat;\r\n        sortByTimeDirection: SortDirection;\r\n        LogEventType: LogEventClass;\r\n    }\r\n\r\n    export interface WUCreateZAPInfo {\r\n        Wuid: string;\r\n        ESPApplication: string;\r\n        ThorProcesses: string;\r\n        BuildVersion: string;\r\n        ProblemDescription: string;\r\n        WhatChanged: string;\r\n        WhereSlow: string;\r\n        ZAPFileName: string;\r\n        IncludeThorSlaveLog: string;\r\n        ZAPPassword: string;\r\n        SendEmail: boolean;\r\n        AttachZAPReportToEmail: boolean;\r\n        EmailFrom: string;\r\n        EmailSubject: string;\r\n        EmailBody: string;\r\n        LogFilter: LogFilter;\r\n        IncludeRelatedLogs: boolean;\r\n        IncludePerComponentLogs: boolean;\r\n    }\r\n\r\n    export interface WUCreateZAPInfoResponse {\r\n        Exceptions: Exceptions;\r\n        thefile: base64Binary;\r\n        ZAPFileName: string;\r\n    }\r\n\r\n    export interface WUDelete {\r\n        Wuids: Wuids;\r\n        BlockTillFinishTimer: int;\r\n    }\r\n\r\n    export interface WUDeleteResponse {\r\n        Exceptions: Exceptions;\r\n        ActionResults: ActionResults;\r\n    }\r\n\r\n    export interface NamedValue {\r\n        Name: string;\r\n        Value: string;\r\n    }\r\n\r\n    export interface DebugValues2 {\r\n        NamedValue: NamedValue[];\r\n    }\r\n\r\n    export interface WUDeployWorkunit {\r\n        Cluster: string;\r\n        Name: string;\r\n        Wait: int;\r\n        ObjType: string;\r\n        FileName: string;\r\n        Object: base64Binary;\r\n        ResultLimit: int;\r\n        QueryMainDefinition: string;\r\n        Snapshot: string;\r\n        DebugValues: DebugValues2;\r\n        Protect: boolean;\r\n    }\r\n\r\n    export interface WUDeployWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n        Workunit: Workunit;\r\n    }\r\n\r\n    export interface PropertyFilter {\r\n        Name: string;\r\n        ExactValue: string;\r\n        MinValue: string;\r\n        MaxValue: string;\r\n    }\r\n\r\n    export interface PropertyFilters {\r\n        PropertyFilter: PropertyFilter[];\r\n    }\r\n\r\n    export interface ScopeFilter {\r\n        MaxDepth: integer;\r\n        Scopes: string[];\r\n        Ids: string[];\r\n        ScopeTypes: string[];\r\n        PropertyFilters: PropertyFilters;\r\n    }\r\n\r\n    export interface NestedFilter {\r\n        Depth: unsignedInt;\r\n        ScopeTypes: string[];\r\n    }\r\n\r\n    export interface Extra {\r\n        scopeType: string;\r\n        Properties: string[];\r\n    }\r\n\r\n    export interface ExtraProperties {\r\n        Extra: Extra[];\r\n    }\r\n\r\n    export interface PropertiesToReturn {\r\n        AllStatistics: boolean;\r\n        AllAttributes: boolean;\r\n        AllHints: boolean;\r\n        AllScopes: boolean;\r\n        AllProperties: boolean;\r\n        AllNotes: boolean;\r\n        MinVersion: uint64;\r\n        Measure: string;\r\n        Properties: string[];\r\n        ExtraProperties: ExtraProperties;\r\n    }\r\n\r\n    export interface ScopeOptions {\r\n        IncludeMatchedScopesInResults: boolean;\r\n        IncludeScope: boolean;\r\n        IncludeId: boolean;\r\n        IncludeScopeType: boolean;\r\n    }\r\n\r\n    export interface WUDetails {\r\n        WUID: string;\r\n        ScopeFilter: ScopeFilter;\r\n        NestedFilter: NestedFilter;\r\n        PropertiesToReturn: PropertiesToReturn;\r\n        Filter: string;\r\n        ScopeOptions: ScopeOptions;\r\n        PropertyOptions: PropertyOptions;\r\n    }\r\n\r\n    export interface Scope {\r\n        ScopeName: string;\r\n        Id: string;\r\n        ScopeType: string;\r\n        Properties: Properties;\r\n        Notes: Notes;\r\n        SinkActivity: string;\r\n    }\r\n\r\n    export interface Scopes {\r\n        Scope: Scope[];\r\n    }\r\n\r\n    export interface WUDetailsResponse {\r\n        Exceptions: Exceptions;\r\n        MaxVersion: uint64;\r\n        WUID: string;\r\n        Scopes: Scopes;\r\n    }\r\n\r\n    export interface WUDetailsMeta {\r\n\r\n    }\r\n\r\n    export interface Property2 {\r\n        Name: string;\r\n        ValueType: WUDetailsAttrValueType;\r\n        Description: string;\r\n    }\r\n\r\n    export interface Properties2 {\r\n        Property: Property2[];\r\n    }\r\n\r\n    export interface ScopeTypes {\r\n        ScopeType: string[];\r\n    }\r\n\r\n    export interface Measures {\r\n        Measure: string[];\r\n    }\r\n\r\n    export interface Activity2 {\r\n        Kind: unsignedInt;\r\n        Name: string;\r\n        IsSink: boolean;\r\n        IsSource: boolean;\r\n    }\r\n\r\n    export interface Activities2 {\r\n        Activity: Activity2[];\r\n    }\r\n\r\n    export interface WUDetailsMetaResponse {\r\n        Exceptions: Exceptions;\r\n        Properties: Properties2;\r\n        ScopeTypes: ScopeTypes;\r\n        Measures: Measures;\r\n        Activities: Activities2;\r\n    }\r\n\r\n    export interface EclDefinitions {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface WUEclDefinitionAction {\r\n        EclDefinitions: EclDefinitions;\r\n        ActionType: EclDefinitionActions;\r\n        Target: string;\r\n        RemoteDali: string;\r\n        SourceProcess: string;\r\n        Priority: string;\r\n        Comment: string;\r\n        MemoryLimit: string;\r\n        DeletePrevious: boolean;\r\n        SuspendPrevious: boolean;\r\n        NoActivate: boolean;\r\n        NoReload: boolean;\r\n        DontCopyFiles: boolean;\r\n        AllowForeign: boolean;\r\n        UpdateDfs: boolean;\r\n        UpdateSuperfiles: boolean;\r\n        UpdateCloneFrom: boolean;\r\n        DontAppendCluster: boolean;\r\n        MsToWait: int;\r\n        TimeLimit: int;\r\n        WarnTimeLimit: int;\r\n        DfuCopyFiles: boolean;\r\n        DfuOverwrite: boolean;\r\n        DfuQueue: string;\r\n        OnlyCopyFiles: boolean;\r\n        StopIfFilesCopied: boolean;\r\n        DfuPublisherWuid: string;\r\n        RemoteStorage: string;\r\n    }\r\n\r\n    export interface WUEclDefinitionActionResult {\r\n        EclDefinition: string;\r\n        Action: string;\r\n        WUID: string;\r\n        QueryID: string;\r\n        Result: string;\r\n    }\r\n\r\n    export interface ActionResults2 {\r\n        WUEclDefinitionActionResult: WUEclDefinitionActionResult[];\r\n    }\r\n\r\n    export interface WUEclDefinitionActionResponse {\r\n        Exceptions: Exceptions;\r\n        ActionResults: ActionResults2;\r\n        DfuPublisherWuid: string;\r\n        DfuPublisherState: string;\r\n    }\r\n\r\n    export interface WUExport {\r\n        Cluster: string;\r\n        Owner: string;\r\n        State: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        Jobname: string;\r\n    }\r\n\r\n    export interface WUExportResponse {\r\n        Exceptions: Exceptions;\r\n        ExportData: base64Binary;\r\n    }\r\n\r\n    export interface LogColumns {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface WUFile {\r\n        Name: string;\r\n        Wuid: string;\r\n        Type: string;\r\n        Option: int;\r\n        SlaveIP: string;\r\n        IPAddress: string;\r\n        Description: string;\r\n        QuerySet: string;\r\n        Query: string;\r\n        Process: string;\r\n        ClusterGroup: string;\r\n        LogDate: string;\r\n        SlaveNumber: int;\r\n        SizeLimit: long;\r\n        ErrorMessageFormat: ErrorMessageFormat;\r\n        PlainText: string;\r\n        MaxLogRecords: unsignedInt;\r\n        LogSelectColumnMode: LogSelectColumnMode;\r\n        LogFormat: LogAccessLogFormat;\r\n        LogSearchTimeBuffSecs: unsignedInt;\r\n        LogColumns: LogColumns;\r\n    }\r\n\r\n    export interface WULogFileResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        QuerySet: string;\r\n        QueryName: string;\r\n        QueryId: string;\r\n        FileName: string;\r\n        DaliServer: string;\r\n        thefile: base64Binary;\r\n    }\r\n\r\n    export interface WUFullResult {\r\n        Wuid: string;\r\n        NoRootTag: boolean;\r\n        ExceptionSeverity: WUExceptionSeverity;\r\n    }\r\n\r\n    export interface WUFullResultResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        Results: string;\r\n    }\r\n\r\n    export interface WUGVCGraphInfo {\r\n        Wuid: string;\r\n        Name: string;\r\n        GID: string;\r\n        BatchWU: int;\r\n        SubgraphId: int;\r\n    }\r\n\r\n    export interface WUGVCGraphInfoResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        Name: string;\r\n        GID: string;\r\n        Running: boolean;\r\n        TheGraph: string;\r\n        BatchWU: int;\r\n    }\r\n\r\n    export interface WUGetArchiveFile {\r\n        WUID: string;\r\n        ModuleName: string;\r\n        FileName: string;\r\n        Path: string;\r\n    }\r\n\r\n    export interface WUGetArchiveFileResponse {\r\n        Exceptions: Exceptions;\r\n        File: string;\r\n        Message: string;\r\n    }\r\n\r\n    export interface WUGetDependancyTrees {\r\n        Cluster: string;\r\n        Queue: string;\r\n        Snapshot: string;\r\n        Items: string;\r\n        TimeoutMilliSec: string;\r\n    }\r\n\r\n    export interface WUGetDependancyTreesResponse {\r\n        Exceptions: Exceptions;\r\n        Errors: Errors;\r\n        DependancyTrees: base64Binary;\r\n    }\r\n\r\n    export interface WUGetGraph {\r\n        Wuid: string;\r\n        GraphName: string;\r\n        SubGraphId: string;\r\n    }\r\n\r\n    export interface ECLGraphEx {\r\n        Name: string;\r\n        Label: string;\r\n        Type: string;\r\n        Graph: string;\r\n        Running: boolean;\r\n        RunningId: long;\r\n        Complete: boolean;\r\n        Failed: boolean;\r\n    }\r\n\r\n    export interface Graphs2 {\r\n        ECLGraphEx: ECLGraphEx[];\r\n    }\r\n\r\n    export interface WUGetGraphResponse {\r\n        Exceptions: Exceptions;\r\n        Graphs: Graphs2;\r\n    }\r\n\r\n    export interface WUGetGraphNameAndTypes {\r\n        Wuid: string;\r\n        Type: string;\r\n    }\r\n\r\n    export interface GraphNameAndType {\r\n        Name: string;\r\n        Type: string;\r\n    }\r\n\r\n    export interface GraphNameAndTypes {\r\n        GraphNameAndType: GraphNameAndType[];\r\n    }\r\n\r\n    export interface WUGetGraphNameAndTypesResponse {\r\n        Exceptions: Exceptions;\r\n        GraphNameAndTypes: GraphNameAndTypes;\r\n    }\r\n\r\n    export interface WUGetNumFileToCopy {\r\n        ClusterName: string;\r\n        TargetName: string;\r\n        PageSize: long;\r\n        PageStartFrom: long;\r\n        Sortby: string;\r\n        Descending: boolean;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface Endpoint {\r\n        URL: string;\r\n        Status: string;\r\n        NumQueryFileToCopy: int;\r\n    }\r\n\r\n    export interface Endpoints {\r\n        Endpoint: Endpoint[];\r\n    }\r\n\r\n    export interface WUGetNumFileToCopyResponse {\r\n        Exceptions: Exceptions;\r\n        Endpoints: Endpoints;\r\n        CacheHint: long;\r\n        Total: long;\r\n    }\r\n\r\n    export interface WUGetPlugins {\r\n\r\n    }\r\n\r\n    export interface Plugins {\r\n        WUEclPluginsInFolder: WUEclPluginsInFolder[];\r\n    }\r\n\r\n    export interface WUEclPluginsInFolder {\r\n        Path: string;\r\n        Plugins: Plugins;\r\n    }\r\n\r\n    export interface WUGetPluginsResponse {\r\n        Exceptions: Exceptions;\r\n        Plugins: Plugins;\r\n    }\r\n\r\n    export interface WUGetStats {\r\n        WUID: string;\r\n        CreatorType: string;\r\n        Creator: string;\r\n        ScopeType: string;\r\n        Scope: string;\r\n        Kind: string;\r\n        Measure: string;\r\n        MinScopeDepth: unsignedInt;\r\n        MaxScopeDepth: unsignedInt;\r\n        IncludeGraphs: boolean;\r\n        CreateDescriptions: boolean;\r\n        MinValue: long;\r\n        MaxValue: long;\r\n        Filter: string;\r\n    }\r\n\r\n    export interface WUStatisticItem {\r\n        Creator: string;\r\n        CreatorType: string;\r\n        Scope: string;\r\n        ScopeType: string;\r\n        Description: string;\r\n        TimeStamp: string;\r\n        Measure: string;\r\n        Kind: string;\r\n        Value: string;\r\n        RawValue: long;\r\n        Count: long;\r\n        Max: long;\r\n        Wuid: string;\r\n    }\r\n\r\n    export interface Statistics {\r\n        WUStatisticItem: WUStatisticItem[];\r\n    }\r\n\r\n    export interface WUGetStatsResponse {\r\n        Exceptions: Exceptions;\r\n        WUID: string;\r\n        Statistics: Statistics;\r\n    }\r\n\r\n    export interface WUGetThorJobList {\r\n        Cluster: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        MaxJobsToReturn: unsignedInt;\r\n    }\r\n\r\n    export interface ECLJob {\r\n        Wuid: string;\r\n        Graph: string;\r\n        State: string;\r\n        StartedDate: string;\r\n        FinishedDate: string;\r\n        Cluster: string;\r\n        GraphNum: string;\r\n        SubGraphNum: string;\r\n        NumOfRuns: string;\r\n        Duration: int;\r\n    }\r\n\r\n    export interface JobList {\r\n        ECLJob: ECLJob[];\r\n    }\r\n\r\n    export interface InProgressJobList {\r\n        ECLJob: ECLJob[];\r\n    }\r\n\r\n    export interface WUGetThorJobListResponse {\r\n        Exceptions: Exceptions;\r\n        JobList: JobList;\r\n        InProgressJobList: InProgressJobList;\r\n        Warning: string;\r\n    }\r\n\r\n    export interface WUGetThorJobQueue {\r\n        Cluster: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        MaxJobQueueItemsToReturn: unsignedInt;\r\n    }\r\n\r\n    export interface ThorQueue {\r\n        DT: string;\r\n        RunningWUs: string;\r\n        QueuedWUs: string;\r\n        WaitingThors: string;\r\n        ConnectedThors: string;\r\n        IdledThors: string;\r\n        RunningWU1: string;\r\n        RunningWU2: string;\r\n    }\r\n\r\n    export interface QueueList {\r\n        ThorQueue: ThorQueue[];\r\n    }\r\n\r\n    export interface WUGetThorJobQueueResponse {\r\n        Exceptions: Exceptions;\r\n        LongestQueue: int;\r\n        MaxThorConnected: int;\r\n        QueueList: QueueList;\r\n        Warning: string;\r\n    }\r\n\r\n    export interface WUGetZAPInfo {\r\n        WUID: string;\r\n    }\r\n\r\n    export interface WUGetZAPInfoResponse {\r\n        Exceptions: Exceptions;\r\n        WUID: string;\r\n        ESPApplication: string;\r\n        ThorProcesses: string;\r\n        BuildVersion: string;\r\n        Archive: string;\r\n        EmailTo: string;\r\n        EmailFrom: string;\r\n        Message: string;\r\n        IsContainerized: boolean;\r\n    }\r\n\r\n    export interface WUGraphInfo {\r\n        Wuid: string;\r\n        Name: string;\r\n        GID: string;\r\n        BatchWU: int;\r\n    }\r\n\r\n    export interface WUGraphInfoResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        Name: string;\r\n        GID: string;\r\n        BatchWU: int;\r\n        Running: boolean;\r\n    }\r\n\r\n    export interface WUGraphTiming {\r\n        Wuid: string;\r\n    }\r\n\r\n    export interface WUGraphTimingResponse {\r\n        Exceptions: Exceptions;\r\n        Workunit: Workunit;\r\n    }\r\n\r\n    export interface WUInfo {\r\n        Wuid: string;\r\n        TruncateEclTo64k: boolean;\r\n        Type: string;\r\n        IncludeExceptions: boolean;\r\n        IncludeGraphs: boolean;\r\n        IncludeSourceFiles: boolean;\r\n        IncludeResults: boolean;\r\n        IncludeResultsViewNames: boolean;\r\n        IncludeVariables: boolean;\r\n        IncludeTimers: boolean;\r\n        IncludeDebugValues: boolean;\r\n        IncludeApplicationValues: boolean;\r\n        IncludeWorkflows: boolean;\r\n        IncludeXmlSchemas: boolean;\r\n        IncludeResourceURLs: boolean;\r\n        IncludeECL: boolean;\r\n        IncludeHelpers: boolean;\r\n        IncludeAllowedClusters: boolean;\r\n        IncludeTotalClusterTime: boolean;\r\n        IncludeServiceNames: boolean;\r\n        IncludeProcesses: boolean;\r\n        SuppressResultSchemas: boolean;\r\n        ThorSlaveIP: string;\r\n    }\r\n\r\n    export interface ResultViews {\r\n        View: string[];\r\n    }\r\n\r\n    export interface WUInfoResponse {\r\n        Exceptions: Exceptions;\r\n        Workunit: Workunit;\r\n        AutoRefresh: int;\r\n        CanCompile: boolean;\r\n        ThorSlaveIP: string;\r\n        ResultViews: ResultViews;\r\n        SecMethod: string;\r\n    }\r\n\r\n    export interface WUInfoDetails {\r\n        Wuid: string;\r\n        TruncateEclTo64k: boolean;\r\n        Type: string;\r\n        IncludeExceptions: boolean;\r\n        IncludeGraphs: boolean;\r\n        IncludeSourceFiles: boolean;\r\n        IncludeResults: boolean;\r\n        IncludeResultsViewNames: boolean;\r\n        IncludeVariables: boolean;\r\n        IncludeTimers: boolean;\r\n        IncludeDebugValues: boolean;\r\n        IncludeApplicationValues: boolean;\r\n        IncludeWorkflows: boolean;\r\n        IncludeXmlSchemas: boolean;\r\n        IncludeResourceURLs: boolean;\r\n        IncludeECL: boolean;\r\n        IncludeHelpers: boolean;\r\n        IncludeAllowedClusters: boolean;\r\n        IncludeTotalClusterTime: boolean;\r\n        IncludeServiceNames: boolean;\r\n        IncludeProcesses: boolean;\r\n        SuppressResultSchemas: boolean;\r\n        ThorSlaveIP: string;\r\n    }\r\n\r\n    export interface WUJobList {\r\n        Cluster: string;\r\n        Process: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        ShowAll: boolean;\r\n        BusinessStartHour: int;\r\n        BusinessEndHour: int;\r\n    }\r\n\r\n    export interface Jobs {\r\n        ECLJob: ECLJob[];\r\n    }\r\n\r\n    export interface WUJobListResponse {\r\n        Exceptions: Exceptions;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        Jobs: Jobs;\r\n    }\r\n\r\n    export interface WULightWeightQuery {\r\n        Wuid: string;\r\n        Type: string;\r\n        Cluster: string;\r\n        Owner: string;\r\n        JobName: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        BeforeWU: string;\r\n        AfterWU: string;\r\n        State: string;\r\n        ApplicationValues: ApplicationValues;\r\n        PageStartFrom: long;\r\n        PageSize: unsignedInt;\r\n        SortBy: string;\r\n        Descending: boolean;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface ECLWorkunitLW {\r\n        Wuid: string;\r\n        Owner: string;\r\n        JobName: string;\r\n        WuScope: string;\r\n        ClusterName: string;\r\n        State: int;\r\n        StateDesc: string;\r\n        Action: int;\r\n        ActionDesc: string;\r\n        Priority: int;\r\n        PriorityDesc: string;\r\n        PriorityLevel: int;\r\n        IsProtected: boolean;\r\n        DateTimeScheduled: dateTime;\r\n        TotalClusterTime: unsignedInt;\r\n        ApplicationValues: ApplicationValues;\r\n        NoAccess: boolean;\r\n    }\r\n\r\n    export interface Workunits {\r\n        ECLWorkunitLW: ECLWorkunitLW[];\r\n    }\r\n\r\n    export interface WULightWeightQueryResponse {\r\n        Exceptions: Exceptions;\r\n        NumWUs: int;\r\n        CacheHint: long;\r\n        Workunits: Workunits;\r\n    }\r\n\r\n    export interface WUListArchiveFiles {\r\n        WUID: string;\r\n    }\r\n\r\n    export interface ArchiveModules {\r\n        ArchiveModule: ArchiveModule[];\r\n    }\r\n\r\n    export interface File2 {\r\n        Name: string;\r\n        Key: string;\r\n        SourcePath: string;\r\n        Path: string;\r\n    }\r\n\r\n    export interface Files {\r\n        File: File2[];\r\n    }\r\n\r\n    export interface ArchiveModule {\r\n        Name: string;\r\n        FullName: string;\r\n        Flags: unsignedInt;\r\n        Key: string;\r\n        Plugin: string;\r\n        SourcePath: string;\r\n        Version: string;\r\n        Path: string;\r\n        ArchiveModules: ArchiveModules;\r\n        Files: Files;\r\n    }\r\n\r\n    export interface WUListArchiveFilesResponse {\r\n        Exceptions: Exceptions;\r\n        ArchiveModules: ArchiveModules;\r\n        Files: Files;\r\n        Message: string;\r\n    }\r\n\r\n    export interface WUListLocalFileRequired {\r\n        Wuid: string;\r\n    }\r\n\r\n    export interface LogicalFileUpload {\r\n        Type: int;\r\n        Source: string;\r\n        Destination: string;\r\n        EventTag: string;\r\n    }\r\n\r\n    export interface LocalFileUploads {\r\n        LogicalFileUpload: LogicalFileUpload[];\r\n    }\r\n\r\n    export interface WUListLocalFileRequiredResponse {\r\n        Exceptions: Exceptions;\r\n        LocalFileUploads: LocalFileUploads;\r\n    }\r\n\r\n    export interface WUListQueries {\r\n        QuerySetName: string;\r\n        ClusterName: string;\r\n        LibraryName: string;\r\n        MemoryLimitLow: long;\r\n        MemoryLimitHigh: long;\r\n        TimeLimitLow: nonNegativeInteger;\r\n        TimeLimitHigh: nonNegativeInteger;\r\n        WarnTimeLimitLow: nonNegativeInteger;\r\n        WarnTimeLimitHigh: nonNegativeInteger;\r\n        PriorityLow: nonNegativeInteger;\r\n        PriorityHigh: nonNegativeInteger;\r\n        Activated: boolean;\r\n        SuspendedFilter: WUQueryFilterSuspendedType;\r\n        WUID: string;\r\n        QueryID: string;\r\n        QueryName: string;\r\n        PublishedBy: string;\r\n        PageSize: nonNegativeInteger;\r\n        PageStartFrom: nonNegativeInteger;\r\n        Sortby: string;\r\n        Descending: boolean;\r\n        CacheHint: long;\r\n        FileName: string;\r\n        CheckAllNodes: boolean;\r\n    }\r\n\r\n    export interface ClusterQueryState {\r\n        Cluster: string;\r\n        State: string;\r\n        Errors: string;\r\n        MixedNodeStates: boolean;\r\n    }\r\n\r\n    export interface Clusters2 {\r\n        ClusterQueryState: ClusterQueryState[];\r\n    }\r\n\r\n    export interface QuerySetQuery {\r\n        Id: string;\r\n        Name: string;\r\n        Wuid: string;\r\n        Dll: string;\r\n        Suspended: boolean;\r\n        Clusters: Clusters2;\r\n        memoryLimit: string;\r\n        timeLimit: nonNegativeInteger;\r\n        warnTimeLimit: nonNegativeInteger;\r\n        priority: string;\r\n        Comment: string;\r\n        QuerySetId: string;\r\n        IsLibrary: boolean;\r\n        Activated: boolean;\r\n        PublishedBy: string;\r\n        snapshot: string;\r\n        PriorityID: int;\r\n    }\r\n\r\n    export interface QuerysetQueries {\r\n        QuerySetQuery: QuerySetQuery[];\r\n    }\r\n\r\n    export interface WUListQueriesResponse {\r\n        Exceptions: Exceptions;\r\n        NumberOfQueries: int;\r\n        CacheHint: long;\r\n        QuerysetQueries: QuerysetQueries;\r\n    }\r\n\r\n    export interface WUListQueriesUsingFile {\r\n        Target: string;\r\n        Process: string;\r\n        FileName: string;\r\n    }\r\n\r\n    export interface QueryUsingFile {\r\n        Id: string;\r\n        Package: string;\r\n    }\r\n\r\n    export interface Queries {\r\n        QueryUsingFile: QueryUsingFile[];\r\n    }\r\n\r\n    export interface TargetQueriesUsingFile {\r\n        Target: string;\r\n        PackageMap: string;\r\n        Queries: Queries;\r\n    }\r\n\r\n    export interface Targets {\r\n        TargetQueriesUsingFile: TargetQueriesUsingFile[];\r\n    }\r\n\r\n    export interface WUListQueriesUsingFileResponse {\r\n        Exceptions: Exceptions;\r\n        Process: string;\r\n        FileName: string;\r\n        Targets: Targets;\r\n    }\r\n\r\n    export interface WUMultiQuerysetDetails {\r\n        ClusterName: string;\r\n        QuerySetName: string;\r\n        Filter: string;\r\n        FilterType: WUQuerySetFilterType;\r\n        CheckAllNodes: boolean;\r\n    }\r\n\r\n    export interface Queries2 {\r\n        QuerySetQuery: QuerySetQuery[];\r\n    }\r\n\r\n    export interface QuerySetAlias {\r\n        Id: string;\r\n        Name: string;\r\n    }\r\n\r\n    export interface Aliases {\r\n        QuerySetAlias: QuerySetAlias[];\r\n    }\r\n\r\n    export interface WUQuerySetDetail {\r\n        QuerySetName: string;\r\n        Queries: Queries2;\r\n        Aliases: Aliases;\r\n    }\r\n\r\n    export interface Querysets {\r\n        WUQuerySetDetail: WUQuerySetDetail[];\r\n    }\r\n\r\n    export interface WUMultiQuerySetDetailsResponse {\r\n        Exceptions: Exceptions;\r\n        ClusterName: string;\r\n        Querysets: Querysets;\r\n    }\r\n\r\n    export interface WUProcessGraph {\r\n        Wuid: string;\r\n        Name: string;\r\n    }\r\n\r\n    export interface WUProcessGraphResponse {\r\n        Exceptions: Exceptions;\r\n        theGraph: string;\r\n    }\r\n\r\n    export interface WUProtect {\r\n        Wuids: Wuids;\r\n        Protect: boolean;\r\n    }\r\n\r\n    export interface WUProtectResponse {\r\n        Exceptions: Exceptions;\r\n        ActionResults: ActionResults;\r\n    }\r\n\r\n    export interface WUPublishWorkunit {\r\n        Wuid: string;\r\n        Cluster: string;\r\n        QueryName: string;\r\n        WorkUnitJobName: string;\r\n        JobName: string;\r\n        Activate: int;\r\n        NotifyCluster: boolean;\r\n        Wait: int;\r\n        NoReload: boolean;\r\n        UpdateWorkUnitName: boolean;\r\n        memoryLimit: string;\r\n        TimeLimit: nonNegativeInteger;\r\n        WarnTimeLimit: nonNegativeInteger;\r\n        Priority: string;\r\n        RemoteDali: string;\r\n        Comment: string;\r\n        DontCopyFiles: boolean;\r\n        SourceProcess: string;\r\n        AllowForeignFiles: boolean;\r\n        UpdateDfs: boolean;\r\n        UpdateSuperFiles: boolean;\r\n        UpdateCloneFrom: boolean;\r\n        AppendCluster: boolean;\r\n        IncludeFileErrors: boolean;\r\n        DfuCopyFiles: boolean;\r\n        DfuQueue: string;\r\n        DfuWait: nonNegativeInteger;\r\n        DfuOverwrite: boolean;\r\n        OnlyCopyFiles: boolean;\r\n        StopIfFilesCopied: boolean;\r\n        DfuPublisherWuid: string;\r\n        RemoteStorage: string;\r\n    }\r\n\r\n    export interface WUPublishWorkunitResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        Result: string;\r\n        QuerySet: string;\r\n        QueryName: string;\r\n        QueryId: string;\r\n        ReloadFailed: boolean;\r\n        Suspended: boolean;\r\n        ErrorMessage: string;\r\n        ClusterFiles: ClusterFiles;\r\n        FileErrors: FileErrors;\r\n        DfuPublisherWuid: string;\r\n        DfuPublisherState: string;\r\n    }\r\n\r\n    export interface WUPushEvent {\r\n        EventName: string;\r\n        EventText: string;\r\n    }\r\n\r\n    export interface WUPushEventResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface WUQuery {\r\n        Wuid: string;\r\n        Type: string;\r\n        Cluster: string;\r\n        RoxieCluster: string;\r\n        Owner: string;\r\n        State: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        ECL: string;\r\n        Jobname: string;\r\n        LogicalFile: string;\r\n        LogicalFileSearchType: string;\r\n        ApplicationValues: ApplicationValues;\r\n        BeforeWU: string;\r\n        AfterWU: string;\r\n        TotalClusterTimeThresholdMilliSec: unsignedInt;\r\n        Count: int;\r\n        PageSize: long;\r\n        PageStartFrom: long;\r\n        PageEndAt: long;\r\n        Protected: WUProtectFilter;\r\n        Sortby: string;\r\n        Descending: boolean;\r\n        CacheHint: long;\r\n    }\r\n\r\n    export interface ECLWorkunit {\r\n        Wuid: string;\r\n        Owner: string;\r\n        Cluster: string;\r\n        RoxieCluster: string;\r\n        Jobname: string;\r\n        Queue: string;\r\n        StateID: int;\r\n        State: string;\r\n        StateEx: string;\r\n        Description: string;\r\n        Protected: boolean;\r\n        Active: boolean;\r\n        Action: int;\r\n        ActionEx: string;\r\n        DateTimeScheduled: dateTime;\r\n        PriorityClass: int;\r\n        PriorityLevel: int;\r\n        Scope: string;\r\n        Snapshot: string;\r\n        ResultLimit: int;\r\n        Archived: boolean;\r\n        IsPausing: boolean;\r\n        ThorLCR: boolean;\r\n        EventSchedule: int;\r\n        TotalClusterTime: string;\r\n        AbortBy: string;\r\n        AbortTime: string;\r\n        Query: Query;\r\n        Helpers: Helpers;\r\n        Exceptions: Exceptions2;\r\n        Graphs: Graphs;\r\n        SourceFiles: SourceFiles;\r\n        Results: Results;\r\n        Variables: Variables;\r\n        Timers: Timers;\r\n        DebugValues: DebugValues;\r\n        ApplicationValues: ApplicationValues;\r\n        Workflows: Workflows;\r\n        TimingData: TimingData;\r\n        AllowedClusters: AllowedClusters;\r\n        ErrorCount: int;\r\n        WarningCount: int;\r\n        InfoCount: int;\r\n        AlertCount: int;\r\n        GraphCount: int;\r\n        SourceFileCount: int;\r\n        ResultCount: int;\r\n        VariableCount: int;\r\n        TimerCount: int;\r\n        HasDebugValue: boolean;\r\n        ApplicationValueCount: int;\r\n        XmlParams: string;\r\n        AccessFlag: int;\r\n        ClusterFlag: int;\r\n        HelpersDesc: string;\r\n        GraphsDesc: string;\r\n        SourceFilesDesc: string;\r\n        ResultsDesc: string;\r\n        VariablesDesc: string;\r\n        TimersDesc: string;\r\n        DebugValuesDesc: string;\r\n        ApplicationValuesDesc: string;\r\n        WorkflowsDesc: string;\r\n        HasArchiveQuery: boolean;\r\n        ThorLogList: ThorLogList;\r\n        ResourceURLs: ResourceURLs;\r\n        ResultViewCount: int;\r\n        ResourceURLCount: int;\r\n        DebugValueCount: int;\r\n        WorkflowCount: int;\r\n        HelpersCount: int;\r\n        ServiceNames: ServiceNames;\r\n        ExecuteCost: double;\r\n        FileAccessCost: double;\r\n        CompileCost: double;\r\n        NoAccess: boolean;\r\n        ECLWUProcessList: ECLWUProcessList;\r\n    }\r\n\r\n    export interface Workunits2 {\r\n        ECLWorkunit: ECLWorkunit[];\r\n    }\r\n\r\n    export interface WUQueryResponse {\r\n        Exceptions: Exceptions;\r\n        Type: string;\r\n        Cluster: string;\r\n        RoxieCluster: string;\r\n        Owner: string;\r\n        State: string;\r\n        StartDate: string;\r\n        EndDate: string;\r\n        ECL: string;\r\n        Jobname: string;\r\n        LogicalFile: string;\r\n        LogicalFileSearchType: string;\r\n        Current: string;\r\n        Next: string;\r\n        Count: int;\r\n        PageSize: long;\r\n        PrevPage: long;\r\n        NextPage: long;\r\n        LastPage: long;\r\n        NumWUs: int;\r\n        First: boolean;\r\n        PageStartFrom: long;\r\n        PageEndAt: long;\r\n        Sortby: string;\r\n        Descending: boolean;\r\n        BasicQuery: string;\r\n        Filters: string;\r\n        CacheHint: long;\r\n        Workunits: Workunits2;\r\n    }\r\n\r\n    export interface WUQueryConfig {\r\n        Target: string;\r\n        QueryId: string;\r\n        Wait: int;\r\n        NoReload: boolean;\r\n        memoryLimit: string;\r\n        TimeLimit: nonNegativeInteger;\r\n        WarnTimeLimit: nonNegativeInteger;\r\n        Priority: string;\r\n        Comment: string;\r\n    }\r\n\r\n    export interface Result {\r\n        QueryId: string;\r\n    }\r\n\r\n    export interface Results2 {\r\n        Result: Result[];\r\n    }\r\n\r\n    export interface WUQueryConfigResponse {\r\n        Exceptions: Exceptions;\r\n        ReloadFailed: boolean;\r\n        Results: Results2;\r\n    }\r\n\r\n    export interface WUQueryDetails {\r\n        QueryId: string;\r\n        QuerySet: string;\r\n        IncludeStateOnClusters: boolean;\r\n        IncludeSuperFiles: boolean;\r\n        IncludeWsEclAddresses: boolean;\r\n        CheckAllNodes: boolean;\r\n        IncludeWUDetails: boolean;\r\n        IncludeWUQueryFiles: boolean;\r\n    }\r\n\r\n    export interface LogicalFiles {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface SubFiles {\r\n        File: string[];\r\n    }\r\n\r\n    export interface SuperFiles {\r\n        SuperFile: SuperFile[];\r\n    }\r\n\r\n    export interface SuperFile {\r\n        Name: string;\r\n        SubFiles: SubFiles;\r\n        SuperFiles: SuperFiles;\r\n    }\r\n\r\n    export interface LibrariesUsed {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface WsEclAddresses {\r\n        Address: string[];\r\n    }\r\n\r\n    export interface WUGraphs {\r\n        ECLGraph: ECLGraph[];\r\n    }\r\n\r\n    export interface WUTimers {\r\n        ECLTimer: ECLTimer[];\r\n    }\r\n\r\n    export interface WUQueryDetailsResponse {\r\n        Exceptions: Exceptions;\r\n        QueryId: string;\r\n        QuerySet: string;\r\n        QueryName: string;\r\n        Wuid: string;\r\n        Dll: string;\r\n        Suspended: boolean;\r\n        Activated: boolean;\r\n        SuspendedBy: string;\r\n        Clusters: Clusters2;\r\n        PublishedBy: string;\r\n        Comment: string;\r\n        LogicalFiles: LogicalFiles;\r\n        SuperFiles: SuperFiles;\r\n        IsLibrary: boolean;\r\n        Priority: string;\r\n        PriorityID: int;\r\n        WUSnapShot: string;\r\n        CompileTime: string;\r\n        LibrariesUsed: LibrariesUsed;\r\n        CountGraphs: int;\r\n        ResourceURLCount: int;\r\n        WsEclAddresses: WsEclAddresses;\r\n        WUGraphs: WUGraphs;\r\n        WUTimers: WUTimers;\r\n    }\r\n\r\n    export interface WUQueryDetailsLightWeight {\r\n        QueryId: string;\r\n        QuerySet: string;\r\n        IncludeWUDetails: boolean;\r\n        IncludeWUQueryFiles: boolean;\r\n        IncludeSuperFiles: boolean;\r\n        IncludeWsEclAddresses: boolean;\r\n        IncludeStateOnClusters: boolean;\r\n        CheckAllNodes: boolean;\r\n    }\r\n\r\n    export interface WUQueryFiles {\r\n        Target: string;\r\n        QueryId: string;\r\n    }\r\n\r\n    export interface File3 {\r\n        FileName: string;\r\n        FileSize: long;\r\n        NumberOfParts: unsignedInt;\r\n    }\r\n\r\n    export interface Files2 {\r\n        File: File3[];\r\n    }\r\n\r\n    export interface Query2 {\r\n        QueryId: string;\r\n        Files: Files2;\r\n        SuperFiles: SuperFiles;\r\n    }\r\n\r\n    export interface Queries3 {\r\n        Query: Query2[];\r\n    }\r\n\r\n    export interface WUQueryFilesResponse {\r\n        Exceptions: Exceptions;\r\n        Files: Files2;\r\n        SuperFiles: SuperFiles;\r\n        Queries: Queries3;\r\n    }\r\n\r\n    export interface WUQueryGetGraph {\r\n        Target: string;\r\n        QueryId: string;\r\n        GraphName: string;\r\n        SubGraphId: string;\r\n    }\r\n\r\n    export interface WUQueryGetGraphResponse {\r\n        Exceptions: Exceptions;\r\n        Graphs: Graphs2;\r\n    }\r\n\r\n    export interface WUQueryGetSummaryStats {\r\n        Target: string;\r\n        QueryId: string;\r\n        FromTime: string;\r\n        ToTime: string;\r\n        IncludeRawStats: boolean;\r\n    }\r\n\r\n    export interface QuerySummaryStats {\r\n        Endpoint: string;\r\n        Status: string;\r\n        StartTime: string;\r\n        EndTime: string;\r\n        CountTotal: int;\r\n        CountFailed: int;\r\n        AverageSlavesReplyLen: int;\r\n        AverageBytesOut: long;\r\n        SizeAvgPeakMemory: long;\r\n        TimeAvgTotalExecuteMinutes: long;\r\n        TimeMinTotalExecuteMinutes: long;\r\n        TimeMaxTotalExecuteMinutes: long;\r\n        Percentile97: long;\r\n        Percentile97Estimate: boolean;\r\n    }\r\n\r\n    export interface StatsList {\r\n        QuerySummaryStats: QuerySummaryStats[];\r\n    }\r\n\r\n    export interface AggregateQueryStatsList {\r\n        QuerySummaryStats: QuerySummaryStats[];\r\n    }\r\n\r\n    export interface QueryStatsRecord {\r\n        StartTime: string;\r\n        ElapsedTimeMs: long;\r\n        MemoryUsed: long;\r\n        BytesOut: long;\r\n        SlavesReplyLen: int;\r\n        Failed: boolean;\r\n    }\r\n\r\n    export interface QueryStatsRecordList {\r\n        QueryStatsRecord: QueryStatsRecord[];\r\n    }\r\n\r\n    export interface QueryStats {\r\n        ID: string;\r\n        AggregateQueryStatsList: AggregateQueryStatsList;\r\n        QueryStatsRecordList: QueryStatsRecordList;\r\n    }\r\n\r\n    export interface QueryStatsList {\r\n        EndpointQueryStats: EndpointQueryStats[];\r\n    }\r\n\r\n    export interface EndpointQueryStats {\r\n        Endpoint: string;\r\n        Status: string;\r\n        QueryStatsList: QueryStatsList;\r\n    }\r\n\r\n    export interface WUQueryGetSummaryStatsResponse {\r\n        Exceptions: Exceptions;\r\n        StatsList: StatsList;\r\n        QueryStatsList: QueryStatsList;\r\n    }\r\n\r\n    export interface Alias {\r\n        Name: string;\r\n    }\r\n\r\n    export interface Aliases2 {\r\n        Alias: Alias[];\r\n    }\r\n\r\n    export interface WUQuerysetAliasAction {\r\n        Action: QuerySetAliasActionTypes;\r\n        QuerySetName: string;\r\n        Aliases: Aliases2;\r\n    }\r\n\r\n    export interface Result2 {\r\n        Name: string;\r\n        Success: boolean;\r\n        Code: int;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Results3 {\r\n        Result: Result2[];\r\n    }\r\n\r\n    export interface WUQuerySetAliasActionResponse {\r\n        Exceptions: Exceptions;\r\n        Action: QuerySetAliasActionTypes;\r\n        QuerySetName: string;\r\n        Results: Results3;\r\n    }\r\n\r\n    export interface WUQuerysetCopyQuery {\r\n        Source: string;\r\n        Target: string;\r\n        Cluster: string;\r\n        DaliServer: string;\r\n        Activate: int;\r\n        Overwrite: boolean;\r\n        DontCopyFiles: boolean;\r\n        Wait: int;\r\n        NoReload: boolean;\r\n        memoryLimit: string;\r\n        TimeLimit: nonNegativeInteger;\r\n        WarnTimeLimit: nonNegativeInteger;\r\n        priority: string;\r\n        Comment: string;\r\n        SourceProcess: string;\r\n        DestName: string;\r\n        AllowForeignFiles: boolean;\r\n        UpdateSuperFiles: boolean;\r\n        UpdateCloneFrom: boolean;\r\n        AppendCluster: boolean;\r\n        IncludeFileErrors: boolean;\r\n        SourceSSL: boolean;\r\n        DfuCopyFiles: boolean;\r\n        DfuQueue: string;\r\n        DfuWait: nonNegativeInteger;\r\n        DfuOverwrite: boolean;\r\n        OnlyCopyFiles: boolean;\r\n        StopIfFilesCopied: boolean;\r\n        DfuPublisherWuid: string;\r\n        RemoteStorage: string;\r\n    }\r\n\r\n    export interface WUQuerySetCopyQueryResponse {\r\n        Exceptions: Exceptions;\r\n        QueryId: string;\r\n        FileErrors: FileErrors;\r\n        DfuPublisherWuid: string;\r\n        DfuPublisherState: string;\r\n    }\r\n\r\n    export interface WUQuerysetDetails {\r\n        QuerySetName: string;\r\n        Filter: string;\r\n        ClusterName: string;\r\n        FilterType: WUQuerySetFilterType;\r\n        CheckAllNodes: boolean;\r\n    }\r\n\r\n    export interface QuerysetAliases {\r\n        QuerySetAlias: QuerySetAlias[];\r\n    }\r\n\r\n    export interface ClusterNames {\r\n        Item: string[];\r\n    }\r\n\r\n    export interface WUQuerySetDetailsResponse {\r\n        Exceptions: Exceptions;\r\n        QuerySetName: string;\r\n        QuerysetQueries: QuerysetQueries;\r\n        QuerysetAliases: QuerysetAliases;\r\n        ClusterName: string;\r\n        Filter: string;\r\n        FilterType: WUQuerySetFilterType;\r\n        ClusterNames: ClusterNames;\r\n    }\r\n\r\n    export interface WUQuerysetExport {\r\n        Target: string;\r\n        Compress: boolean;\r\n        ActiveOnly: boolean;\r\n        Protect: boolean;\r\n    }\r\n\r\n    export interface WUQuerysetExportResponse {\r\n        Exceptions: Exceptions;\r\n        Target: string;\r\n        Compressed: boolean;\r\n        Data: base64Binary;\r\n    }\r\n\r\n    export interface WUQuerysetImport {\r\n        Target: string;\r\n        QueryMask: string;\r\n        Replace: boolean;\r\n        ActiveOnly: boolean;\r\n        Activation: QuerysetImportActivation;\r\n        Compressed: boolean;\r\n        Data: base64Binary;\r\n        AllowForeignFiles: boolean;\r\n        DfsServer: string;\r\n        CopyFiles: boolean;\r\n        OverwriteDfs: boolean;\r\n        SourceProcess: string;\r\n        UpdateSuperFiles: boolean;\r\n        UpdateCloneFrom: boolean;\r\n        AppendCluster: boolean;\r\n        IncludeFileErrors: boolean;\r\n        DfuCopyFiles: boolean;\r\n        DfuQueue: string;\r\n        DfuWait: nonNegativeInteger;\r\n        DfuOverwrite: boolean;\r\n        OnlyCopyFiles: boolean;\r\n        StopIfFilesCopied: boolean;\r\n        DfuPublisherWuid: string;\r\n        RemoteStorage: string;\r\n    }\r\n\r\n    export interface ImportedQueries {\r\n        QueryId: string[];\r\n    }\r\n\r\n    export interface MissingWuids {\r\n        QueryId: string[];\r\n    }\r\n\r\n    export interface WUQuerysetImportResponse {\r\n        Exceptions: Exceptions;\r\n        Target: string;\r\n        ClearedExisting: boolean;\r\n        Success: boolean;\r\n        ImportedQueries: ImportedQueries;\r\n        ExistingQueries: ExistingQueries;\r\n        MissingWuids: MissingWuids;\r\n        FileErrors: FileErrors;\r\n        DfuPublisherWuid: string;\r\n        DfuPublisherState: string;\r\n    }\r\n\r\n    export interface ClientState {\r\n        Suspended: string;\r\n    }\r\n\r\n    export interface Query3 {\r\n        QueryId: string;\r\n        Activated: boolean;\r\n        SuspendedByUser: boolean;\r\n        ClientState: ClientState;\r\n    }\r\n\r\n    export interface Queries4 {\r\n        Query: Query3[];\r\n    }\r\n\r\n    export interface WUQuerysetQueryAction {\r\n        Action: QuerySetQueryActionTypes;\r\n        QuerySetName: string;\r\n        Queries: Queries4;\r\n    }\r\n\r\n    export interface Result3 {\r\n        QueryId: string;\r\n        WUID: string;\r\n        Suspended: boolean;\r\n        Success: boolean;\r\n        Code: int;\r\n        Message: string;\r\n    }\r\n\r\n    export interface Results4 {\r\n        Result: Result3[];\r\n    }\r\n\r\n    export interface WUQuerySetQueryActionResponse {\r\n        Exceptions: Exceptions;\r\n        Action: QuerySetQueryActionTypes;\r\n        QuerySetName: string;\r\n        Results: Results4;\r\n    }\r\n\r\n    export interface WUQuerysets {\r\n        test: boolean;\r\n    }\r\n\r\n    export interface QuerySet {\r\n        QuerySetName: string;\r\n    }\r\n\r\n    export interface Querysets2 {\r\n        QuerySet: QuerySet[];\r\n    }\r\n\r\n    export interface WUQuerysetsResponse {\r\n        Exceptions: Exceptions;\r\n        Querysets: Querysets2;\r\n    }\r\n\r\n    export interface WURecreateQuery {\r\n        Target: string;\r\n        QueryId: string;\r\n        DebugValues: DebugValues2;\r\n        DestTarget: string;\r\n        Republish: boolean;\r\n        Activate: WUQueryActivationMode;\r\n        NoReload: boolean;\r\n        MemoryLimit: string;\r\n        TimeLimit: nonNegativeInteger;\r\n        WarnTimeLimit: nonNegativeInteger;\r\n        Priority: string;\r\n        Comment: string;\r\n        RemoteDali: string;\r\n        DontCopyFiles: boolean;\r\n        SourceProcess: string;\r\n        AllowForeignFiles: boolean;\r\n        UpdateDfs: boolean;\r\n        UpdateSuperFiles: boolean;\r\n        UpdateCloneFrom: boolean;\r\n        AppendCluster: boolean;\r\n        IncludeFileErrors: boolean;\r\n        Wait: int;\r\n        DfuCopyFiles: boolean;\r\n        DfuQueue: string;\r\n        DfuWait: nonNegativeInteger;\r\n        DfuOverwrite: boolean;\r\n        OnlyCopyFiles: boolean;\r\n        StopIfFilesCopied: boolean;\r\n        DfuPublisherWuid: string;\r\n        RemoteStorage: string;\r\n    }\r\n\r\n    export interface WURecreateQueryResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        QuerySet: string;\r\n        QueryName: string;\r\n        QueryId: string;\r\n        MemoryLimit: string;\r\n        TimeLimit: nonNegativeInteger;\r\n        WarnTimeLimit: nonNegativeInteger;\r\n        Priority: string;\r\n        Comment: string;\r\n        ReloadFailed: boolean;\r\n        Suspended: boolean;\r\n        ErrorMessage: string;\r\n        FileErrors: FileErrors;\r\n        DfuPublisherWuid: string;\r\n        DfuPublisherState: string;\r\n    }\r\n\r\n    export interface WUResubmit {\r\n        Wuids: Wuids;\r\n        BlockTillFinishTimer: int;\r\n        ResetWorkflow: boolean;\r\n        CloneWorkunit: boolean;\r\n    }\r\n\r\n    export interface WU {\r\n        WUID: string;\r\n        ParentWUID: string;\r\n    }\r\n\r\n    export interface WUs {\r\n        WU: WU[];\r\n    }\r\n\r\n    export interface WUResubmitResponse {\r\n        Exceptions: Exceptions;\r\n        WUs: WUs;\r\n    }\r\n\r\n    export interface FilterBy {\r\n        NamedValue: NamedValue[];\r\n    }\r\n\r\n    export interface WUResult {\r\n        Wuid: string;\r\n        Sequence: int;\r\n        ResultName: string;\r\n        LogicalName: string;\r\n        Cluster: string;\r\n        SuppressXmlSchema: boolean;\r\n        BypassCachedResult: boolean;\r\n        FilterBy: FilterBy;\r\n        Start: long;\r\n        Count: int;\r\n    }\r\n\r\n    export interface WUResultResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        Sequence: int;\r\n        LogicalName: string;\r\n        Cluster: string;\r\n        Name: string;\r\n        Start: long;\r\n        Requested: int;\r\n        Count: int;\r\n        Total: long;\r\n        Result: string;\r\n    }\r\n\r\n    export interface WUResultBin {\r\n        LogicalName: string;\r\n        Wuid: string;\r\n        ResultName: string;\r\n        Sequence: int;\r\n        Format: string;\r\n        Cluster: string;\r\n        FilterBy: FilterBy;\r\n        Start: long;\r\n        Count: int;\r\n    }\r\n\r\n    export interface WUResultBinResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        Sequence: int;\r\n        Name: string;\r\n        Start: long;\r\n        Count: int;\r\n        Requested: int;\r\n        Total: long;\r\n        Result: base64Binary;\r\n        Format: string;\r\n    }\r\n\r\n    export interface WUResultSummary {\r\n        Wuid: string;\r\n        Sequence: int;\r\n    }\r\n\r\n    export interface Result4 {\r\n        Name: string;\r\n        Sequence: int;\r\n        Value: string;\r\n        Link: string;\r\n        FileName: string;\r\n        IsSupplied: boolean;\r\n        ShowFileContent: boolean;\r\n        Total: long;\r\n        ECLSchemas: ECLSchemas;\r\n        XmlSchema: string;\r\n    }\r\n\r\n    export interface WUResultSummaryResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        Sequence: int;\r\n        Format: int;\r\n        Result: Result4;\r\n    }\r\n\r\n    export interface WUResultView {\r\n        Wuid: string;\r\n        ViewName: string;\r\n        Sequence: int;\r\n        ResultName: string;\r\n    }\r\n\r\n    export interface WUResultViewResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        ViewName: string;\r\n        Result: string;\r\n    }\r\n\r\n    export interface Variables2 {\r\n        NamedValue: NamedValue[];\r\n    }\r\n\r\n    export interface WURun {\r\n        QuerySet: string;\r\n        Query: string;\r\n        Wuid: string;\r\n        CloneWorkunit: boolean;\r\n        Cluster: string;\r\n        Wait: int;\r\n        Input: string;\r\n        NoRootTag: boolean;\r\n        DebugValues: DebugValues2;\r\n        Variables: Variables2;\r\n        ApplicationValues: ApplicationValues;\r\n        ExceptionSeverity: WUExceptionSeverity;\r\n    }\r\n\r\n    export interface WURunResponse {\r\n        Exceptions: Exceptions;\r\n        Wuid: string;\r\n        State: string;\r\n        Results: string;\r\n    }\r\n\r\n    export interface WUSchedule {\r\n        Wuid: string;\r\n        Cluster: string;\r\n        Queue: string;\r\n        Snapshot: string;\r\n        When: dateTime;\r\n        MaxRunTime: int;\r\n    }\r\n\r\n    export interface WUScheduleResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface WUShowScheduled {\r\n        Cluster: string;\r\n        EventName: string;\r\n        PushEventName: string;\r\n        PushEventText: string;\r\n        State: string;\r\n        JobName: string;\r\n        Owner: string;\r\n        EventText: string;\r\n    }\r\n\r\n    export interface ServerInfo {\r\n        Name: string;\r\n        NetAddress: string;\r\n    }\r\n\r\n    export interface Clusters3 {\r\n        ServerInfo: ServerInfo[];\r\n    }\r\n\r\n    export interface ScheduledWU {\r\n        Wuid: string;\r\n        Cluster: string;\r\n        EventName: string;\r\n        EventText: string;\r\n        JobName: string;\r\n        StateID: int;\r\n        State: string;\r\n        Owner: string;\r\n    }\r\n\r\n    export interface Workunits3 {\r\n        ScheduledWU: ScheduledWU[];\r\n    }\r\n\r\n    export interface WUShowScheduledResponse {\r\n        Exceptions: Exceptions;\r\n        ClusterSelected: int;\r\n        EventName: string;\r\n        PushEventName: string;\r\n        PushEventText: string;\r\n        Query: string;\r\n        Clusters: Clusters3;\r\n        Workunits: Workunits3;\r\n    }\r\n\r\n    export interface WUSubmit {\r\n        Wuid: string;\r\n        Cluster: string;\r\n        Queue: string;\r\n        Snapshot: string;\r\n        MaxRunTime: int;\r\n        MaxCost: int;\r\n        BlockTillFinishTimer: int;\r\n        SyntaxCheck: boolean;\r\n        NotifyCluster: boolean;\r\n    }\r\n\r\n    export interface WUSubmitResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface WUSyntaxCheckECL {\r\n        ECL: string;\r\n        ModuleName: string;\r\n        AttributeName: string;\r\n        Queue: string;\r\n        Cluster: string;\r\n        Snapshot: string;\r\n        TimeToWait: int;\r\n        PersistWorkunit: boolean;\r\n        DebugValues: DebugValues;\r\n    }\r\n\r\n    export interface WUSyntaxCheckResponse {\r\n        Exceptions: Exceptions;\r\n        Errors: Errors;\r\n        Message: string;\r\n    }\r\n\r\n    export interface WUUpdate {\r\n        Wuid: string;\r\n        State: int;\r\n        StateOrig: int;\r\n        Jobname: string;\r\n        JobnameOrig: string;\r\n        QueryText: string;\r\n        Action: int;\r\n        Description: string;\r\n        DescriptionOrig: string;\r\n        AddDrilldownFields: boolean;\r\n        ResultLimit: int;\r\n        Protected: boolean;\r\n        ProtectedOrig: boolean;\r\n        PriorityClass: int;\r\n        PriorityLevel: int;\r\n        Scope: string;\r\n        ScopeOrig: string;\r\n        ClusterSelection: string;\r\n        ClusterOrig: string;\r\n        XmlParams: string;\r\n        ThorSlaveIP: string;\r\n        QueryMainDefinition: string;\r\n        DebugValues: DebugValues;\r\n        ApplicationValues: ApplicationValues;\r\n    }\r\n\r\n    export interface WUUpdateQueryEntry {\r\n        QuerySet: string;\r\n        QueryId: string;\r\n        Comment: string;\r\n    }\r\n\r\n    export interface WUUpdateQueryEntryResponse {\r\n        Exceptions: Exceptions;\r\n    }\r\n\r\n    export interface WUWaitCompiled {\r\n        Wuid: string;\r\n        Wait: int;\r\n        ReturnOnWait: boolean;\r\n    }\r\n\r\n    export interface WUWaitResponse {\r\n        Exceptions: Exceptions;\r\n        StateID: int;\r\n    }\r\n\r\n    export interface WUWaitComplete {\r\n        Wuid: string;\r\n        Wait: int;\r\n        ReturnOnWait: boolean;\r\n    }\r\n\r\n}\r\n\r\nexport class WorkunitsServiceBase extends Service {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection, \"WsWorkunits\", \"2\");\r\n    }\r\n\r\n    GVCAjaxGraph(request: Partial<WsWorkunits.GVCAjaxGraph>): Promise<WsWorkunits.GVCAjaxGraphResponse> {\r\n        return this._connection.send(\"GVCAjaxGraph\", request, \"json\", false, undefined, \"GVCAjaxGraphResponse\");\r\n    }\r\n\r\n    Ping(request: Partial<WsWorkunits.Ping>): Promise<WsWorkunits.WsWorkunitsPingResponse> {\r\n        return this._connection.send(\"Ping\", request, \"json\", false, undefined, \"WsWorkunitsPingResponse\");\r\n    }\r\n\r\n    WUAbort(request: Partial<WsWorkunits.WUAbort>): Promise<WsWorkunits.WUAbortResponse> {\r\n        return this._connection.send(\"WUAbort\", request, \"json\", false, undefined, \"WUAbortResponse\");\r\n    }\r\n\r\n    WUAction(request: Partial<WsWorkunits.WUAction>): Promise<WsWorkunits.WUActionResponse> {\r\n        return this._connection.send(\"WUAction\", request, \"json\", false, undefined, \"WUActionResponse\");\r\n    }\r\n\r\n    WUAddLocalFileToWorkunit(request: Partial<WsWorkunits.WUAddLocalFileToWorkunit>): Promise<WsWorkunits.WUAddLocalFileToWorkunitResponse> {\r\n        return this._connection.send(\"WUAddLocalFileToWorkunit\", request, \"json\", false, undefined, \"WUAddLocalFileToWorkunitResponse\");\r\n    }\r\n\r\n    WUAnalyseHotspot(request: Partial<WsWorkunits.WUAnalyseHotspot>): Promise<WsWorkunits.WUAnalyseHotspotResponse> {\r\n        return this._connection.send(\"WUAnalyseHotspot\", request, \"json\", false, undefined, \"WUAnalyseHotspotResponse\");\r\n    }\r\n\r\n    WUCDebug(request: Partial<WsWorkunits.WUCDebug>): Promise<WsWorkunits.WUDebugResponse> {\r\n        return this._connection.send(\"WUCDebug\", request, \"json\", false, undefined, \"WUDebugResponse\");\r\n    }\r\n\r\n    WUCheckFeatures(request: Partial<WsWorkunits.WUCheckFeatures>): Promise<WsWorkunits.WUCheckFeaturesResponse> {\r\n        return this._connection.send(\"WUCheckFeatures\", request, \"json\", false, undefined, \"WUCheckFeaturesResponse\");\r\n    }\r\n\r\n    WUClusterJobQueueLOG(request: Partial<WsWorkunits.WUClusterJobQueueLOG>): Promise<WsWorkunits.WUClusterJobQueueLOGResponse> {\r\n        return this._connection.send(\"WUClusterJobQueueLOG\", request, \"json\", false, undefined, \"WUClusterJobQueueLOGResponse\");\r\n    }\r\n\r\n    WUClusterJobQueueXLS(request: Partial<WsWorkunits.WUClusterJobQueueXLS>): Promise<WsWorkunits.WUClusterJobQueueXLSResponse> {\r\n        return this._connection.send(\"WUClusterJobQueueXLS\", request, \"json\", false, undefined, \"WUClusterJobQueueXLSResponse\");\r\n    }\r\n\r\n    WUClusterJobSummaryXLS(request: Partial<WsWorkunits.WUClusterJobSummaryXLS>): Promise<WsWorkunits.WUClusterJobSummaryXLSResponse> {\r\n        return this._connection.send(\"WUClusterJobSummaryXLS\", request, \"json\", false, undefined, \"WUClusterJobSummaryXLSResponse\");\r\n    }\r\n\r\n    WUClusterJobXLS(request: Partial<WsWorkunits.WUClusterJobXLS>): Promise<WsWorkunits.WUClusterJobXLSResponse> {\r\n        return this._connection.send(\"WUClusterJobXLS\", request, \"json\", false, undefined, \"WUClusterJobXLSResponse\");\r\n    }\r\n\r\n    WUCompileECL(request: Partial<WsWorkunits.WUCompileECL>): Promise<WsWorkunits.WUCompileECLResponse> {\r\n        return this._connection.send(\"WUCompileECL\", request, \"json\", false, undefined, \"WUCompileECLResponse\");\r\n    }\r\n\r\n    WUCopyLogicalFiles(request: Partial<WsWorkunits.WUCopyLogicalFiles>): Promise<WsWorkunits.WUCopyLogicalFilesResponse> {\r\n        return this._connection.send(\"WUCopyLogicalFiles\", request, \"json\", false, undefined, \"WUCopyLogicalFilesResponse\");\r\n    }\r\n\r\n    WUCopyQuerySet(request: Partial<WsWorkunits.WUCopyQuerySet>): Promise<WsWorkunits.WUCopyQuerySetResponse> {\r\n        return this._connection.send(\"WUCopyQuerySet\", request, \"json\", false, undefined, \"WUCopyQuerySetResponse\");\r\n    }\r\n\r\n    WUCreate(request: Partial<WsWorkunits.WUCreate>): Promise<WsWorkunits.WUCreateResponse> {\r\n        return this._connection.send(\"WUCreate\", request, \"json\", false, undefined, \"WUCreateResponse\");\r\n    }\r\n\r\n    WUCreateAndUpdate(request: Partial<WsWorkunits.WUCreateAndUpdate>): Promise<WsWorkunits.WUUpdateResponse> {\r\n        return this._connection.send(\"WUCreateAndUpdate\", request, \"json\", false, undefined, \"WUUpdateResponse\");\r\n    }\r\n\r\n    WUCreateZAPInfo(request: Partial<WsWorkunits.WUCreateZAPInfo>): Promise<WsWorkunits.WUCreateZAPInfoResponse> {\r\n        return this._connection.send(\"WUCreateZAPInfo\", request, \"json\", false, undefined, \"WUCreateZAPInfoResponse\");\r\n    }\r\n\r\n    WUDelete(request: Partial<WsWorkunits.WUDelete>): Promise<WsWorkunits.WUDeleteResponse> {\r\n        return this._connection.send(\"WUDelete\", request, \"json\", false, undefined, \"WUDeleteResponse\");\r\n    }\r\n\r\n    WUDeployWorkunit(request: Partial<WsWorkunits.WUDeployWorkunit>): Promise<WsWorkunits.WUDeployWorkunitResponse> {\r\n        return this._connection.send(\"WUDeployWorkunit\", request, \"json\", false, undefined, \"WUDeployWorkunitResponse\");\r\n    }\r\n\r\n    WUDetails(request: Partial<WsWorkunits.WUDetails>): Promise<WsWorkunits.WUDetailsResponse> {\r\n        return this._connection.send(\"WUDetails\", request, \"json\", false, undefined, \"WUDetailsResponse\");\r\n    }\r\n\r\n    WUDetailsMeta(request: Partial<WsWorkunits.WUDetailsMeta>): Promise<WsWorkunits.WUDetailsMetaResponse> {\r\n        return this._connection.send(\"WUDetailsMeta\", request, \"json\", false, undefined, \"WUDetailsMetaResponse\");\r\n    }\r\n\r\n    WUEclDefinitionAction(request: Partial<WsWorkunits.WUEclDefinitionAction>): Promise<WsWorkunits.WUEclDefinitionActionResponse> {\r\n        return this._connection.send(\"WUEclDefinitionAction\", request, \"json\", false, undefined, \"WUEclDefinitionActionResponse\");\r\n    }\r\n\r\n    WUExport(request: Partial<WsWorkunits.WUExport>): Promise<WsWorkunits.WUExportResponse> {\r\n        return this._connection.send(\"WUExport\", request, \"json\", false, undefined, \"WUExportResponse\");\r\n    }\r\n\r\n    WUFile(request: Partial<WsWorkunits.WUFile>): Promise<WsWorkunits.WULogFileResponse> {\r\n        return this._connection.send(\"WUFile\", request, \"json\", false, undefined, \"WULogFileResponse\");\r\n    }\r\n\r\n    WUFullResult(request: Partial<WsWorkunits.WUFullResult>): Promise<WsWorkunits.WUFullResultResponse> {\r\n        return this._connection.send(\"WUFullResult\", request, \"json\", false, undefined, \"WUFullResultResponse\");\r\n    }\r\n\r\n    WUGVCGraphInfo(request: Partial<WsWorkunits.WUGVCGraphInfo>): Promise<WsWorkunits.WUGVCGraphInfoResponse> {\r\n        return this._connection.send(\"WUGVCGraphInfo\", request, \"json\", false, undefined, \"WUGVCGraphInfoResponse\");\r\n    }\r\n\r\n    WUGetArchiveFile(request: Partial<WsWorkunits.WUGetArchiveFile>): Promise<WsWorkunits.WUGetArchiveFileResponse> {\r\n        return this._connection.send(\"WUGetArchiveFile\", request, \"json\", false, undefined, \"WUGetArchiveFileResponse\");\r\n    }\r\n\r\n    WUGetDependancyTrees(request: Partial<WsWorkunits.WUGetDependancyTrees>): Promise<WsWorkunits.WUGetDependancyTreesResponse> {\r\n        return this._connection.send(\"WUGetDependancyTrees\", request, \"json\", false, undefined, \"WUGetDependancyTreesResponse\");\r\n    }\r\n\r\n    WUGetGraph(request: Partial<WsWorkunits.WUGetGraph>): Promise<WsWorkunits.WUGetGraphResponse> {\r\n        return this._connection.send(\"WUGetGraph\", request, \"json\", false, undefined, \"WUGetGraphResponse\");\r\n    }\r\n\r\n    WUGetGraphNameAndTypes(request: Partial<WsWorkunits.WUGetGraphNameAndTypes>): Promise<WsWorkunits.WUGetGraphNameAndTypesResponse> {\r\n        return this._connection.send(\"WUGetGraphNameAndTypes\", request, \"json\", false, undefined, \"WUGetGraphNameAndTypesResponse\");\r\n    }\r\n\r\n    WUGetNumFileToCopy(request: Partial<WsWorkunits.WUGetNumFileToCopy>): Promise<WsWorkunits.WUGetNumFileToCopyResponse> {\r\n        return this._connection.send(\"WUGetNumFileToCopy\", request, \"json\", false, undefined, \"WUGetNumFileToCopyResponse\");\r\n    }\r\n\r\n    WUGetPlugins(request: Partial<WsWorkunits.WUGetPlugins>): Promise<WsWorkunits.WUGetPluginsResponse> {\r\n        return this._connection.send(\"WUGetPlugins\", request, \"json\", false, undefined, \"WUGetPluginsResponse\");\r\n    }\r\n\r\n    WUGetStats(request: Partial<WsWorkunits.WUGetStats>): Promise<WsWorkunits.WUGetStatsResponse> {\r\n        return this._connection.send(\"WUGetStats\", request, \"json\", false, undefined, \"WUGetStatsResponse\");\r\n    }\r\n\r\n    WUGetThorJobList(request: Partial<WsWorkunits.WUGetThorJobList>): Promise<WsWorkunits.WUGetThorJobListResponse> {\r\n        return this._connection.send(\"WUGetThorJobList\", request, \"json\", false, undefined, \"WUGetThorJobListResponse\");\r\n    }\r\n\r\n    WUGetThorJobQueue(request: Partial<WsWorkunits.WUGetThorJobQueue>): Promise<WsWorkunits.WUGetThorJobQueueResponse> {\r\n        return this._connection.send(\"WUGetThorJobQueue\", request, \"json\", false, undefined, \"WUGetThorJobQueueResponse\");\r\n    }\r\n\r\n    WUGetZAPInfo(request: Partial<WsWorkunits.WUGetZAPInfo>): Promise<WsWorkunits.WUGetZAPInfoResponse> {\r\n        return this._connection.send(\"WUGetZAPInfo\", request, \"json\", false, undefined, \"WUGetZAPInfoResponse\");\r\n    }\r\n\r\n    WUGraphInfo(request: Partial<WsWorkunits.WUGraphInfo>): Promise<WsWorkunits.WUGraphInfoResponse> {\r\n        return this._connection.send(\"WUGraphInfo\", request, \"json\", false, undefined, \"WUGraphInfoResponse\");\r\n    }\r\n\r\n    WUGraphTiming(request: Partial<WsWorkunits.WUGraphTiming>): Promise<WsWorkunits.WUGraphTimingResponse> {\r\n        return this._connection.send(\"WUGraphTiming\", request, \"json\", false, undefined, \"WUGraphTimingResponse\");\r\n    }\r\n\r\n    WUInfo(request: Partial<WsWorkunits.WUInfo>): Promise<WsWorkunits.WUInfoResponse> {\r\n        return this._connection.send(\"WUInfo\", request, \"json\", false, undefined, \"WUInfoResponse\");\r\n    }\r\n\r\n    WUInfoDetails(request: Partial<WsWorkunits.WUInfoDetails>): Promise<WsWorkunits.WUInfoResponse> {\r\n        return this._connection.send(\"WUInfoDetails\", request, \"json\", false, undefined, \"WUInfoResponse\");\r\n    }\r\n\r\n    WUJobList(request: Partial<WsWorkunits.WUJobList>): Promise<WsWorkunits.WUJobListResponse> {\r\n        return this._connection.send(\"WUJobList\", request, \"json\", false, undefined, \"WUJobListResponse\");\r\n    }\r\n\r\n    WULightWeightQuery(request: Partial<WsWorkunits.WULightWeightQuery>): Promise<WsWorkunits.WULightWeightQueryResponse> {\r\n        return this._connection.send(\"WULightWeightQuery\", request, \"json\", false, undefined, \"WULightWeightQueryResponse\");\r\n    }\r\n\r\n    WUListArchiveFiles(request: Partial<WsWorkunits.WUListArchiveFiles>): Promise<WsWorkunits.WUListArchiveFilesResponse> {\r\n        return this._connection.send(\"WUListArchiveFiles\", request, \"json\", false, undefined, \"WUListArchiveFilesResponse\");\r\n    }\r\n\r\n    WUListLocalFileRequired(request: Partial<WsWorkunits.WUListLocalFileRequired>): Promise<WsWorkunits.WUListLocalFileRequiredResponse> {\r\n        return this._connection.send(\"WUListLocalFileRequired\", request, \"json\", false, undefined, \"WUListLocalFileRequiredResponse\");\r\n    }\r\n\r\n    WUListQueries(request: Partial<WsWorkunits.WUListQueries>): Promise<WsWorkunits.WUListQueriesResponse> {\r\n        return this._connection.send(\"WUListQueries\", request, \"json\", false, undefined, \"WUListQueriesResponse\");\r\n    }\r\n\r\n    WUListQueriesUsingFile(request: Partial<WsWorkunits.WUListQueriesUsingFile>): Promise<WsWorkunits.WUListQueriesUsingFileResponse> {\r\n        return this._connection.send(\"WUListQueriesUsingFile\", request, \"json\", false, undefined, \"WUListQueriesUsingFileResponse\");\r\n    }\r\n\r\n    WUMultiQuerysetDetails(request: Partial<WsWorkunits.WUMultiQuerysetDetails>): Promise<WsWorkunits.WUMultiQuerySetDetailsResponse> {\r\n        return this._connection.send(\"WUMultiQuerysetDetails\", request, \"json\", false, undefined, \"WUMultiQuerySetDetailsResponse\");\r\n    }\r\n\r\n    WUProcessGraph(request: Partial<WsWorkunits.WUProcessGraph>): Promise<WsWorkunits.WUProcessGraphResponse> {\r\n        return this._connection.send(\"WUProcessGraph\", request, \"json\", false, undefined, \"WUProcessGraphResponse\");\r\n    }\r\n\r\n    WUProtect(request: Partial<WsWorkunits.WUProtect>): Promise<WsWorkunits.WUProtectResponse> {\r\n        return this._connection.send(\"WUProtect\", request, \"json\", false, undefined, \"WUProtectResponse\");\r\n    }\r\n\r\n    WUPublishWorkunit(request: Partial<WsWorkunits.WUPublishWorkunit>): Promise<WsWorkunits.WUPublishWorkunitResponse> {\r\n        return this._connection.send(\"WUPublishWorkunit\", request, \"json\", false, undefined, \"WUPublishWorkunitResponse\");\r\n    }\r\n\r\n    WUPushEvent(request: Partial<WsWorkunits.WUPushEvent>): Promise<WsWorkunits.WUPushEventResponse> {\r\n        return this._connection.send(\"WUPushEvent\", request, \"json\", false, undefined, \"WUPushEventResponse\");\r\n    }\r\n\r\n    WUQuery(request: Partial<WsWorkunits.WUQuery>): Promise<WsWorkunits.WUQueryResponse> {\r\n        return this._connection.send(\"WUQuery\", request, \"json\", false, undefined, \"WUQueryResponse\");\r\n    }\r\n\r\n    WUQueryConfig(request: Partial<WsWorkunits.WUQueryConfig>): Promise<WsWorkunits.WUQueryConfigResponse> {\r\n        return this._connection.send(\"WUQueryConfig\", request, \"json\", false, undefined, \"WUQueryConfigResponse\");\r\n    }\r\n\r\n    WUQueryDetails(request: Partial<WsWorkunits.WUQueryDetails>): Promise<WsWorkunits.WUQueryDetailsResponse> {\r\n        return this._connection.send(\"WUQueryDetails\", request, \"json\", false, undefined, \"WUQueryDetailsResponse\");\r\n    }\r\n\r\n    WUQueryDetailsLightWeight(request: Partial<WsWorkunits.WUQueryDetailsLightWeight>): Promise<WsWorkunits.WUQueryDetailsResponse> {\r\n        return this._connection.send(\"WUQueryDetailsLightWeight\", request, \"json\", false, undefined, \"WUQueryDetailsResponse\");\r\n    }\r\n\r\n    WUQueryFiles(request: Partial<WsWorkunits.WUQueryFiles>): Promise<WsWorkunits.WUQueryFilesResponse> {\r\n        return this._connection.send(\"WUQueryFiles\", request, \"json\", false, undefined, \"WUQueryFilesResponse\");\r\n    }\r\n\r\n    WUQueryGetGraph(request: Partial<WsWorkunits.WUQueryGetGraph>): Promise<WsWorkunits.WUQueryGetGraphResponse> {\r\n        return this._connection.send(\"WUQueryGetGraph\", request, \"json\", false, undefined, \"WUQueryGetGraphResponse\");\r\n    }\r\n\r\n    WUQueryGetSummaryStats(request: Partial<WsWorkunits.WUQueryGetSummaryStats>): Promise<WsWorkunits.WUQueryGetSummaryStatsResponse> {\r\n        return this._connection.send(\"WUQueryGetSummaryStats\", request, \"json\", false, undefined, \"WUQueryGetSummaryStatsResponse\");\r\n    }\r\n\r\n    WUQuerysetAliasAction(request: Partial<WsWorkunits.WUQuerysetAliasAction>): Promise<WsWorkunits.WUQuerySetAliasActionResponse> {\r\n        return this._connection.send(\"WUQuerysetAliasAction\", request, \"json\", false, undefined, \"WUQuerySetAliasActionResponse\");\r\n    }\r\n\r\n    WUQuerysetCopyQuery(request: Partial<WsWorkunits.WUQuerysetCopyQuery>): Promise<WsWorkunits.WUQuerySetCopyQueryResponse> {\r\n        return this._connection.send(\"WUQuerysetCopyQuery\", request, \"json\", false, undefined, \"WUQuerySetCopyQueryResponse\");\r\n    }\r\n\r\n    WUQuerysetDetails(request: Partial<WsWorkunits.WUQuerysetDetails>): Promise<WsWorkunits.WUQuerySetDetailsResponse> {\r\n        return this._connection.send(\"WUQuerysetDetails\", request, \"json\", false, undefined, \"WUQuerySetDetailsResponse\");\r\n    }\r\n\r\n    WUQuerysetExport(request: Partial<WsWorkunits.WUQuerysetExport>): Promise<WsWorkunits.WUQuerysetExportResponse> {\r\n        return this._connection.send(\"WUQuerysetExport\", request, \"json\", false, undefined, \"WUQuerysetExportResponse\");\r\n    }\r\n\r\n    WUQuerysetImport(request: Partial<WsWorkunits.WUQuerysetImport>): Promise<WsWorkunits.WUQuerysetImportResponse> {\r\n        return this._connection.send(\"WUQuerysetImport\", request, \"json\", false, undefined, \"WUQuerysetImportResponse\");\r\n    }\r\n\r\n    WUQuerysetQueryAction(request: Partial<WsWorkunits.WUQuerysetQueryAction>): Promise<WsWorkunits.WUQuerySetQueryActionResponse> {\r\n        return this._connection.send(\"WUQuerysetQueryAction\", request, \"json\", false, undefined, \"WUQuerySetQueryActionResponse\");\r\n    }\r\n\r\n    WUQuerysets(request: Partial<WsWorkunits.WUQuerysets>): Promise<WsWorkunits.WUQuerysetsResponse> {\r\n        return this._connection.send(\"WUQuerysets\", request, \"json\", false, undefined, \"WUQuerysetsResponse\");\r\n    }\r\n\r\n    WURecreateQuery(request: Partial<WsWorkunits.WURecreateQuery>): Promise<WsWorkunits.WURecreateQueryResponse> {\r\n        return this._connection.send(\"WURecreateQuery\", request, \"json\", false, undefined, \"WURecreateQueryResponse\");\r\n    }\r\n\r\n    WUResubmit(request: Partial<WsWorkunits.WUResubmit>): Promise<WsWorkunits.WUResubmitResponse> {\r\n        return this._connection.send(\"WUResubmit\", request, \"json\", false, undefined, \"WUResubmitResponse\");\r\n    }\r\n\r\n    WUResult(request: Partial<WsWorkunits.WUResult>): Promise<WsWorkunits.WUResultResponse> {\r\n        return this._connection.send(\"WUResult\", request, \"json\", false, undefined, \"WUResultResponse\");\r\n    }\r\n\r\n    WUResultBin(request: Partial<WsWorkunits.WUResultBin>): Promise<WsWorkunits.WUResultBinResponse> {\r\n        return this._connection.send(\"WUResultBin\", request, \"json\", false, undefined, \"WUResultBinResponse\");\r\n    }\r\n\r\n    WUResultSummary(request: Partial<WsWorkunits.WUResultSummary>): Promise<WsWorkunits.WUResultSummaryResponse> {\r\n        return this._connection.send(\"WUResultSummary\", request, \"json\", false, undefined, \"WUResultSummaryResponse\");\r\n    }\r\n\r\n    WUResultView(request: Partial<WsWorkunits.WUResultView>): Promise<WsWorkunits.WUResultViewResponse> {\r\n        return this._connection.send(\"WUResultView\", request, \"json\", false, undefined, \"WUResultViewResponse\");\r\n    }\r\n\r\n    WURun(request: Partial<WsWorkunits.WURun>): Promise<WsWorkunits.WURunResponse> {\r\n        return this._connection.send(\"WURun\", request, \"json\", false, undefined, \"WURunResponse\");\r\n    }\r\n\r\n    WUSchedule(request: Partial<WsWorkunits.WUSchedule>): Promise<WsWorkunits.WUScheduleResponse> {\r\n        return this._connection.send(\"WUSchedule\", request, \"json\", false, undefined, \"WUScheduleResponse\");\r\n    }\r\n\r\n    WUShowScheduled(request: Partial<WsWorkunits.WUShowScheduled>): Promise<WsWorkunits.WUShowScheduledResponse> {\r\n        return this._connection.send(\"WUShowScheduled\", request, \"json\", false, undefined, \"WUShowScheduledResponse\");\r\n    }\r\n\r\n    WUSubmit(request: Partial<WsWorkunits.WUSubmit>): Promise<WsWorkunits.WUSubmitResponse> {\r\n        return this._connection.send(\"WUSubmit\", request, \"json\", false, undefined, \"WUSubmitResponse\");\r\n    }\r\n\r\n    WUSyntaxCheckECL(request: Partial<WsWorkunits.WUSyntaxCheckECL>): Promise<WsWorkunits.WUSyntaxCheckResponse> {\r\n        return this._connection.send(\"WUSyntaxCheckECL\", request, \"json\", false, undefined, \"WUSyntaxCheckResponse\");\r\n    }\r\n\r\n    WUUpdate(request: Partial<WsWorkunits.WUUpdate>): Promise<WsWorkunits.WUUpdateResponse> {\r\n        return this._connection.send(\"WUUpdate\", request, \"json\", false, undefined, \"WUUpdateResponse\");\r\n    }\r\n\r\n    WUUpdateQueryEntry(request: Partial<WsWorkunits.WUUpdateQueryEntry>): Promise<WsWorkunits.WUUpdateQueryEntryResponse> {\r\n        return this._connection.send(\"WUUpdateQueryEntry\", request, \"json\", false, undefined, \"WUUpdateQueryEntryResponse\");\r\n    }\r\n\r\n    WUWaitCompiled(request: Partial<WsWorkunits.WUWaitCompiled>): Promise<WsWorkunits.WUWaitResponse> {\r\n        return this._connection.send(\"WUWaitCompiled\", request, \"json\", false, undefined, \"WUWaitResponse\");\r\n    }\r\n\r\n    WUWaitComplete(request: Partial<WsWorkunits.WUWaitComplete>): Promise<WsWorkunits.WUWaitResponse> {\r\n        return this._connection.send(\"WUWaitComplete\", request, \"json\", false, undefined, \"WUWaitResponse\");\r\n    }\r\n\r\n}\r\n","import { deepMixin, xml2json, XMLNode } from \"@hpcc-js/util\";\r\nimport { WsWorkunits, WorkunitsServiceBase } from \"./wsdl/WsWorkunits/v2/WsWorkunits\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { ESPConnection } from \"../espConnection\";\r\n\r\n/*\r\n    Response structures generated via:\r\n    * http://localhost:8010/WsWorkunits/WUInfo?reqjson_\r\n    * http://localhost:8010/WsWorkunits/WUInfo?respjson_\r\n    * http://json2ts.com/\r\n*/\r\n\r\nexport {\r\n    WsWorkunits\r\n};\r\n\r\nexport enum WUStateID {\r\n    Unknown = 0,\r\n    Compiled,\r\n    Running,\r\n    Completed,\r\n    Failed,\r\n    Archived,\r\n    Aborting,\r\n    Aborted,\r\n    Blocked,\r\n    Submitted,\r\n    Scheduled,\r\n    Compiling,\r\n    Wait,\r\n    UploadingFiled,\r\n    DebugPaused,\r\n    DebugRunning,\r\n    Paused,\r\n    LAST,\r\n    NotFound = 999\r\n}\r\n\r\nexport namespace WUUpdate {\r\n    export enum Action {\r\n        Unknown = 0,\r\n        Compile,\r\n        Check,\r\n        Run,\r\n        ExecuteExisting,\r\n        Pause,\r\n        PauseNow,\r\n        Resume,\r\n        Debug,\r\n        __size\r\n    }\r\n}\r\nexport function isECLResult(_: any): _ is WsWorkunits.ECLResult {\r\n    return typeof (_ as WsWorkunits.ECLResult).Name === \"string\";\r\n}\r\n\r\nexport function isWUQueryECLWorkunit(_: WsWorkunits.ECLWorkunit | WsWorkunits.Workunit): _ is WsWorkunits.ECLWorkunit {\r\n    return (_ as WsWorkunits.ECLWorkunit).TotalClusterTime !== undefined;\r\n}\r\n\r\nexport function isWUInfoWorkunit(_: WsWorkunits.ECLWorkunit | WsWorkunits.Workunit): _ is WsWorkunits.Workunit {\r\n    return (_ as WsWorkunits.Workunit).StateEx !== undefined;\r\n}\r\nexport class WorkunitsService extends WorkunitsServiceBase {\r\n\r\n    constructor(optsConnection: IOptions | IConnection) {\r\n        super(optsConnection);\r\n    }\r\n\r\n    opts() {\r\n        return this._connection.opts();\r\n    }\r\n\r\n    connection(): ESPConnection {\r\n        return this._connection.clone();\r\n    }\r\n\r\n    Ping(): Promise<WsWorkunits.WsWorkunitsPingResponse> {\r\n        return this._connection.send(\"Ping\", {}, \"json\", false, undefined, \"WsWorkunitsPingResponse\").then((response) => {\r\n            return { result: true };\r\n        }).catch((e: Error) => {\r\n            return { result: false, error: e };\r\n        });\r\n    }\r\n\r\n    WUQuery(request: Partial<WsWorkunits.WUQuery> = {}, abortSignal?: AbortSignal): Promise<WsWorkunits.WUQueryResponse> {\r\n        return this._connection.send(\"WUQuery\", request, \"json\", false, abortSignal).then((response) => {\r\n            return deepMixin({ Workunits: { ECLWorkunit: [] } }, response);\r\n        });\r\n    }\r\n\r\n    WUInfo(_request: Partial<WsWorkunits.WUInfo>): Promise<WsWorkunits.WUInfoResponse> {\r\n        const request: Partial<WsWorkunits.WUInfo> = {\r\n            Wuid: \"\",\r\n            TruncateEclTo64k: true,\r\n            IncludeExceptions: false,\r\n            IncludeGraphs: false,\r\n            IncludeSourceFiles: false,\r\n            IncludeResults: false,\r\n            IncludeResultsViewNames: false,\r\n            IncludeVariables: false,\r\n            IncludeTimers: false,\r\n            IncludeDebugValues: false,\r\n            IncludeApplicationValues: false,\r\n            IncludeWorkflows: false,\r\n            IncludeXmlSchemas: false,\r\n            IncludeResourceURLs: false,\r\n            IncludeECL: false,\r\n            IncludeHelpers: false,\r\n            IncludeAllowedClusters: false,\r\n            IncludeTotalClusterTime: false,\r\n            IncludeServiceNames: false,\r\n            SuppressResultSchemas: true,\r\n            ..._request\r\n        };\r\n        return super.WUInfo(request);\r\n    }\r\n\r\n    WUCreate(): Promise<WsWorkunits.WUCreateResponse> {\r\n        return super.WUCreate({});\r\n    }\r\n\r\n    WUUpdate(request: Partial<WsWorkunits.WUUpdate>): Promise<WsWorkunits.WUUpdateResponse> {\r\n        return this._connection.send(\"WUUpdate\", request, \"json\", true);\r\n    }\r\n\r\n    WUResubmit(request: WsWorkunits.WUResubmit): Promise<WsWorkunits.WUResubmitResponse> {\r\n        this._connection.toESPStringArray(request, \"Wuids\");\r\n        return super.WUResubmit(request);\r\n    }\r\n\r\n    WUAction(request: Partial<WsWorkunits.WUAction>): Promise<WsWorkunits.WUActionResponse> {\r\n        (request as any).ActionType = request.WUActionType; //  v5.x compatibility\r\n        return super.WUAction(request);\r\n    }\r\n\r\n    WUResult(request: Partial<WsWorkunits.WUResult>, abortSignal?: AbortSignal): Promise<WsWorkunits.WUResultResponse> {\r\n        return this._connection.send(\"WUResult\", request, \"json\", false, abortSignal);\r\n    }\r\n\r\n    WUFileEx(request: Partial<WsWorkunits.WUFile>): Promise<string> {\r\n        return this._connection.send(\"WUFile\", request, \"text\");\r\n    }\r\n\r\n    private _WUDetailsMetaPromise: Promise<WsWorkunits.WUDetailsMetaResponse>;\r\n    WUDetailsMeta(request: WsWorkunits.WUDetailsMeta): Promise<WsWorkunits.WUDetailsMetaResponse> {\r\n        if (!this._WUDetailsMetaPromise) {\r\n            this._WUDetailsMetaPromise = super.WUDetailsMeta(request);\r\n        }\r\n        return this._WUDetailsMetaPromise;\r\n    }\r\n\r\n    WUCDebugEx(request: WsWorkunits.WUCDebug): Promise<XMLNode | null> {\r\n        return this._connection.send(\"WUCDebug\", request, undefined, undefined, undefined, \"WUDebug\").then((response) => {\r\n            const retVal = xml2json(response.Result);\r\n            const children = retVal.children();\r\n            if (children.length) {\r\n                return children[0];\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n}\r\n\r\nexport class WorkunitsServiceEx extends WorkunitsServiceBase {\r\n    WUPublishWorkunitEx(request: Partial<WsWorkunits.WUPublishWorkunit>): Promise<WsWorkunits.WUPublishWorkunitResponse> {\r\n        return this._connection.send(\"WUPublishWorkunit\", request);\r\n    }\r\n}\r\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": formatDecimal,\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import { Cache, Edge, Graph, StateObject, StringAnyMap, Subgraph, Vertex, XMLNode } from \"@hpcc-js/util\";\r\nimport { WsWorkunits } from \"../services/wsWorkunits\";\r\nimport { BaseScope } from \"./scope\";\r\nimport { Timer } from \"./timer\";\r\nimport { Workunit } from \"./workunit\";\r\n\r\nexport interface ECLGraphEx extends WsWorkunits.ECLGraph {\r\n    Time: number;\r\n}\r\n\r\nexport class ECLGraph extends StateObject<ECLGraphEx, ECLGraphEx> implements ECLGraphEx {\r\n    protected wu: Workunit;\r\n\r\n    get properties(): ECLGraphEx { return this.get(); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get Label(): string { return this.get(\"Label\"); }\r\n    get Type(): string { return this.get(\"Type\"); }\r\n    get Complete(): boolean { return this.get(\"Complete\"); }\r\n    get WhenStarted(): string { return this.get(\"WhenStarted\"); }\r\n    get WhenFinished(): string { return this.get(\"WhenFinished\"); }\r\n    get Time(): number { return this.get(\"Time\"); }\r\n    get Running(): boolean { return this.get(\"Running\"); }\r\n    get RunningId(): number { return this.get(\"RunningId\"); }\r\n    get Failed(): boolean { return this.get(\"Failed\"); }\r\n\r\n    constructor(wu: Workunit, eclGraph: WsWorkunits.ECLGraph, eclTimers: Timer[]) {\r\n        super();\r\n        this.wu = wu;\r\n        let duration = 0;\r\n        for (const eclTimer of eclTimers) {\r\n            if (eclTimer.GraphName === eclGraph.Name && !eclTimer.HasSubGraphId) {\r\n                duration = Math.round(eclTimer.Seconds * 1000) / 1000;\r\n                break;\r\n            }\r\n        }\r\n        this.set({ Time: duration, ...eclGraph });\r\n    }\r\n\r\n    fetchScopeGraph(subgraphID?: string): Promise<ScopeGraph> {\r\n        if (subgraphID) {\r\n            return this.wu.fetchGraphDetails([subgraphID], [\"subgraph\"]).then((scopes) => {\r\n                return createGraph(scopes);\r\n            });\r\n        }\r\n        return this.wu.fetchGraphDetails([this.Name], [\"graph\"]).then((scopes) => {\r\n            return createGraph(scopes);\r\n        });\r\n    }\r\n}\r\n\r\nexport class GraphCache extends Cache<WsWorkunits.ECLGraph, ECLGraph> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return Cache.hash([obj.Name]);\r\n        });\r\n    }\r\n}\r\n\r\ntype Callback = (tag: string, attributes: StringAnyMap, children: XMLNode[], _stack: XMLNode[]) => void;\r\nfunction walkXmlJson(node: XMLNode, callback: Callback, stack?: XMLNode[]) {\r\n    stack = stack || [];\r\n    stack.push(node);\r\n    callback(node.name, node.$, node.children(), stack);\r\n    node.children().forEach((childNode) => {\r\n        walkXmlJson(childNode, callback, stack);\r\n    });\r\n    stack.pop();\r\n}\r\n\r\nfunction flattenAtt(nodes: XMLNode[]): StringAnyMap {\r\n    const retVal: StringAnyMap = {};\r\n    nodes.forEach((node: XMLNode) => {\r\n        if (node.name === \"att\") {\r\n            retVal[node.$[\"name\"]] = node.$[\"value\"];\r\n        }\r\n    });\r\n    return retVal;\r\n}\r\n\r\nexport class XGMMLGraph extends Graph<StringAnyMap, StringAnyMap, StringAnyMap> { }\r\nexport class XGMMLSubgraph extends Subgraph<StringAnyMap, StringAnyMap, StringAnyMap> { }\r\nexport class XGMMLVertex extends Vertex<StringAnyMap, StringAnyMap, StringAnyMap> { }\r\nexport class XGMMLEdge extends Edge<StringAnyMap, StringAnyMap, StringAnyMap> { }\r\n\r\nexport function createXGMMLGraph(id: string, graphs: XMLNode): XGMMLGraph {\r\n    const subgraphs: { [id: string]: XGMMLSubgraph } = {};\r\n    const vertices: { [id: string]: XGMMLVertex } = {};\r\n    const edges: { [id: string]: XGMMLEdge } = {};\r\n\r\n    const graph = new XGMMLGraph((item) => {\r\n        return item._![\"id\"];\r\n    });\r\n\r\n    const stack: XGMMLSubgraph[] = [graph.root];\r\n    walkXmlJson(graphs, (tag: string, attributes: StringAnyMap, childNodes: XMLNode[], _stack) => {\r\n        const top = stack[stack.length - 1];\r\n        switch (tag) {\r\n            case \"graph\":\r\n                break;\r\n            case \"node\":\r\n                if (childNodes.length && childNodes[0].children().length && childNodes[0].children()[0].name === \"graph\") {\r\n                    const subgraph = top.createSubgraph(flattenAtt(childNodes));\r\n                    stack.push(subgraph);\r\n                    subgraphs[attributes[\"id\"]] = subgraph;\r\n                } else {\r\n                }\r\n                // TODO:  Is this really a node when its also a subgraph?\r\n                const vertex = top.createVertex(flattenAtt(childNodes));\r\n                vertices[attributes[\"id\"]] = vertex;\r\n                break;\r\n            case \"edge\":\r\n                const edge = top.createEdge(vertices[attributes[\"source\"]], vertices[attributes[\"target\"]], flattenAtt(childNodes));\r\n                edges[attributes[\"id\"]] = edge;\r\n                break;\r\n            default:\r\n        }\r\n    });\r\n    return graph;\r\n}\r\n\r\nexport class ScopeGraph extends Graph<BaseScope, BaseScope, BaseScope> { }\r\nexport class ScopeSubgraph extends Subgraph<BaseScope, BaseScope, BaseScope> { }\r\nexport class ScopeVertex extends Vertex<BaseScope, BaseScope, BaseScope> { }\r\nexport class ScopeEdge extends Edge<BaseScope, BaseScope, BaseScope> { }\r\n\r\nexport function createGraph(scopes: BaseScope[]): ScopeGraph {\r\n    const subgraphs: { [scopeName: string]: ScopeSubgraph } = {};\r\n    const edges: { [scopeName: string]: BaseScope } = {};\r\n    const vertices: { [scopeName: string]: ScopeVertex } = {};\r\n\r\n    let graph: ScopeGraph | undefined;\r\n    for (const scope of scopes) {\r\n        switch (scope.ScopeType) {\r\n            case \"graph\":\r\n                graph = new ScopeGraph(item => item._!.Id, scope);\r\n                subgraphs[scope.ScopeName] = graph.root;\r\n                break;\r\n            case \"subgraph\":\r\n                if (!graph) {\r\n                    graph = new ScopeGraph(item => item._!.Id, scope);\r\n                    subgraphs[scope.ScopeName] = graph.root;\r\n                }\r\n                const scopeStack = scope.parentScope().split(\":\");\r\n                let scopeParent1 = subgraphs[scope.parentScope()];\r\n                while (scopeStack.length && !scopeParent1) {\r\n                    scopeParent1 = subgraphs[scopeStack.join(\":\")];\r\n                    scopeStack.pop();\r\n                }\r\n                if (!scopeParent1) {\r\n                    console.warn(`Missing SG:Parent (${scope.Id}): ${scope.parentScope()}`);\r\n                } else {\r\n                    const parent1: ScopeSubgraph = scopeParent1;\r\n                    subgraphs[scope.ScopeName] = parent1.createSubgraph(scope);\r\n                }\r\n                break;\r\n            case \"activity\":\r\n                const scopeParent2 = subgraphs[scope.parentScope()];\r\n                if (!scopeParent2) {\r\n                    console.warn(`Missing A:Parent (${scope.Id}): ${scope.parentScope()}`);\r\n                } else {\r\n                    vertices[scope.ScopeName] = scopeParent2.createVertex(scope);\r\n                }\r\n                break;\r\n            case \"edge\":\r\n                edges[scope.ScopeName] = scope;\r\n                break;\r\n            case \"function\":\r\n                const scopeParent3 = vertices[scope.parentScope()];\r\n                if (!scopeParent3) {\r\n                    console.warn(`Missing F:Parent (${scope.Id}): ${scope.parentScope()}`);\r\n                } else {\r\n                    scopeParent3._.children().push(scope);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    for (const id in edges) {\r\n        const scope = edges[id];\r\n        const scopeParent3 = subgraphs[scope.parentScope()];\r\n        if (!scopeParent3) {\r\n            console.warn(`Missing E:Parent (${scope.Id}): ${scope.parentScope()}`);\r\n        } else {\r\n            const parent3: ScopeSubgraph = scopeParent3;\r\n            try {\r\n                const source = graph!.vertex(scope.attr(\"IdSource\").RawValue);\r\n                const target = graph!.vertex(scope.attr(\"IdTarget\").RawValue);\r\n                parent3.createEdge(source, target, scope);\r\n            } catch (e) {\r\n                // const sourceIndex = scope.attr(\"SourceIndex\").RawValue;\r\n                // const targetIndex = scope.attr(\"TargetIndex\").RawValue;\r\n                console.warn(`Invalid Edge: ${id}`);\r\n            }\r\n        }\r\n    }\r\n    return graph!;\r\n}\r\n","import { StateObject } from \"@hpcc-js/util\";\r\nimport { Workunit } from \"./workunit\";\r\n\r\nexport interface ResourceEx {\r\n    URL: string;\r\n    DisplayName: string;\r\n    DisplayPath: string;\r\n}\r\n\r\nexport class Resource extends StateObject<ResourceEx, ResourceEx> implements ResourceEx {\r\n    protected wu: Workunit;\r\n\r\n    get properties(): ResourceEx { return this.get(); }\r\n    get URL(): string { return this.get(\"URL\"); }\r\n    get DisplayName(): string { return this.get(\"DisplayName\"); }\r\n    get DisplayPath(): string { return this.get(\"DisplayPath\"); }\r\n\r\n    constructor(wu: Workunit, url: string) {\r\n        super();\r\n        this.wu = wu;\r\n\r\n        const cleanedURL = url.split(\"\\\\\").join(\"/\");\r\n        const urlParts = cleanedURL.split(\"/\");\r\n        const matchStr = \"res/\" + this.wu.Wuid + \"/\";\r\n        let displayPath = \"\";\r\n        let displayName = \"\";\r\n\r\n        if (cleanedURL.indexOf(matchStr) === 0) {\r\n            displayPath = cleanedURL.substr(matchStr.length);\r\n            displayName = urlParts[urlParts.length - 1];\r\n        }\r\n\r\n        this.set({\r\n            URL: url,\r\n            DisplayName: displayName,\r\n            DisplayPath: displayPath\r\n        });\r\n    }\r\n}\r\n","import { SAXStackParser, Stack, XMLNode } from \"@hpcc-js/util\";\r\n\r\nexport class XSDNode {\r\n    protected e?: XMLNode;\r\n\r\n    constructor(e: XMLNode) {\r\n        this.e = e;\r\n    }\r\n    fix() {\r\n        delete this.e;\r\n    }\r\n}\r\n\r\nexport class XSDXMLNode extends XSDNode {\r\n    name: string;\r\n    type: string;\r\n    isSet = false;\r\n    attrs: { [key: string]: string } = {};\r\n    private _children: XSDXMLNode[] = [];\r\n\r\n    constructor(e: XMLNode) {\r\n        super(e);\r\n    }\r\n\r\n    append(child: XSDXMLNode) {\r\n        this._children.push(child);\r\n        if (!this.type) {\r\n            this.type = \"hpcc:childDataset\";\r\n        }\r\n    }\r\n\r\n    fix() {\r\n        this.name = this.e!.$[\"name\"];\r\n        this.type = this.e!.$[\"type\"];\r\n        for (let i = this._children.length - 1; i >= 0; --i) {\r\n            const row = this._children[i];\r\n            if (row.name === \"Row\" && row.type === undefined) {\r\n                this._children.push(...row._children);\r\n                this._children.splice(i, 1);\r\n            }\r\n        }\r\n        const setOfType = this.setOfType();\r\n        if (setOfType) {\r\n            this.type = setOfType;\r\n            this.isSet = true;\r\n            this._children = [];\r\n        }\r\n    }\r\n\r\n    children(): XSDXMLNode[] {\r\n        return this._children;\r\n    }\r\n\r\n    private isAll(node: XSDXMLNode) {\r\n        return node.name === \"All\" && node.type === undefined;\r\n    }\r\n\r\n    private setOfType(): string {\r\n        const children = this.children();\r\n        if (this.type === undefined && children.length === 2) {\r\n            if (this.isAll(children[0])) {\r\n                return children[1].type;\r\n            } else if (this.isAll(children[1])) {\r\n                return children[0].type;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    charWidth() {\r\n        let retVal: number = -1;\r\n\r\n        switch (this.type) {\r\n            case \"xs:boolean\":\r\n                retVal = 5;\r\n                break;\r\n            case \"xs:integer\":\r\n                retVal = 8;\r\n                break;\r\n            case \"xs:nonNegativeInteger\":\r\n                retVal = 8;\r\n                break;\r\n            case \"xs:double\":\r\n                retVal = 8;\r\n                break;\r\n            case \"xs:string\":\r\n                retVal = 32;\r\n                break;\r\n            default:\r\n                const numStr: string = \"0123456789\";\r\n                const underbarPos: number = this.type.lastIndexOf(\"_\");\r\n                const length: number = underbarPos > 0 ? underbarPos : this.type.length;\r\n                let i: number = length - 1;\r\n                for (; i >= 0; --i) {\r\n                    if (numStr.indexOf(this.type.charAt(i)) === -1)\r\n                        break;\r\n                }\r\n                if (i + 1 < length) {\r\n                    retVal = parseInt(this.type.substring(i + 1, length), 10);\r\n                }\r\n                if (this.type.indexOf(\"data\") === 0) {\r\n                    retVal *= 2;\r\n                }\r\n                break;\r\n        }\r\n        if (retVal < this.name.length)\r\n            retVal = this.name.length;\r\n\r\n        return retVal;\r\n    }\r\n}\r\n\r\nexport class XSDSimpleType extends XSDNode {\r\n    name: string;\r\n    type: string;\r\n    maxLength: number | undefined;\r\n\r\n    protected _restricition?: XMLNode;\r\n    protected _maxLength?: XMLNode;\r\n\r\n    constructor(e: XMLNode) {\r\n        super(e);\r\n    }\r\n\r\n    append(e: XMLNode) {\r\n        switch (e.name) {\r\n            case \"xs:restriction\":\r\n                this._restricition = e;\r\n                break;\r\n            case \"xs:maxLength\":\r\n                this._maxLength = e;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    fix() {\r\n        this.name = this.e!.$[\"name\"];\r\n        this.type = this._restricition!.$[\"base\"];\r\n        this.maxLength = this._maxLength ? +this._maxLength!.$[\"value\"] : undefined;\r\n        delete this._restricition;\r\n        delete this._maxLength;\r\n        super.fix();\r\n    }\r\n}\r\n\r\nexport class XSDSchema {\r\n    root: XSDXMLNode;\r\n    simpleTypes: { [name: string]: XSDSimpleType } = {};\r\n\r\n    fields(): XSDXMLNode[] {\r\n        return this.root.children();\r\n    }\r\n}\r\n\r\nclass XSDParser extends SAXStackParser {\r\n    schema: XSDSchema = new XSDSchema();\r\n    simpleType: XSDSimpleType;\r\n    simpleTypes: { [name: string]: XSDSimpleType } = {};\r\n\r\n    xsdStack: Stack<XSDXMLNode> = new Stack<XSDXMLNode>();\r\n\r\n    startXMLNode(e: XMLNode) {\r\n        super.startXMLNode(e);\r\n        switch (e.name) {\r\n            case \"xs:element\":\r\n                const xsdXMLNode = new XSDXMLNode(e);\r\n                if (!this.schema.root) {\r\n                    this.schema.root = xsdXMLNode;\r\n                } else if (this.xsdStack.depth()) {\r\n                    this.xsdStack.top()!.append(xsdXMLNode);\r\n                }\r\n                this.xsdStack.push(xsdXMLNode);\r\n                break;\r\n            case \"xs:simpleType\":\r\n                this.simpleType = new XSDSimpleType(e);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    endXMLNode(e: XMLNode) {\r\n        switch (e!.name) {\r\n            case \"xs:element\":\r\n                const xsdXMLNode = this.xsdStack.pop();\r\n                xsdXMLNode!.fix();\r\n                break;\r\n            case \"xs:simpleType\":\r\n                this.simpleType.fix();\r\n                this.simpleTypes[this.simpleType.name] = this.simpleType;\r\n                delete this.simpleType;\r\n                break;\r\n            case \"xs:appinfo\":\r\n                const xsdXMLNode2 = this.xsdStack.top();\r\n                for (const key in e.$) {\r\n                    xsdXMLNode2!.attrs[key] = e.$[key];\r\n                }\r\n                break;\r\n            default:\r\n                if (this.simpleType) {\r\n                    this.simpleType.append(e);\r\n                }\r\n        }\r\n        super.endXMLNode(e);\r\n    }\r\n}\r\n\r\nexport function parseXSD(xml: string): XSDSchema {\r\n    const saxParser = new XSDParser();\r\n    saxParser.parse(xml);\r\n    return saxParser.schema;\r\n}\r\n\r\nclass XSDParser2 extends XSDParser {\r\n    _rootName: string;\r\n    schema: XSDSchema = new XSDSchema();\r\n    simpleType: XSDSimpleType;\r\n    simpleTypes: { [name: string]: XSDSimpleType } = {};\r\n\r\n    xsdStack: Stack<XSDXMLNode> = new Stack<XSDXMLNode>();\r\n\r\n    constructor(rootName: string) {\r\n        super();\r\n        this._rootName = rootName;\r\n    }\r\n\r\n    startXMLNode(e: XMLNode) {\r\n        super.startXMLNode(e);\r\n        switch (e.name) {\r\n            case \"xsd:element\":\r\n                const xsdXMLNode = new XSDXMLNode(e);\r\n                if (!this.schema.root && this._rootName === e.$.name) {\r\n                    this.schema.root = xsdXMLNode;\r\n                }\r\n                if (this.xsdStack.depth()) {\r\n                    this.xsdStack.top()!.append(xsdXMLNode);\r\n                }\r\n                this.xsdStack.push(xsdXMLNode);\r\n                break;\r\n            case \"xsd:simpleType\":\r\n                this.simpleType = new XSDSimpleType(e);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    endXMLNode(e: XMLNode) {\r\n        switch (e!.name) {\r\n            case \"xsd:element\":\r\n                const xsdXMLNode = this.xsdStack.pop()!;\r\n                xsdXMLNode.fix();\r\n                break;\r\n            case \"xsd:simpleType\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        super.endXMLNode(e);\r\n    }\r\n}\r\n\r\nexport function parseXSD2(xml: string, rootName): XSDSchema {\r\n    const saxParser = new XSDParser2(rootName);\r\n    saxParser.parse(xml);\r\n    return saxParser.schema;\r\n}\r\n","import { Cache, exists, StateObject } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { WsDfu } from \"../services/wsDFU\";\r\nimport { isECLResult, WorkunitsService, WsWorkunits } from \"../services/wsWorkunits\";\r\nimport { parseXSD, XSDSchema, XSDXMLNode } from \"./xsdParser\";\r\n\r\nexport class GlobalResultCache extends Cache<{ BaseUrl: string, Wuid: string, ResultName: string }, Result> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return `${obj.BaseUrl}-${obj.Wuid}-${obj.ResultName}`;\r\n        });\r\n    }\r\n}\r\nconst _results = new GlobalResultCache();\r\n\r\nexport type ResultFilter = { [key: string]: string | number };\r\n\r\nexport interface ECLResultEx extends WsWorkunits.ECLResult {\r\n    Wuid: string;\r\n    ResultName?: string;\r\n    ResultSequence?: number;\r\n    LogicalFileName?: string;\r\n    NodeGroup?: string;\r\n    ResultViews: string[];\r\n}\r\n\r\nexport interface WUResultResponseEx {\r\n\r\n    Exceptions: WsWorkunits.Exceptions;\r\n    Wuid: string;\r\n    Sequence: WsWorkunits.int;\r\n    LogicalName: string;\r\n    Cluster: string;\r\n    Name: string;\r\n    Start: WsWorkunits.long;\r\n    Requested: WsWorkunits.int;\r\n    Count: WsWorkunits.int;\r\n    Total: WsWorkunits.long;\r\n    Result: { [key: string]: any[] } & {\r\n        XmlSchema?: {\r\n            xml: string;\r\n        };\r\n    };\r\n}\r\n\r\nexport type UResulState = ECLResultEx & WsDfu.DFULogicalFile;\r\nexport type IResulState = ECLResultEx | WsDfu.DFULogicalFile;\r\nexport class Result extends StateObject<UResulState, IResulState> implements ECLResultEx {\r\n    protected connection: WorkunitsService;\r\n    get BaseUrl() { return this.connection.baseUrl; }\r\n    protected xsdSchema: XSDSchema;\r\n\r\n    get properties(): WsWorkunits.ECLResult { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get ResultName(): string | undefined { return this.get(\"ResultName\"); }\r\n    get ResultSequence(): number | undefined { return this.get(\"ResultSequence\"); }\r\n    get LogicalFileName(): string | undefined { return this.get(\"LogicalFileName\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get Sequence(): number { return this.get(\"Sequence\"); }\r\n    get Value(): string { return this.get(\"Value\"); }\r\n    get Link(): string { return this.get(\"Link\"); }\r\n    get FileName(): string { return this.get(\"FileName\"); }\r\n    get IsSupplied(): boolean { return this.get(\"IsSupplied\"); }\r\n    get ShowFileContent() { return this.get(\"ShowFileContent\"); }\r\n    get Total(): number { return this.get(\"Total\"); }\r\n    get ECLSchemas(): WsWorkunits.ECLSchemas { return this.get(\"ECLSchemas\"); }\r\n    get NodeGroup(): string { return this.get(\"NodeGroup\"); }\r\n    get ResultViews(): string[] { return this.get(\"ResultViews\"); }\r\n    get XmlSchema(): string { return this.get(\"XmlSchema\"); }\r\n\r\n    static attach(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, name: string);\r\n    static attach(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, sequence: number);\r\n    static attach(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, eclResult: WsWorkunits.ECLResult, resultViews: string[]);\r\n    static attach(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, name_sequence_eclResult?: string | number | WsWorkunits.ECLResult, resultViews?: string[]): Result {\r\n        let retVal: Result;\r\n        if (Array.isArray(resultViews)) {\r\n            retVal = _results.get({ BaseUrl: optsConnection.baseUrl, Wuid: wuid, ResultName: (name_sequence_eclResult as WsWorkunits.ECLResult).Name }, () => {\r\n                return new Result(optsConnection, wuid, name_sequence_eclResult as WsWorkunits.ECLResult, resultViews);\r\n            });\r\n            retVal.set(name_sequence_eclResult as any);\r\n        } else if (typeof resultViews === \"undefined\") {\r\n            if (typeof name_sequence_eclResult === \"number\") {\r\n                retVal = _results.get({ BaseUrl: optsConnection.baseUrl, Wuid: wuid, ResultName: \"Sequence_\" + name_sequence_eclResult }, () => {\r\n                    return new Result(optsConnection, wuid, name_sequence_eclResult);\r\n                });\r\n            } else if (typeof name_sequence_eclResult === \"string\") {\r\n                retVal = _results.get({ BaseUrl: optsConnection.baseUrl, Wuid: wuid, ResultName: name_sequence_eclResult }, () => {\r\n                    return new Result(optsConnection, wuid, name_sequence_eclResult);\r\n                });\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    static attachLogicalFile(optsConnection: IOptions | IConnection | WorkunitsService, nodeGroup: string, logicalFile: string) {\r\n        return _results.get({ BaseUrl: optsConnection.baseUrl, Wuid: nodeGroup, ResultName: logicalFile }, () => {\r\n            return new Result(optsConnection, nodeGroup, logicalFile, true);\r\n        });\r\n    }\r\n\r\n    private constructor(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, name: string);\r\n    private constructor(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, sequence: number);\r\n    private constructor(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, eclResult: WsWorkunits.ECLResult, resultViews: string[]);\r\n    private constructor(optsConnection: IOptions | IConnection | WorkunitsService, nodeGroup: string, logicalFile: string, isLogicalFiles: boolean);\r\n    private constructor(optsConnection: IOptions | IConnection | WorkunitsService, wuid_NodeGroup: string, name_sequence_eclResult_logicalFile?: string | number | WsWorkunits.ECLResult, resultViews_isLogicalFile?: any[] | boolean) {\r\n        super();\r\n        if (optsConnection instanceof WorkunitsService) {\r\n            this.connection = optsConnection;\r\n        } else {\r\n            this.connection = new WorkunitsService(optsConnection);\r\n        }\r\n\r\n        if (typeof resultViews_isLogicalFile === \"boolean\" && resultViews_isLogicalFile === true) {\r\n            this.set({\r\n                NodeGroup: wuid_NodeGroup,\r\n                LogicalFileName: name_sequence_eclResult_logicalFile\r\n            } as ECLResultEx);\r\n        } else if (isECLResult(name_sequence_eclResult_logicalFile) && Array.isArray(resultViews_isLogicalFile)) {\r\n            this.set({\r\n                ...name_sequence_eclResult_logicalFile,\r\n                Wuid: wuid_NodeGroup,\r\n                ResultName: name_sequence_eclResult_logicalFile.Name,\r\n                ResultViews: resultViews_isLogicalFile\r\n            } as ECLResultEx);\r\n        } else if (typeof resultViews_isLogicalFile === \"undefined\") {\r\n            if (typeof name_sequence_eclResult_logicalFile === \"number\") {\r\n                this.set({\r\n                    Wuid: wuid_NodeGroup,\r\n                    ResultSequence: name_sequence_eclResult_logicalFile\r\n                } as ECLResultEx);\r\n            } else if (typeof name_sequence_eclResult_logicalFile === \"string\") {\r\n                this.set({\r\n                    Wuid: wuid_NodeGroup,\r\n                    ResultName: name_sequence_eclResult_logicalFile\r\n                } as ECLResultEx);\r\n            } else {\r\n                console.warn(\"Unknown Result.attach (1)\");\r\n            }\r\n        } else {\r\n            console.warn(\"Unknown Result.attach (2)\");\r\n        }\r\n    }\r\n\r\n    isComplete() {\r\n        return this.Total !== -1;\r\n    }\r\n\r\n    private _fetchXMLSchemaPromise: Promise<XSDSchema | null>;\r\n    fetchXMLSchema(refresh = false): Promise<XSDSchema | null> {\r\n        if (!this._fetchXMLSchemaPromise || refresh) {\r\n            this._fetchXMLSchemaPromise = this.WUResult().then(response => {\r\n                if (response.Result?.XmlSchema?.xml) {\r\n                    this.xsdSchema = parseXSD(response.Result.XmlSchema.xml);\r\n                    return this.xsdSchema;\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n        return this._fetchXMLSchemaPromise;\r\n    }\r\n\r\n    async refresh(): Promise<this> {\r\n        await this.fetchRows(0, 1, true);\r\n        return this;\r\n    }\r\n\r\n    fetchRows(from: number = 0, count: number = -1, includeSchema: boolean = false, filter: ResultFilter = {}, abortSignal?: AbortSignal): Promise<any[]> {\r\n        return this.WUResult(from, count, !includeSchema, filter, abortSignal).then((response) => {\r\n            const result: any = response.Result;\r\n            delete response.Result; //  Do not want it in \"set\"\r\n            this.set({\r\n                ...response\r\n            } as any);\r\n            if (exists(\"XmlSchema.xml\", result)) {\r\n                this.xsdSchema = parseXSD(result.XmlSchema.xml);\r\n            }\r\n            if (exists(\"Row\", result)) {\r\n                return result.Row;\r\n            } else if (this.ResultName && exists(this.ResultName, result)) {\r\n                return result[this.ResultName].Row;\r\n            }\r\n            return [];\r\n        });\r\n    }\r\n\r\n    rootField(): XSDXMLNode | null {\r\n        if (!this.xsdSchema) return null;\r\n        return this.xsdSchema.root;\r\n    }\r\n\r\n    fields(): XSDXMLNode[] {\r\n        if (!this.xsdSchema) return [];\r\n        return this.xsdSchema.root.children();\r\n    }\r\n\r\n    protected WUResult(start: number = 0, count: number = 1, suppressXmlSchema: boolean = false, filter: { [key: string]: string | number } = {}, abortSignal?: AbortSignal): Promise<WUResultResponseEx> {\r\n        const FilterBy = {\r\n            NamedValue: {\r\n                itemcount: 0\r\n            }\r\n        };\r\n        for (const key in filter) {\r\n            FilterBy.NamedValue[FilterBy.NamedValue.itemcount++] = {\r\n                Name: key,\r\n                Value: filter[key]\r\n            };\r\n        }\r\n        const request: Partial<WsWorkunits.WUResult> = { FilterBy } as any;\r\n        if (this.Wuid && this.ResultName !== undefined) {\r\n            request.Wuid = this.Wuid;\r\n            request.ResultName = this.ResultName;\r\n        } else if (this.Wuid && this.ResultSequence !== undefined) {\r\n            request.Wuid = this.Wuid;\r\n            request.Sequence = this.ResultSequence;\r\n        } else if (this.LogicalFileName && this.NodeGroup) {\r\n            request.LogicalName = this.LogicalFileName;\r\n            request.Cluster = this.NodeGroup;\r\n        } else if (this.LogicalFileName) {\r\n            request.LogicalName = this.LogicalFileName;\r\n        }\r\n        request.Start = start;\r\n        request.Count = count;\r\n        request.SuppressXmlSchema = suppressXmlSchema;\r\n        return this.connection.WUResult(request, abortSignal).then((response: unknown) => {\r\n            return response as WUResultResponseEx;\r\n        });\r\n    }\r\n}\r\n\r\nexport class ResultCache extends Cache<WsWorkunits.ECLResult, Result> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return Cache.hash([obj.Sequence, obj.Name, obj.Value, obj.FileName]);\r\n        });\r\n    }\r\n}\r\n","import { StateObject, StringAnyMap } from \"@hpcc-js/util\";\r\n// import { utcFormat, utcParse } from \"d3-time-format\";\r\nimport { WsWorkunits } from \"../services/wsWorkunits\";\r\nimport { Workunit } from \"./workunit\";\r\n\r\n// const formatter = utcFormat(\"%Y-%m-%dT%H:%M:%S.%LZ\");\r\n// const parser = utcParse(\"%Y-%m-%dT%H:%M:%S.%LZ\");\r\n\r\nexport interface AttributeEx extends WsWorkunits.Property {\r\n    FormattedEnd?: string;\r\n}\r\n\r\nexport class Attribute extends StateObject<AttributeEx, AttributeEx> implements AttributeEx {\r\n    readonly scope: BaseScope;\r\n\r\n    get properties(): AttributeEx { return this.get(); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get RawValue(): string { return this.get(\"RawValue\"); }\r\n    get Formatted(): string { return this.get(\"Formatted\"); }\r\n    get FormattedEnd(): string | undefined { return this.get(\"FormattedEnd\"); }\r\n    get Measure(): string { return this.get(\"Measure\"); }\r\n    get Creator(): string { return this.get(\"Creator\"); }\r\n    get CreatorType(): string { return this.get(\"CreatorType\"); }\r\n\r\n    constructor(scope: BaseScope, attribute: WsWorkunits.Property) {\r\n        super();\r\n        this.scope = scope;\r\n        this.set(attribute);\r\n    }\r\n}\r\n\r\nexport interface ScopeEx extends WsWorkunits.Scope {\r\n}\r\n\r\nexport interface IScopeVisitor {\r\n    start(scope: BaseScope): boolean;\r\n    end(scope: BaseScope): boolean;\r\n}\r\n\r\nexport class BaseScope extends StateObject<ScopeEx, ScopeEx> implements ScopeEx {\r\n    protected _attributeMap: { [key: string]: Attribute } = {};\r\n    protected _children: BaseScope[] = [];\r\n\r\n    get properties(): ScopeEx { return this.get(); }\r\n    get ScopeName(): string { return this.get(\"ScopeName\"); }\r\n    get Id(): string { return this.get(\"Id\"); }\r\n    get ScopeType(): string { return this.get(\"ScopeType\"); }\r\n    get Properties(): WsWorkunits.Properties { return this.get(\"Properties\", { Property: [] }); }\r\n    get Notes(): WsWorkunits.Notes { return this.get(\"Notes\", { Note: [] }); }\r\n    get SinkActivity(): string { return this.get(\"SinkActivity\"); }\r\n    get CAttributes(): Attribute[] {\r\n        //  Match \"started\" and time elapsed\r\n        const retVal: Attribute[] = [];\r\n        const timeElapsed: { start: AttributeEx | null, end: AttributeEx | null } = {\r\n            start: null,\r\n            end: null\r\n        };\r\n        this.Properties.Property.forEach((scopeAttr) => {\r\n            if (scopeAttr.Measure === \"ts\" && scopeAttr.Name.indexOf(\"Started\") >= 0) {\r\n                timeElapsed.start = scopeAttr;\r\n            } else if (this.ScopeName && scopeAttr.Measure === \"ts\" && scopeAttr.Name.indexOf(\"Finished\") >= 0) {\r\n                timeElapsed.end = scopeAttr;\r\n            } else {\r\n                retVal.push(new Attribute(this, scopeAttr));\r\n            }\r\n        });\r\n        if (timeElapsed.start && timeElapsed.end) {\r\n            // const endTime = parser(timeElapsed.start.Formatted);\r\n            // endTime!.setMilliseconds(endTime!.getMilliseconds() + (+timeElapsed.elapsed.RawValue) / 1000000);\r\n            // timeElapsed.start.FormattedEnd = formatter(endTime!);\r\n            timeElapsed.start.FormattedEnd = timeElapsed.end.Formatted;\r\n            retVal.push(new Attribute(this, timeElapsed.start));\r\n        } else if (timeElapsed.start) {\r\n            retVal.push(new Attribute(this, timeElapsed.start));\r\n        } else if (timeElapsed.end) {\r\n            retVal.push(new Attribute(this, timeElapsed.end));  //  Should not happen?\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    constructor(scope: WsWorkunits.Scope) {\r\n        super();\r\n        this.update(scope);\r\n    }\r\n\r\n    update(scope: WsWorkunits.Scope) {\r\n        this.set(scope);\r\n        this.CAttributes.forEach((attr) => {\r\n            this._attributeMap[attr.Name] = attr;\r\n        });\r\n        this.Properties.Property = [];\r\n        for (const key in this._attributeMap) {\r\n            if (this._attributeMap.hasOwnProperty(key)) {\r\n                this.Properties.Property.push(this._attributeMap[key].properties);\r\n            }\r\n        }\r\n    }\r\n\r\n    parentScope(): string {\r\n        const scopeParts = this.ScopeName.split(\":\");\r\n        scopeParts.pop();\r\n        return scopeParts.join(\":\");\r\n    }\r\n\r\n    children(): BaseScope[];\r\n    children(_: BaseScope[]): BaseScope;\r\n    children(_?: BaseScope[]): BaseScope[] | BaseScope {\r\n        if (!arguments.length) return this._children;\r\n        this._children = _!;\r\n        return this;\r\n    }\r\n\r\n    walk(visitor: IScopeVisitor): boolean {\r\n        if (visitor.start(this)) return true;\r\n        for (const scope of this.children()) {\r\n            if (scope.walk(visitor)) {\r\n                return true;\r\n            }\r\n        }\r\n        return visitor.end(this);\r\n    }\r\n\r\n    formattedAttrs(): StringAnyMap {\r\n        const retVal: StringAnyMap = {};\r\n        for (const attr in this._attributeMap) {\r\n            retVal[attr] = this._attributeMap[attr].Formatted || this._attributeMap[attr].RawValue;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    rawAttrs(): StringAnyMap {\r\n        const retVal: StringAnyMap = {};\r\n        for (const attr in this._attributeMap) {\r\n            retVal[attr] = this._attributeMap[attr].RawValue;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    hasAttr(name: string): boolean {\r\n        return this._attributeMap[name] !== undefined;\r\n    }\r\n\r\n    attr(name: string): Attribute {\r\n        return this._attributeMap[name] || new Attribute(this, {\r\n            Creator: \"\",\r\n            CreatorType: \"\",\r\n            Formatted: \"\",\r\n            Measure: \"\",\r\n            Name: \"\",\r\n            RawValue: \"\"\r\n        });\r\n    }\r\n\r\n    attrMeasure(name: string): string {\r\n        return this._attributeMap[name].Measure;\r\n    }\r\n\r\n    calcTooltip(parentScope?: BaseScope) {\r\n        let label = \"\";\r\n        const rows: string[] = [];\r\n        label = this.Id;\r\n        rows.push(`<tr><td class=\"key\">ID:</td><td class=\"value\">${this.Id}</td></tr>`);\r\n        if (parentScope) {\r\n            rows.push(`<tr><td class=\"key\">Parent ID:</td><td class=\"value\">${parentScope.Id}</td></tr>`);\r\n        }\r\n        rows.push(`<tr><td class=\"key\">Scope:</td><td class=\"value\">${this.ScopeName}</td></tr>`);\r\n        const attrs = this.formattedAttrs();\r\n        for (const key in attrs) {\r\n            if (key === \"Label\") {\r\n                label = attrs[key];\r\n            } else {\r\n                rows.push(`<tr><td class=\"key\">${key}</td><td class=\"value\">${attrs[key]}</td></tr>`);\r\n            }\r\n        }\r\n\r\n        return `<div class=\"eclwatch_WUGraph_Tooltip\" style=\"max-width:480px\">\r\n            <h4 align=\"center\">${label}</h4>\r\n            <table>\r\n                ${rows.join(\"\")}\r\n            </table>\r\n        </div>`;\r\n    }\r\n}\r\n\r\nexport class Scope extends BaseScope {\r\n    readonly wu: Workunit;\r\n\r\n    constructor(wu: Workunit, scope: WsWorkunits.Scope) {\r\n        super(scope);\r\n        this.wu = wu;\r\n    }\r\n}\r\n","import { StateObject } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { WorkunitsService, WsWorkunits } from \"../services/wsWorkunits\";\r\n\r\nexport interface ECLSourceFileEx extends WsWorkunits.ECLSourceFile {\r\n    Wuid: string;\r\n}\r\n\r\nexport class SourceFile extends StateObject<ECLSourceFileEx, ECLSourceFileEx> implements ECLSourceFileEx {\r\n    protected connection: WorkunitsService;\r\n\r\n    get properties(): WsWorkunits.ECLSourceFile { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get FileCluster(): string { return this.get(\"FileCluster\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get IsSuperFile(): boolean { return this.get(\"IsSuperFile\"); }\r\n    get Subs(): number { return this.get(\"Subs\"); }\r\n    get Count(): number { return this.get(\"Count\"); }\r\n    get ECLSourceFiles(): WsWorkunits.ECLSourceFiles { return this.get(\"ECLSourceFiles\"); }\r\n\r\n    constructor(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, eclSourceFile: WsWorkunits.ECLSourceFile) {\r\n        super();\r\n        if (optsConnection instanceof WorkunitsService) {\r\n            this.connection = optsConnection;\r\n        } else {\r\n            this.connection = new WorkunitsService(optsConnection);\r\n        }\r\n\r\n        this.set({\r\n            Wuid: wuid,\r\n            ...eclSourceFile\r\n        });\r\n    }\r\n}\r\n","import { espTime2Seconds, StateObject } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { WorkunitsService, WsWorkunits } from \"../services/wsWorkunits\";\r\n\r\nexport interface ECLTimerEx extends WsWorkunits.ECLTimer {\r\n    Wuid: string;\r\n    Seconds: number;\r\n    HasSubGraphId: boolean;\r\n}\r\n\r\nexport class Timer extends StateObject<ECLTimerEx, ECLTimerEx> implements ECLTimerEx {\r\n    protected connection: WorkunitsService;\r\n\r\n    get properties(): WsWorkunits.ECLTimer { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get Value(): string { return this.get(\"Value\"); }\r\n    get Seconds(): number { return this.get(\"Seconds\"); }\r\n    get GraphName(): string { return this.get(\"GraphName\"); }\r\n    get SubGraphId(): number { return this.get(\"SubGraphId\"); }\r\n    get HasSubGraphId(): boolean { return this.get(\"HasSubGraphId\"); }\r\n    get count(): number { return this.get(\"count\"); }\r\n    get Timestamp(): number { return this.get(\"Timestamp\"); }\r\n    get When(): string { return this.get(\"When\"); }\r\n\r\n    constructor(optsConnection: IOptions | IConnection | WorkunitsService, wuid: string, eclTimer: WsWorkunits.ECLTimer) {\r\n        super();\r\n        if (optsConnection instanceof WorkunitsService) {\r\n            this.connection = optsConnection;\r\n        } else {\r\n            this.connection = new WorkunitsService(optsConnection);\r\n        }\r\n\r\n        const secs = espTime2Seconds(eclTimer.Value);\r\n        this.set({\r\n            Wuid: wuid,\r\n            Seconds: Math.round(secs * 1000) / 1000,\r\n            HasSubGraphId: eclTimer.SubGraphId !== undefined,\r\n            ...eclTimer\r\n        });\r\n    }\r\n}\r\n","import { Cache, deepMixinT, IEvent, RecursivePartial, scopedLogger, StateCallback, StateEvents, StateObject, StatePropCallback, StringAnyMap, XMLNode } from \"@hpcc-js/util\";\r\nimport { format as d3Format } from \"d3-format\";\r\nimport { utcFormat, utcParse } from \"d3-time-format\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { ESPExceptions } from \"../espConnection\";\r\nimport { WsSMC } from \"../services/wsSMC\";\r\nimport * as WsTopology from \"../services/wsTopology\";\r\nimport { WsWorkunits, WUStateID, WorkunitsService, WorkunitsServiceEx, WUUpdate } from \"../services/wsWorkunits\";\r\nimport { createGraph, createXGMMLGraph, ECLGraph, GraphCache, ScopeGraph, XGMMLGraph, XGMMLVertex } from \"./graph\";\r\nimport { Resource } from \"./resource\";\r\nimport { Result, ResultCache } from \"./result\";\r\nimport { BaseScope, Scope } from \"./scope\";\r\nimport { SourceFile } from \"./sourceFile\";\r\nimport { Timer } from \"./timer\";\r\n\r\nconst formatter = utcFormat(\"%Y-%m-%dT%H:%M:%S.%LZ\");\r\nconst parser = utcParse(\"%Y-%m-%dT%H:%M:%S.%LZ\");\r\nconst d3FormatNum = d3Format(\",\");\r\nfunction formatNum(num: number | string): string {\r\n    if (num && !isNaN(+num)) {\r\n        return d3FormatNum(+num);\r\n    }\r\n    return num as string;\r\n}\r\n\r\nfunction safeDelete(obj: { [id: string]: any; }, key: string, prop: string) {\r\n    if (obj[key] === undefined || obj[key][prop] === undefined) return;\r\n    if (key === \"__proto__\" || key === \"constructor\" || key === \"prototype\") return;\r\n    delete obj[key][prop];\r\n}\r\n\r\nconst DEFINITION_LIST = \"DefinitionList\";\r\nconst definitionRegex = /([a-zA-Z]:)?(.*[\\\\\\/])(.*)(\\((\\d+),(\\d+)\\))/;\r\n\r\nexport const PropertyType = [\"Avg\", \"Min\", \"Max\", \"Delta\", \"StdDev\"];\r\nexport const RelatedProperty = [\"SkewMin\", \"SkewMax\", \"NodeMin\", \"NodeMax\"];\r\n\r\nexport interface IPropertyValue {\r\n    Key: string;\r\n    Value?: string;\r\n\r\n    //  Extended properties  ---\r\n    Avg?: string;\r\n    Min?: string;\r\n    Max?: string;\r\n    Delta?: string;\r\n    StdDev?: string;\r\n    StdDevs?: number;\r\n\r\n    // Related properties  ---\r\n    SkewMin?: string;\r\n    SkewMax?: string;\r\n    NodeMin?: string;\r\n    NodeMax?: string;\r\n}\r\n\r\nexport interface IScope {\r\n    __parentName?: string;\r\n    __children?: IScope[];\r\n    __formattedProps: { [key: string]: any };\r\n    __groupedProps: { [key: string]: IPropertyValue };\r\n    __StdDevs: number,\r\n    __StdDevsSource: string,\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    Kind: string;\r\n    Label: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface ISplitMetric {\r\n    measure: string;\r\n    ext: string;\r\n    label: string;\r\n}\r\n\r\nconst metricKeyRegex = /[A-Z][a-z]*/g;\r\nfunction _splitMetric(fullLabel: string): ISplitMetric {\r\n\r\n    // Related properties  ---\r\n    for (const relProp of RelatedProperty) {\r\n        const index = fullLabel.indexOf(relProp);\r\n        if (index === 0) {\r\n            const measure = \"\";\r\n            const label = fullLabel.slice(index + relProp.length);\r\n            return { measure, ext: relProp, label };\r\n        }\r\n    }\r\n\r\n    // Primary properties  ---\r\n    const labelParts = fullLabel.match(metricKeyRegex);\r\n    if (labelParts?.length) {\r\n        const measure = labelParts.shift();\r\n        let label = labelParts.join(\"\");\r\n        for (const ext of PropertyType) {\r\n            const index = label.indexOf(ext);\r\n            if (index === 0) {\r\n                label = label.slice(index + ext.length);\r\n                return { measure, ext, label };\r\n            }\r\n        }\r\n        // Not an aggregate property  ---\r\n        return { measure, ext: \"\", label };\r\n    }\r\n\r\n    // No match found  ---\r\n    return { measure: \"\", ext: \"\", label: fullLabel };\r\n}\r\n\r\nconst splitLabelCache: { [key: string]: ISplitMetric } = {};\r\nexport function splitMetric(key: string): ISplitMetric {\r\n    let retVal = splitLabelCache[key];\r\n    if (!retVal) {\r\n        retVal = _splitMetric(key);\r\n        splitLabelCache[key] = retVal;\r\n    }\r\n    return retVal;\r\n}\r\n\r\nfunction formatValue(item: IScope, key: string): string | undefined {\r\n    return item.__formattedProps?.[key] ?? item[key];\r\n}\r\n\r\ntype DedupProperties = { [key: string]: boolean };\r\n\r\nfunction safeParseFloat(val: string | undefined): number | undefined {\r\n    if (val === undefined) return undefined;\r\n    const retVal = parseFloat(val);\r\n    return isNaN(retVal) ? undefined : retVal;\r\n}\r\n\r\nfunction formatValues(item: IScope, key: string, dedup: DedupProperties): IPropertyValue | null {\r\n    const keyParts = splitMetric(key);\r\n    if (!dedup[keyParts.measure]) {\r\n        dedup[keyParts.label] = true;\r\n        const avg = safeParseFloat(item[`${keyParts.measure}Avg${keyParts.label}`]);\r\n        const min = safeParseFloat(item[`${keyParts.measure}Min${keyParts.label}`]);\r\n        const max = safeParseFloat(item[`${keyParts.measure}Max${keyParts.label}`]);\r\n        const stdDev = safeParseFloat(item[`${keyParts.measure}StdDev${keyParts.label}`]);\r\n        const StdDevs = Math.max((avg - min) / stdDev, (max - avg) / stdDev);\r\n\r\n        return {\r\n            Key: `${keyParts.measure}${keyParts.label}`,\r\n            Value: formatValue(item, `${keyParts.measure}${keyParts.label}`),\r\n\r\n            //  Extended properties  ---\r\n            Avg: formatValue(item, `${keyParts.measure}Avg${keyParts.label}`),\r\n            Min: formatValue(item, `${keyParts.measure}Min${keyParts.label}`),\r\n            Max: formatValue(item, `${keyParts.measure}Max${keyParts.label}`),\r\n            Delta: formatValue(item, `${keyParts.measure}Delta${keyParts.label}`),\r\n            StdDev: formatValue(item, `${keyParts.measure}StdDev${keyParts.label}`),\r\n            StdDevs: isNaN(StdDevs) ? undefined : StdDevs,\r\n\r\n            // Related properties  ---\r\n            SkewMin: formatValue(item, `SkewMin${keyParts.label}`),\r\n            SkewMax: formatValue(item, `SkewMax${keyParts.label}`),\r\n            NodeMin: formatValue(item, `NodeMin${keyParts.label}`),\r\n            NodeMax: formatValue(item, `NodeMax${keyParts.label}`)\r\n        };\r\n    }\r\n    return null;\r\n}\r\n\r\nconst logger = scopedLogger(\"workunit.ts\");\r\n\r\nexport class WorkunitCache extends Cache<{ BaseUrl: string, Wuid: string }, Workunit> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return `${obj.BaseUrl}-${obj.Wuid}`;\r\n        });\r\n    }\r\n}\r\nconst _workunits = new WorkunitCache();\r\n\r\nexport interface DebugState {\r\n    sequence: number;\r\n    state: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface IWorkunit {\r\n    ResultViews: WsWorkunits.ResultViews;\r\n    HelpersCount: number;\r\n}\r\n\r\nexport interface IDebugWorkunit {\r\n    DebugState?: DebugState;\r\n}\r\n\r\nexport interface ITimeElapsed {\r\n    scope: string;\r\n    start: string;\r\n    elapsed: number;\r\n    finish: string;\r\n}\r\n\r\nexport type WorkunitEvents = \"completed\" | StateEvents;\r\nexport type UWorkunitState = WsWorkunits.ECLWorkunit & WsWorkunits.Workunit & WsSMC.ActiveWorkunit & IWorkunit & IDebugWorkunit;\r\nexport type IWorkunitState = WsWorkunits.ECLWorkunit | WsWorkunits.Workunit | WsSMC.ActiveWorkunit | IWorkunit | IDebugWorkunit;\r\nexport class Workunit extends StateObject<UWorkunitState, IWorkunitState> implements WsWorkunits.Workunit {\r\n    connection: WorkunitsService;\r\n    topologyConnection: WsTopology.TopologyService;\r\n    get BaseUrl() { return this.connection.baseUrl; }\r\n\r\n    private _debugMode: boolean = false;\r\n    private _debugAllGraph: any;\r\n    private _submitAction: WUUpdate.Action;\r\n\r\n    //  Accessors  ---\r\n    get properties(): WsWorkunits.ECLWorkunit & WsWorkunits.Workunit { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get Owner(): string { return this.get(\"Owner\", \"\"); }\r\n    get Cluster(): string { return this.get(\"Cluster\", \"\"); }\r\n    get Jobname(): string { return this.get(\"Jobname\", \"\"); }\r\n    get Description(): string { return this.get(\"Description\", \"\"); }\r\n    get ActionEx(): string { return this.get(\"ActionEx\", \"\"); }\r\n    get StateID(): WUStateID { return this.get(\"StateID\", WUStateID.Unknown); }\r\n    get State(): string { return this.get(\"State\") || WUStateID[this.StateID]; }\r\n    get Protected(): boolean { return this.get(\"Protected\", false); }\r\n    get Exceptions(): WsWorkunits.Exceptions2 { return this.get(\"Exceptions\", { ECLException: [] }); }\r\n    get ResultViews(): WsWorkunits.ResultViews { return this.get(\"ResultViews\", { View: [] }); }\r\n\r\n    private _resultCache = new ResultCache();\r\n    get ResultCount(): number { return this.get(\"ResultCount\", 0); }\r\n    get Results(): WsWorkunits.Results { return this.get(\"Results\", { ECLResult: [] }); }\r\n    get CResults(): Result[] {\r\n        return this.Results.ECLResult.map((eclResult) => {\r\n            return this._resultCache.get(eclResult, () => {\r\n                return Result.attach(this.connection, this.Wuid, eclResult, this.ResultViews.View);\r\n            });\r\n        });\r\n    }\r\n    get SequenceResults(): { [key: number]: Result } {\r\n        const retVal: { [key: number]: Result } = {};\r\n        this.CResults.forEach((result) => {\r\n            retVal[result.Sequence] = result;\r\n        });\r\n        return retVal;\r\n    }\r\n    get Timers(): WsWorkunits.Timers { return this.get(\"Timers\", { ECLTimer: [] }); }\r\n    get CTimers(): Timer[] {\r\n        return this.Timers.ECLTimer.map((eclTimer) => {\r\n            return new Timer(this.connection, this.Wuid, eclTimer);\r\n        });\r\n    }\r\n\r\n    private _graphCache = new GraphCache();\r\n    get GraphCount(): number { return this.get(\"GraphCount\", 0); }\r\n    get Graphs(): WsWorkunits.Graphs { return this.get(\"Graphs\", { ECLGraph: [] }); }\r\n    get CGraphs(): ECLGraph[] {\r\n        return this.Graphs.ECLGraph.map((eclGraph) => {\r\n            return this._graphCache.get(eclGraph, () => {\r\n                return new ECLGraph(this, eclGraph, this.CTimers);\r\n            });\r\n        });\r\n    }\r\n    get ThorLogList(): WsWorkunits.ThorLogList { return this.get(\"ThorLogList\"); }\r\n    get ResourceURLCount(): number { return this.get(\"ResourceURLCount\", 0); }\r\n    get ResourceURLs(): WsWorkunits.ResourceURLs { return this.get(\"ResourceURLs\", { URL: [] }); }\r\n    get CResourceURLs(): Resource[] {\r\n        return this.ResourceURLs.URL.map((url) => {\r\n            return new Resource(this, url);\r\n        });\r\n    }\r\n    get TotalClusterTime(): string { return this.get(\"TotalClusterTime\", \"\"); }\r\n    get DateTimeScheduled(): string { return this.get(\"DateTimeScheduled\"); }\r\n    get IsPausing(): boolean { return this.get(\"IsPausing\"); }\r\n    get ThorLCR(): boolean { return this.get(\"ThorLCR\"); }\r\n    get ApplicationValues(): WsWorkunits.ApplicationValues { return this.get(\"ApplicationValues\", { ApplicationValue: [] }); }\r\n    get HasArchiveQuery(): boolean { return this.get(\"HasArchiveQuery\"); }\r\n    get StateEx(): string { return this.get(\"StateEx\"); }\r\n    get PriorityClass(): number { return this.get(\"PriorityClass\"); }\r\n    get PriorityLevel(): number { return this.get(\"PriorityLevel\"); }\r\n    get Snapshot(): string { return this.get(\"Snapshot\"); }\r\n    get ResultLimit(): number { return this.get(\"ResultLimit\"); }\r\n    get EventSchedule(): number { return this.get(\"EventSchedule\"); }\r\n    get Query(): WsWorkunits.Query { return this.get(\"Query\"); }\r\n    get HelpersCount(): number { return this.get(\"HelpersCount\", 0); }\r\n    get Helpers(): WsWorkunits.Helpers { return this.get(\"Helpers\", { ECLHelpFile: [] }); }\r\n    get DebugValues(): WsWorkunits.DebugValues { return this.get(\"DebugValues\"); }\r\n    get AllowedClusters(): WsWorkunits.AllowedClusters { return this.get(\"AllowedClusters\"); }\r\n    get ErrorCount(): number { return this.get(\"ErrorCount\", 0); }\r\n    get WarningCount(): number { return this.get(\"WarningCount\", 0); }\r\n    get InfoCount(): number { return this.get(\"InfoCount\", 0); }\r\n    get AlertCount(): number { return this.get(\"AlertCount\", 0); }\r\n    get SourceFileCount(): number { return this.get(\"SourceFileCount\", 0); }\r\n    get SourceFiles(): WsWorkunits.SourceFiles { return this.get(\"SourceFiles\", { ECLSourceFile: [] }); }\r\n    get CSourceFiles(): SourceFile[] {\r\n        return this.SourceFiles.ECLSourceFile.map(eclSourceFile => new SourceFile(this.connection, this.Wuid, eclSourceFile));\r\n    }\r\n    get VariableCount(): number { return this.get(\"VariableCount\", 0); }\r\n    get Variables(): WsWorkunits.Variables { return this.get(\"Variables\", { ECLResult: [] }); }\r\n    get TimerCount(): number { return this.get(\"TimerCount\", 0); }\r\n    get HasDebugValue(): boolean { return this.get(\"HasDebugValue\"); }\r\n    get ApplicationValueCount(): number { return this.get(\"ApplicationValueCount\", 0); }\r\n    get XmlParams(): string { return this.get(\"XmlParams\"); }\r\n    get AccessFlag(): number { return this.get(\"AccessFlag\"); }\r\n    get ClusterFlag(): number { return this.get(\"ClusterFlag\"); }\r\n    get ResultViewCount(): number { return this.get(\"ResultViewCount\", 0); }\r\n    get DebugValueCount(): number { return this.get(\"DebugValueCount\", 0); }\r\n    get WorkflowCount(): number { return this.get(\"WorkflowCount\", 0); }\r\n    get Archived(): boolean { return this.get(\"Archived\"); }\r\n    get RoxieCluster(): string { return this.get(\"RoxieCluster\"); }\r\n    get DebugState(): DebugState { return this.get(\"DebugState\", {} as DebugState)!; }\r\n    get Queue(): string { return this.get(\"Queue\"); }\r\n    get Active(): boolean { return this.get(\"Active\"); }\r\n    get Action(): number { return this.get(\"Action\"); }\r\n    get Scope(): string { return this.get(\"Scope\"); }\r\n    get AbortBy(): string { return this.get(\"AbortBy\"); }\r\n    get AbortTime(): string { return this.get(\"AbortTime\"); }\r\n    get Workflows(): WsWorkunits.Workflows { return this.get(\"Workflows\"); }\r\n    get TimingData(): WsWorkunits.TimingData { return this.get(\"TimingData\"); }\r\n    get HelpersDesc(): string { return this.get(\"HelpersDesc\"); }\r\n    get GraphsDesc(): string { return this.get(\"GraphsDesc\"); }\r\n    get SourceFilesDesc(): string { return this.get(\"SourceFilesDesc\"); }\r\n    get ResultsDesc(): string { return this.get(\"ResultsDesc\"); }\r\n    get VariablesDesc(): string { return this.get(\"VariablesDesc\"); }\r\n    get TimersDesc(): string { return this.get(\"TimersDesc\"); }\r\n    get DebugValuesDesc(): string { return this.get(\"DebugValuesDesc\"); }\r\n    get ApplicationValuesDesc(): string { return this.get(\"ApplicationValuesDesc\"); }\r\n    get WorkflowsDesc(): string { return this.get(\"WorkflowsDesc\"); }\r\n    get ServiceNames(): WsWorkunits.ServiceNames { return this.get(\"ServiceNames\"); }\r\n    get CompileCost(): number { return this.get(\"CompileCost\"); }\r\n    get ExecuteCost(): number { return this.get(\"ExecuteCost\"); }\r\n    get FileAccessCost(): number { return this.get(\"FileAccessCost\"); }\r\n    get NoAccess(): boolean { return this.get(\"NoAccess\"); }\r\n    get ECLWUProcessList(): WsWorkunits.ECLWUProcessList { return this.get(\"ECLWUProcessList\"); }\r\n\r\n    //  Factories  ---\r\n    static create(optsConnection: IOptions | IConnection): Promise<Workunit> {\r\n        const retVal: Workunit = new Workunit(optsConnection);\r\n        return retVal.connection.WUCreate().then((response) => {\r\n            _workunits.set(retVal);\r\n            retVal.set(response.Workunit);\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    static attach(optsConnection: IOptions | IConnection, wuid: string, state?: IWorkunitState): Workunit {\r\n        const retVal: Workunit = _workunits.get({ BaseUrl: optsConnection.baseUrl, Wuid: wuid }, () => {\r\n            return new Workunit(optsConnection, wuid);\r\n        });\r\n        if (state) {\r\n            retVal.set(state);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    static existsLocal(baseUrl: string, wuid: string): boolean {\r\n        return _workunits.has({ BaseUrl: baseUrl, Wuid: wuid });\r\n    }\r\n\r\n    static submit(server: IOptions | IConnection, target: string, ecl: string, compileOnly = false): Promise<Workunit> {\r\n        return Workunit.create(server).then((wu) => {\r\n            return wu.update({ QueryText: ecl });\r\n        }).then((wu) => {\r\n            return compileOnly ? wu.submit(target, WUUpdate.Action.Compile) : wu.submit(target);\r\n        });\r\n    }\r\n\r\n    static compile(server: IOptions | IConnection, target: string, ecl: string): Promise<Workunit> {\r\n        return Workunit.submit(server, target, ecl, true);\r\n    }\r\n\r\n    static query(server: IOptions | IConnection, opts: Partial<WsWorkunits.WUQuery>): Promise<Workunit[]> {\r\n        const wsWorkunits = new WorkunitsService(server);\r\n        return wsWorkunits.WUQuery(opts).then((response) => {\r\n            return response.Workunits.ECLWorkunit.map(function (wu) {\r\n                return Workunit.attach(server, wu.Wuid, wu);\r\n            });\r\n        });\r\n    }\r\n\r\n    //  ---  ---  ---\r\n    protected constructor(optsConnection: IOptions | IConnection, wuid?: string) {\r\n        super();\r\n        this.connection = new WorkunitsService(optsConnection);\r\n        this.topologyConnection = new WsTopology.TopologyService(optsConnection);\r\n        this.clearState(wuid);\r\n    }\r\n\r\n    clearState(wuid?: string) {\r\n        this.clear({\r\n            Wuid: wuid,\r\n            StateID: WUStateID.Unknown\r\n        });\r\n    }\r\n\r\n    update(request: Partial<WsWorkunits.WUUpdate>): Promise<Workunit> {\r\n        return this.connection.WUUpdate({\r\n            ...request,\r\n            ...{\r\n                Wuid: this.Wuid,\r\n                StateOrig: this.StateID,\r\n                JobnameOrig: this.Jobname,\r\n                DescriptionOrig: this.Description,\r\n                ProtectedOrig: this.Protected,\r\n                ClusterOrig: this.Cluster\r\n            }\r\n        }).then((response) => {\r\n            this.set(response.Workunit);\r\n            return this;\r\n        });\r\n    }\r\n\r\n    submit(_cluster?: string, action: WUUpdate.Action = WUUpdate.Action.Run, resultLimit?: number): Promise<Workunit> {\r\n        let clusterPromise;\r\n        if (_cluster !== void 0) {\r\n            clusterPromise = Promise.resolve(_cluster);\r\n        } else {\r\n            clusterPromise = this.topologyConnection.DefaultTpLogicalClusterQuery().then((response) => {\r\n                return response.Name;\r\n            });\r\n        }\r\n\r\n        this._debugMode = false;\r\n        if (action === WUUpdate.Action.Debug) {\r\n            action = WUUpdate.Action.Run;\r\n            this._debugMode = true;\r\n        }\r\n\r\n        return clusterPromise.then((cluster) => {\r\n            return this.connection.WUUpdate({\r\n                Wuid: this.Wuid,\r\n                Action: action,\r\n                ResultLimit: resultLimit,\r\n                DebugValues: {\r\n                    DebugValue: [\r\n                        {\r\n                            Name: \"Debug\",\r\n                            Value: this._debugMode ? \"1\" : \"\"\r\n                        }\r\n                    ]\r\n                }\r\n            }).then((response) => {\r\n                this.set(response.Workunit);\r\n                this._submitAction = action;\r\n                return this.connection.WUSubmit({ Wuid: this.Wuid, Cluster: cluster });\r\n            });\r\n        }).then(() => {\r\n            return this;\r\n        });\r\n    }\r\n\r\n    isComplete(): boolean {\r\n        switch (this.StateID) {\r\n            case WUStateID.Compiled:\r\n                return this.ActionEx === \"compile\" || this._submitAction === WUUpdate.Action.Compile;\r\n            case WUStateID.Completed:\r\n            case WUStateID.Failed:\r\n            case WUStateID.Aborted:\r\n            case WUStateID.NotFound:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isFailed() {\r\n        switch (this.StateID) {\r\n            case WUStateID.Aborted:\r\n            case WUStateID.Failed:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDeleted() {\r\n        switch (this.StateID) {\r\n            case WUStateID.NotFound:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDebugging() {\r\n        switch (this.StateID) {\r\n            case WUStateID.DebugPaused:\r\n            case WUStateID.DebugRunning:\r\n                return true;\r\n            default:\r\n        }\r\n        return this._debugMode;\r\n    }\r\n\r\n    isRunning(): boolean {\r\n        switch (this.StateID) {\r\n            case WUStateID.Compiled:\r\n            case WUStateID.Running:\r\n            case WUStateID.Aborting:\r\n            case WUStateID.Blocked:\r\n            case WUStateID.DebugPaused:\r\n            case WUStateID.DebugRunning:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setToFailed() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.SetToFailed);\r\n    }\r\n\r\n    pause() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Pause);\r\n    }\r\n\r\n    pauseNow() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.PauseNow);\r\n    }\r\n\r\n    resume() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Resume);\r\n    }\r\n\r\n    abort() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Abort);\r\n    }\r\n\r\n    protect() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Protect);\r\n    }\r\n\r\n    unprotect() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Unprotect);\r\n    }\r\n\r\n    delete() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Delete);\r\n    }\r\n\r\n    restore() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Restore);\r\n    }\r\n\r\n    deschedule() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Deschedule);\r\n    }\r\n\r\n    reschedule() {\r\n        return this.WUAction(WsWorkunits.ECLWUActions.Reschedule);\r\n    }\r\n\r\n    resubmit(): Promise<Workunit> {\r\n        return this.WUResubmit({\r\n            CloneWorkunit: false,\r\n            ResetWorkflow: false\r\n        }).then(() => {\r\n            this.clearState(this.Wuid);\r\n            return this.refresh().then(() => {\r\n                this._monitor();\r\n                return this;\r\n            });\r\n        });\r\n    }\r\n\r\n    clone(): Promise<Workunit> {\r\n        return this.WUResubmit({\r\n            CloneWorkunit: true,\r\n            ResetWorkflow: false\r\n        }).then((response) => {\r\n            return Workunit.attach(this.connection.opts(), response.WUs.WU[0].WUID)\r\n                .refresh()\r\n                ;\r\n        });\r\n    }\r\n\r\n    async refreshState(): Promise<this> {\r\n        await this.WUQuery();\r\n        // Ensure \"isComplete\" is correct for WUs that are only \"Compiled\".\r\n        if (this.StateID === WUStateID.Compiled && !this.ActionEx && !this._submitAction) {\r\n            await this.refreshInfo();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    async refreshInfo(request?: Partial<WsWorkunits.WUInfo>): Promise<this> {\r\n        await this.WUInfo(request);\r\n        return this;\r\n    }\r\n\r\n    async refreshDebug(): Promise<this> {\r\n        await this.debugStatus();\r\n        return this;\r\n    }\r\n\r\n    async refresh(full: boolean = false, request?: Partial<WsWorkunits.WUInfo>): Promise<this> {\r\n        if (full) {\r\n            await Promise.all([this.refreshInfo(request), this.refreshDebug()]);\r\n        } else {\r\n            await this.refreshState();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    eclExceptions(): WsWorkunits.ECLException[] {\r\n        return this.Exceptions.ECLException;\r\n    }\r\n\r\n    fetchArchive(): Promise<string> {\r\n        return this.connection.WUFileEx({\r\n            Wuid: this.Wuid,\r\n            Type: \"ArchiveQuery\"\r\n        });\r\n    }\r\n\r\n    fetchECLExceptions(): Promise<WsWorkunits.ECLException[]> {\r\n        return this.WUInfo({ IncludeExceptions: true }).then(() => {\r\n            return this.eclExceptions();\r\n        });\r\n    }\r\n\r\n    fetchResults(): Promise<Result[]> {\r\n        return this.WUInfo({ IncludeResults: true }).then(() => {\r\n            return this.CResults;\r\n        });\r\n    }\r\n\r\n    fetchGraphs(): Promise<ECLGraph[]> {\r\n        return this.WUInfo({ IncludeGraphs: true }).then(() => {\r\n            return this.CGraphs;\r\n        });\r\n    }\r\n\r\n    fetchQuery(): Promise<WsWorkunits.Query> {\r\n        return this.WUInfo({ IncludeECL: true, TruncateEclTo64k: false }).then(() => {\r\n            return this.Query;\r\n        });\r\n    }\r\n\r\n    fetchHelpers(): Promise<WsWorkunits.ECLHelpFile[]> {\r\n        return this.WUInfo({ IncludeHelpers: true }).then(() => {\r\n            return this.Helpers?.ECLHelpFile || [];\r\n        });\r\n    }\r\n\r\n    fetchAllowedClusters(): Promise<string[]> {\r\n        return this.WUInfo({ IncludeAllowedClusters: true }).then(() => {\r\n            return this.AllowedClusters?.AllowedCluster || [];\r\n        });\r\n    }\r\n\r\n    fetchTotalClusterTime(): Promise<string> {\r\n        return this.WUInfo({ IncludeTotalClusterTime: true }).then(() => {\r\n            return this.TotalClusterTime;\r\n        });\r\n    }\r\n\r\n    fetchServiceNames(): Promise<string[]> {\r\n        return this.WUInfo({ IncludeServiceNames: true }).then(() => {\r\n            return this.ServiceNames?.Item;\r\n        });\r\n    }\r\n\r\n    fetchDetailsMeta(request: RecursivePartial<WsWorkunits.WUDetailsMeta> = {}): Promise<WsWorkunits.WUDetailsMetaResponse> {\r\n        return this.WUDetailsMeta(request);\r\n    }\r\n\r\n    fetchDetailsRaw(request: RecursivePartial<WsWorkunits.WUDetails> = {}): Promise<WsWorkunits.Scope[]> {\r\n        return this.WUDetails(request).then(response => response.Scopes.Scope);\r\n    }\r\n\r\n    normalizeDetails(meta: WsWorkunits.WUDetailsMetaResponse, scopes: WsWorkunits.Scope[]): { meta: WsWorkunits.WUDetailsMetaResponse, columns: { [id: string]: any }, data: IScope[] } {\r\n        const columns: { [id: string]: any } = {\r\n            id: {\r\n                Measure: \"label\"\r\n            },\r\n            name: {\r\n                Measure: \"label\"\r\n            },\r\n            type: {\r\n                Measure: \"label\"\r\n            }\r\n        };\r\n        const data: IScope[] = [];\r\n        for (const scope of scopes) {\r\n            const props = {};\r\n            const formattedProps = {};\r\n            if (scope && scope.Id && scope.Properties && scope.Properties.Property) {\r\n                for (const key in scope.Properties.Property) {\r\n                    const scopeProperty = scope.Properties.Property[key];\r\n                    if (scopeProperty.Measure === \"ns\") {\r\n                        scopeProperty.Measure = \"s\";\r\n                    }\r\n                    columns[scopeProperty.Name] = { ...scopeProperty };\r\n                    safeDelete(columns, scopeProperty.Name, \"RawValue\");\r\n                    safeDelete(columns, scopeProperty.Name, \"Formatted\");\r\n                    switch (scopeProperty.Measure) {\r\n                        case \"bool\":\r\n                            props[scopeProperty.Name] = !!+scopeProperty.RawValue;\r\n                            break;\r\n                        case \"sz\":\r\n                            props[scopeProperty.Name] = +scopeProperty.RawValue;\r\n                            break;\r\n                        case \"s\":\r\n                            props[scopeProperty.Name] = +scopeProperty.RawValue / 1000000000;\r\n                            break;\r\n                        case \"ns\":\r\n                            props[scopeProperty.Name] = +scopeProperty.RawValue;\r\n                            break;\r\n                        case \"ts\":\r\n                            props[scopeProperty.Name] = new Date(+scopeProperty.RawValue / 1000).toISOString();\r\n                            break;\r\n                        case \"cnt\":\r\n                            props[scopeProperty.Name] = +scopeProperty.RawValue;\r\n                            break;\r\n                        case \"cost\":\r\n                            props[scopeProperty.Name] = +scopeProperty.RawValue / 1000000;\r\n                            break;\r\n                        case \"cpu\":\r\n                        case \"skw\":\r\n                        case \"node\":\r\n                        case \"ppm\":\r\n                        case \"ip\":\r\n                        case \"cy\":\r\n                        case \"en\":\r\n                        case \"txt\":\r\n                        case \"id\":\r\n                        case \"fname\":\r\n                        default:\r\n                            props[scopeProperty.Name] = scopeProperty.RawValue;\r\n                    }\r\n                    formattedProps[scopeProperty.Name] = formatNum(scopeProperty.Formatted ?? props[scopeProperty.Name]);\r\n                }\r\n                //  Other properties  ---\r\n            }\r\n            const normalizedScope: IScope = {\r\n                id: scope.Id,\r\n                name: scope.ScopeName,\r\n                type: scope.ScopeType,\r\n                Kind: scope[\"Kind\"],\r\n                Label: scope[\"Label\"],\r\n                __formattedProps: formattedProps,\r\n                __groupedProps: {},\r\n                __groupedRawProps: {},\r\n                __StdDevs: 0,\r\n                __StdDevsSource: \"\",\r\n                ...props\r\n            };\r\n            if (normalizedScope[DEFINITION_LIST]) {\r\n                try {\r\n                    const definitionList = JSON.parse(normalizedScope[DEFINITION_LIST].split(\"\\\\\").join(\"\\\\\\\\\"));\r\n                    normalizedScope[DEFINITION_LIST] = [];\r\n                    definitionList.forEach((definition, idx) => {\r\n                        const matches = definition.match(definitionRegex);\r\n                        if (matches) {\r\n                            const filePath = (matches[1] ?? \"\") + matches[2] + matches[3];\r\n                            const line = parseInt(matches[5]);\r\n                            const col = parseInt(matches[6]);\r\n                            normalizedScope[DEFINITION_LIST].push({ filePath, line, col });\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    logger.error(`Unexpected \"DefinitionList\":  ${normalizedScope[DEFINITION_LIST]}`);\r\n                }\r\n            }\r\n            const dedup: DedupProperties = {};\r\n            for (const key in normalizedScope) {\r\n                if (key.indexOf(\"__\") !== 0) {\r\n                    const row = formatValues(normalizedScope, key, dedup);\r\n                    if (row) {\r\n                        normalizedScope.__groupedProps[row.Key] = row;\r\n                        if (!isNaN(row.StdDevs) && normalizedScope.__StdDevs < row.StdDevs) {\r\n                            normalizedScope.__StdDevs = row.StdDevs;\r\n                            normalizedScope.__StdDevsSource = row.Key;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            data.push(normalizedScope);\r\n        }\r\n        return {\r\n            meta,\r\n            columns,\r\n            data\r\n        };\r\n    }\r\n\r\n    fetchDetailsNormalized(request: RecursivePartial<WsWorkunits.WUDetails> = {}): Promise<{ meta: WsWorkunits.WUDetailsMetaResponse, columns: { [id: string]: any }, data: IScope[] }> {\r\n        return Promise.all([this.fetchDetailsMeta(), this.fetchDetailsRaw(request)]).then(promises => {\r\n            return this.normalizeDetails(promises[0], promises[1]);\r\n        });\r\n    }\r\n\r\n    fetchInfo(request: Partial<WsWorkunits.WUInfo> = {}): Promise<WsWorkunits.WUInfoResponse> {\r\n        return this.WUInfo(request);\r\n    }\r\n\r\n    fetchDetails(request: RecursivePartial<WsWorkunits.WUDetails> = {}): Promise<Scope[]> {\r\n        return this.WUDetails(request).then((response) => {\r\n            return response.Scopes.Scope.map((rawScope) => {\r\n                return new Scope(this, rawScope);\r\n            });\r\n        });\r\n    }\r\n\r\n    fetchDetailsHierarchy(request: Partial<WsWorkunits.WUDetails> = {}): Promise<Scope[]> {\r\n        return this.WUDetails(request).then((response) => {\r\n            const retVal: Scope[] = [];\r\n\r\n            //  Recreate Scope Hierarchy and dedup  ---\r\n            const scopeMap: { [key: string]: Scope } = {};\r\n            response.Scopes.Scope.forEach((rawScope) => {\r\n                if (scopeMap[rawScope.ScopeName]) {\r\n                    scopeMap[rawScope.ScopeName].update(rawScope);\r\n                    return null;\r\n                } else {\r\n                    const scope = new Scope(this, rawScope);\r\n                    scopeMap[scope.ScopeName] = scope;\r\n                    return scope;\r\n                }\r\n            });\r\n            for (const key in scopeMap) {\r\n                if (scopeMap.hasOwnProperty(key)) {\r\n                    const scope = scopeMap[key];\r\n                    const parentScopeID = scope.parentScope();\r\n                    if (parentScopeID && scopeMap[parentScopeID]) {\r\n                        scopeMap[parentScopeID].children().push(scope);\r\n                    } else {\r\n                        retVal.push(scope);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    fetchGraphDetails(graphIDs: string[] = [], rootTypes: string[]): Promise<BaseScope[]> {\r\n        return this.fetchDetails({\r\n            ScopeFilter: {\r\n                MaxDepth: 999999,\r\n                Ids: graphIDs,\r\n                ScopeTypes: rootTypes,\r\n            },\r\n            NestedFilter: {\r\n                Depth: 999999,\r\n                ScopeTypes: [\"graph\", \"subgraph\", \"activity\", \"edge\", \"function\"]\r\n            },\r\n            PropertiesToReturn: {\r\n                AllStatistics: true,\r\n                AllAttributes: true,\r\n                AllHints: true,\r\n                AllProperties: true,\r\n                AllScopes: true\r\n            },\r\n            ScopeOptions: {\r\n                IncludeId: true,\r\n                IncludeScope: true,\r\n                IncludeScopeType: true\r\n            },\r\n            PropertyOptions: {\r\n                IncludeName: true,\r\n                IncludeRawValue: true,\r\n                IncludeFormatted: true,\r\n                IncludeMeasure: true,\r\n                IncludeCreator: false,\r\n                IncludeCreatorType: false\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchScopeGraphs(graphIDs: string[] = []): Promise<ScopeGraph> {\r\n        return this.fetchGraphDetails(graphIDs, [\"graph\"]).then((scopes) => {\r\n            return createGraph(scopes);\r\n        });\r\n    }\r\n\r\n    fetchTimeElapsed(): Promise<ITimeElapsed[]> {\r\n        return this.fetchDetails({\r\n            ScopeFilter: {\r\n                PropertyFilters: {\r\n                    PropertyFilter: [{ Name: \"TimeElapsed\" }]\r\n                }\r\n            }\r\n        }).then((scopes) => {\r\n            const scopeInfo: { [key: string]: ITimeElapsed } = {};\r\n            scopes.forEach((scope) => {\r\n                scopeInfo[scope.ScopeName] = scopeInfo[scope.ScopeName] || {\r\n                    scope: scope.ScopeName,\r\n                    start: null,\r\n                    elapsed: null,\r\n                    finish: null\r\n                };\r\n                scope.CAttributes.forEach((attr) => {\r\n                    if (attr.Name === \"TimeElapsed\") {\r\n                        scopeInfo[scope.ScopeName].elapsed = +attr.RawValue;\r\n                    } else if (attr.Measure === \"ts\" && attr.Name.indexOf(\"Started\") >= 0) {\r\n                        scopeInfo[scope.ScopeName].start = attr.Formatted;\r\n                    }\r\n                });\r\n            });\r\n            // Workaround duplicate scope responses\r\n            const retVal: ITimeElapsed[] = [];\r\n            for (const key in scopeInfo) {\r\n                const scope = scopeInfo[key];\r\n                if (scope.start && scope.elapsed) {\r\n                    const endTime = parser(scope.start);\r\n                    endTime!.setMilliseconds(endTime!.getMilliseconds() + scope.elapsed / 1000000);\r\n                    scope.finish = formatter(endTime!);\r\n                    retVal.push(scope);\r\n                }\r\n            }\r\n            retVal.sort((l, r) => {\r\n                if (l.start < r.start) return -1;\r\n                if (l.start > r.start) return 1;\r\n                return 0;\r\n            });\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    //  Monitoring  ---\r\n    protected _monitor(): void {\r\n        if (this.isComplete()) {\r\n            this._monitorTickCount = 0;\r\n            return;\r\n        }\r\n        super._monitor();\r\n    }\r\n\r\n    protected _monitorTimeoutDuration(): number {\r\n        const retVal = super._monitorTimeoutDuration();\r\n        if (this._monitorTickCount <= 1) {          //  Once\r\n            return 1000;\r\n        } else if (this._monitorTickCount <= 3) {   //  Twice\r\n            return 3000;\r\n        } else if (this._monitorTickCount <= 5) {   //  Twice\r\n            return 5000;\r\n        } else if (this._monitorTickCount <= 7) {   //  Twice\r\n            return 10000;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    //  Events  ---\r\n    on(eventID: WorkunitEvents, propIDorCallback: StateCallback | keyof UWorkunitState, callback?: StatePropCallback): this {\r\n        if (this.isCallback(propIDorCallback)) {\r\n            switch (eventID) {\r\n                case \"completed\":\r\n                    super.on(\"propChanged\", \"StateID\", (changeInfo: IEvent) => {\r\n                        if (this.isComplete()) {\r\n                            propIDorCallback([changeInfo]);\r\n                        }\r\n                    });\r\n                    break;\r\n                case \"changed\":\r\n                    super.on(eventID, propIDorCallback);\r\n                    break;\r\n                default:\r\n            }\r\n        } else {\r\n            switch (eventID) {\r\n                case \"changed\":\r\n                    super.on(eventID, propIDorCallback, callback!);\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        this._monitor();\r\n        return this;\r\n    }\r\n\r\n    watchUntilComplete(callback?: StateCallback): Promise<this> {\r\n        return new Promise((resolve, _) => {\r\n            const watchHandle = this.watch((changes) => {\r\n                if (callback) {\r\n                    callback(changes);\r\n                }\r\n                if (this.isComplete()) {\r\n                    watchHandle.release();\r\n                    resolve(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    watchUntilRunning(callback?: StateCallback): Promise<this> {\r\n        return new Promise((resolve, _) => {\r\n            const watchHandle = this.watch((changes) => {\r\n                if (callback) {\r\n                    callback(changes);\r\n                }\r\n                if (this.isComplete() || this.isRunning()) {\r\n                    watchHandle.release();\r\n                    resolve(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    //  WsWorkunits passthroughs  ---\r\n    protected WUQuery(_request: Partial<WsWorkunits.WUQuery> = {}): Promise<WsWorkunits.WUQueryResponse> {\r\n        return this.connection.WUQuery({ ..._request, Wuid: this.Wuid }).then((response) => {\r\n            this.set(response.Workunits.ECLWorkunit[0]);\r\n            return response;\r\n        }).catch((e: ESPExceptions) => {\r\n            //  deleted  ---\r\n            const wuMissing = e.Exception.some((exception) => {\r\n                if (exception.Code === 20081) {\r\n                    this.clearState(this.Wuid);\r\n                    this.set(\"StateID\", WUStateID.NotFound);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!wuMissing) {\r\n                logger.warning(\"Unexpected exception:  \");\r\n                throw e;\r\n            }\r\n            return {} as WsWorkunits.WUQueryResponse;\r\n        });\r\n    }\r\n\r\n    protected WUCreate() {\r\n        return this.connection.WUCreate().then((response) => {\r\n            this.set(response.Workunit);\r\n            _workunits.set(this);\r\n            return response;\r\n        });\r\n    }\r\n\r\n    protected WUInfo(_request: Partial<WsWorkunits.WUInfo> = {}): Promise<WsWorkunits.WUInfoResponse> {\r\n        const includeResults = _request.IncludeResults || _request.IncludeResultsViewNames;\r\n        return this.connection.WUInfo({\r\n            ..._request,\r\n            Wuid: this.Wuid,\r\n            IncludeResults: includeResults,\r\n            IncludeResultsViewNames: includeResults,\r\n            SuppressResultSchemas: false\r\n        }).then((response) => {\r\n            this.set(response.Workunit);\r\n            if (includeResults) {\r\n                this.set({\r\n                    ResultViews: response.ResultViews\r\n                } as IWorkunitState);\r\n            }\r\n            return response;\r\n        }).catch((e: ESPExceptions) => {\r\n            //  deleted  ---\r\n            const wuMissing = e.Exception.some((exception) => {\r\n                if (exception.Code === 20080) {\r\n                    this.clearState(this.Wuid);\r\n                    this.set(\"StateID\", WUStateID.NotFound);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!wuMissing) {\r\n                logger.warning(\"Unexpected exception:  \");\r\n                throw e;\r\n            }\r\n            return {} as WsWorkunits.WUInfoResponse;\r\n        });\r\n    }\r\n\r\n    protected WUResubmit(request: Partial<WsWorkunits.WUResubmit>): Promise<WsWorkunits.WUResubmitResponse> {\r\n        return this.connection.WUResubmit(deepMixinT<WsWorkunits.WUResubmit>({}, request, {\r\n            Wuids: { Item: [this.Wuid] }\r\n        }));\r\n    }\r\n\r\n    protected WUDetailsMeta(request: Partial<WsWorkunits.WUDetailsMeta>): Promise<WsWorkunits.WUDetailsMetaResponse> {\r\n        return this.connection.WUDetailsMeta(request);\r\n    }\r\n\r\n    protected WUDetails(request: RecursivePartial<WsWorkunits.WUDetails>): Promise<WsWorkunits.WUDetailsResponse> {\r\n        return this.connection.WUDetails(deepMixinT<WsWorkunits.WUDetails>({\r\n            ScopeFilter: {\r\n                MaxDepth: 9999\r\n            },\r\n            ScopeOptions: {\r\n                IncludeMatchedScopesInResults: true,\r\n                IncludeScope: true,\r\n                IncludeId: false,\r\n                IncludeScopeType: false\r\n            },\r\n            PropertyOptions: {\r\n                IncludeName: true,\r\n                IncludeRawValue: false,\r\n                IncludeFormatted: true,\r\n                IncludeMeasure: true,\r\n                IncludeCreator: false,\r\n                IncludeCreatorType: false\r\n            }\r\n        }, request, { WUID: this.Wuid })).then((response) => {\r\n            return deepMixinT<WsWorkunits.WUDetailsResponse>({\r\n                Scopes: {\r\n                    Scope: []\r\n                }\r\n            }, response);\r\n        });\r\n    }\r\n\r\n    protected WUAction(actionType: WsWorkunits.ECLWUActions): Promise<WsWorkunits.WUActionResponse> {\r\n        return this.connection.WUAction({\r\n            Wuids: { Item: [this.Wuid] },\r\n            WUActionType: actionType\r\n        }).then((response) => {\r\n            return this.refresh().then(() => {\r\n                this._monitor();\r\n                return response;\r\n            });\r\n        });\r\n    }\r\n\r\n    publish(name?: string) {\r\n        return this.connection.WUPublishWorkunit({\r\n            Wuid: this.Wuid,\r\n            Cluster: this.Cluster,\r\n            JobName: name || this.Jobname,\r\n            AllowForeignFiles: true,\r\n            Activate: WsWorkunits.WUQueryActivationMode.ActivateQuery,\r\n            Wait: 5000\r\n        });\r\n    }\r\n\r\n    publishEx(request: Partial<WsWorkunits.WUPublishWorkunit>) {\r\n        const service = new WorkunitsServiceEx({ baseUrl: \"\" });\r\n        const publishRequest = {\r\n            Wuid: this.Wuid,\r\n            Cluster: this.Cluster,\r\n            JobName: this.Jobname,\r\n            AllowForeignFiles: true,\r\n            Activate: 1,\r\n            Wait: 5000,\r\n            ...request\r\n        };\r\n        return service.WUPublishWorkunitEx(publishRequest);\r\n    }\r\n\r\n    protected WUCDebug(command: string, opts: any = {}): Promise<XMLNode | null> {\r\n        let optsStr = \"\";\r\n        for (const key in opts) {\r\n            if (opts.hasOwnProperty(key)) {\r\n                optsStr += ` ${key}='${opts[key]}'`;\r\n            }\r\n        }\r\n        return this.connection.WUCDebugEx({\r\n            Wuid: this.Wuid,\r\n            Command: `<debug:${command} uid='${this.Wuid}'${optsStr}/>`\r\n        }).then((response) => {\r\n            return response;\r\n        });\r\n    }\r\n\r\n    debug(command: string, opts?: object): Promise<XMLNode> {\r\n        if (!this.isDebugging()) {\r\n            return Promise.resolve(new XMLNode(command));\r\n        }\r\n        return this.WUCDebug(command, opts).then((response: XMLNode) => {\r\n            const retVal: XMLNode[] = response.children(command);\r\n            if (retVal.length) {\r\n                return retVal[0];\r\n            }\r\n            return new XMLNode(command);\r\n        }).catch((_) => {\r\n            logger.error(_);\r\n            return Promise.resolve(new XMLNode(command));\r\n        });\r\n    }\r\n\r\n    debugStatus(): Promise<XMLNode> {\r\n        if (!this.isDebugging()) {\r\n            return Promise.resolve<any>({\r\n                DebugState: { state: \"unknown\" }\r\n            });\r\n        }\r\n        return this.debug(\"status\").then((response) => {\r\n            const debugState = { ...this.DebugState, ...response.$ };\r\n            this.set({\r\n                DebugState: debugState\r\n            });\r\n            return response;\r\n        });\r\n    }\r\n\r\n    debugContinue(mode = \"\"): Promise<XMLNode> {\r\n        return this.debug(\"continue\", {\r\n            mode\r\n        });\r\n    }\r\n\r\n    debugStep(mode: string): Promise<XMLNode> {\r\n        return this.debug(\"step\", {\r\n            mode\r\n        });\r\n    }\r\n\r\n    debugPause(): Promise<XMLNode> {\r\n        return this.debug(\"interrupt\");\r\n    }\r\n\r\n    debugQuit(): Promise<XMLNode> {\r\n        return this.debug(\"quit\");\r\n    }\r\n\r\n    debugDeleteAllBreakpoints(): Promise<XMLNode> {\r\n        return this.debug(\"delete\", {\r\n            idx: 0\r\n        });\r\n    }\r\n\r\n    protected debugBreakpointResponseParser(rootNode: StringAnyMap) {\r\n        return rootNode.children().map((childNode: XMLNode) => {\r\n            if (childNode.name === \"break\") {\r\n                return childNode.$;\r\n            }\r\n        });\r\n    }\r\n\r\n    debugBreakpointAdd(id: string, mode: string, action: string): Promise<XMLNode> {\r\n        return this.debug(\"breakpoint\", {\r\n            id,\r\n            mode,\r\n            action\r\n        }).then((rootNode) => {\r\n            return this.debugBreakpointResponseParser(rootNode);\r\n        });\r\n    }\r\n\r\n    debugBreakpointList(): Promise<any[]> {\r\n        return this.debug(\"list\").then((rootNode) => {\r\n            return this.debugBreakpointResponseParser(rootNode);\r\n        });\r\n    }\r\n\r\n    debugGraph(): Promise<XGMMLGraph> {\r\n        if (this._debugAllGraph && this.DebugState[\"_prevGraphSequenceNum\"] === this.DebugState[\"graphSequenceNum\"]) {\r\n            return Promise.resolve(this._debugAllGraph);\r\n        }\r\n        return this.debug(\"graph\", { name: \"all\" }).then((response) => {\r\n            this.DebugState[\"_prevGraphSequenceNum\"] = this.DebugState[\"graphSequenceNum\"];\r\n            this._debugAllGraph = createXGMMLGraph(this.Wuid, response);\r\n            return this._debugAllGraph;\r\n        });\r\n    }\r\n\r\n    debugBreakpointValid(path: string): Promise<IECLDefintion[]> {\r\n        return this.debugGraph().then((graph) => {\r\n            return breakpointLocations(graph, path);\r\n        });\r\n    }\r\n\r\n    debugPrint(edgeID: string, startRow: number = 0, numRows: number = 10): Promise<StringAnyMap[]> {\r\n        return this.debug(\"print\", {\r\n            edgeID,\r\n            startRow,\r\n            numRows\r\n        }).then((response: XMLNode) => {\r\n            return response.children().map((rowNode) => {\r\n                const retVal: StringAnyMap = {};\r\n                rowNode.children().forEach((cellNode) => {\r\n                    retVal[cellNode.name] = cellNode.content;\r\n                });\r\n                return retVal;\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport interface IECLDefintion {\r\n    id: string;\r\n    file: string;\r\n    line: number;\r\n    column: number;\r\n}\r\n\r\nconst ATTR_DEFINITION = \"definition\";\r\n\r\nfunction hasECLDefinition(vertex: XGMMLVertex): boolean {\r\n    return vertex._![ATTR_DEFINITION] !== undefined;\r\n}\r\n\r\nfunction getECLDefinition(vertex: XGMMLVertex): IECLDefintion {\r\n    const match = /([a-z]:\\\\(?:[-\\w\\.\\d]+\\\\)*(?:[-\\w\\.\\d]+)?|(?:\\/[\\w\\.\\-]+)+)\\((\\d*),(\\d*)\\)/.exec(vertex._![ATTR_DEFINITION]);\r\n    if (match) {\r\n        const [, _file, _row, _col] = match;\r\n        _file.replace(/\\/\\.\\//g, \"/\");\r\n        return {\r\n            id: vertex._![\"id\"],\r\n            file: _file,\r\n            line: +_row,\r\n            column: +_col\r\n        };\r\n    }\r\n    throw new Error(`Bad definition:  ${vertex._![ATTR_DEFINITION]}`);\r\n}\r\n\r\nfunction breakpointLocations(graph: XGMMLGraph, path?: string): IECLDefintion[] {\r\n    const retVal: IECLDefintion[] = [];\r\n    for (const vertex of graph.vertices) {\r\n        if (hasECLDefinition(vertex)) {\r\n            const definition = getECLDefinition(vertex);\r\n            if (definition && !path || path === definition.file) {\r\n                retVal.push(definition);\r\n            }\r\n        }\r\n    }\r\n    return retVal.sort((l, r) => {\r\n        return l.line - r.line;\r\n    });\r\n}\r\n","import { debounce, StateObject } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { WsSMC, SMCService } from \"../services/wsSMC\";\r\nimport { Workunit } from \"./workunit\";\r\n\r\nlet _activity: Activity;\r\n\r\nexport interface ActivityEx {\r\n}\r\n\r\nexport type UActivityState = WsSMC.ActivityResponse & ActivityEx;\r\nexport type IActivityState = WsSMC.ActivityResponse | ActivityEx;\r\nexport class Activity extends StateObject<UActivityState, IActivityState> implements UActivityState {\r\n    protected connection: SMCService;\r\n\r\n    get properties(): UActivityState { return this.get(); }\r\n    get Exceptions(): WsSMC.Exceptions { return this.get(\"Exceptions\"); }\r\n    get Build(): string { return this.get(\"Build\"); }\r\n    get ThorClusterList(): WsSMC.ThorClusterList { return this.get(\"ThorClusterList\"); }\r\n    get RoxieClusterList(): WsSMC.RoxieClusterList { return this.get(\"RoxieClusterList\"); }\r\n    get HThorClusterList(): WsSMC.HThorClusterList { return this.get(\"HThorClusterList\"); }\r\n    get DFUJobs(): WsSMC.DFUJobs { return this.get(\"DFUJobs\"); }\r\n    get Running(): WsSMC.Running { return this.get(\"Running\", { ActiveWorkunit: [] }); }\r\n    get BannerContent(): string { return this.get(\"BannerContent\"); }\r\n    get BannerColor(): string { return this.get(\"BannerColor\"); }\r\n    get BannerSize(): string { return this.get(\"BannerSize\"); }\r\n    get BannerScroll(): string { return this.get(\"BannerScroll\"); }\r\n    get ChatURL(): string { return this.get(\"ChatURL\"); }\r\n    get ShowBanner(): number { return this.get(\"ShowBanner\"); }\r\n    get ShowChatURL(): number { return this.get(\"ShowChatURL\"); }\r\n    get SortBy(): string { return this.get(\"SortBy\"); }\r\n    get Descending(): boolean { return this.get(\"Descending\"); }\r\n    get SuperUser(): boolean { return this.get(\"SuperUser\"); }\r\n    get AccessRight(): string { return this.get(\"AccessRight\"); }\r\n    get ServerJobQueues(): WsSMC.ServerJobQueues { return this.get(\"ServerJobQueues\"); }\r\n    get ActivityTime(): string { return this.get(\"ActivityTime\"); }\r\n    get DaliDetached(): boolean { return this.get(\"DaliDetached\"); }\r\n\r\n    static attach(optsConnection: IOptions | IConnection | SMCService, state?: IActivityState): Activity {\r\n        if (!_activity) {\r\n            _activity = new Activity(optsConnection);\r\n        }\r\n        if (state) {\r\n            _activity.set({\r\n                ...state\r\n            });\r\n        }\r\n        return _activity;\r\n    }\r\n\r\n    protected constructor(optsConnection: IOptions | IConnection | SMCService) {\r\n        super();\r\n        if (optsConnection instanceof SMCService) {\r\n            this.connection = optsConnection;\r\n        } else {\r\n            this.connection = new SMCService(optsConnection);\r\n        }\r\n        this.clear({\r\n        });\r\n    }\r\n\r\n    runningWorkunits(clusterName: string = \"\"): Workunit[] {\r\n        return this.Running.ActiveWorkunit.filter(awu => clusterName === \"\" || awu.ClusterName === clusterName).map(awu => Workunit.attach(this.connection.connectionOptions(), awu.Wuid, awu));\r\n    }\r\n\r\n    setBanner(request: Partial<WsSMC.SetBanner>): Promise<Activity> {\r\n        return this.connection.SetBanner({\r\n            ...request\r\n        } as WsSMC.SetBanner).then((response) => {\r\n            this.set(response);\r\n            return this;\r\n        });\r\n    }\r\n\r\n    lazyRefresh = debounce(async (): Promise<this> => {\r\n        const response = await this.connection.Activity({} as WsSMC.Activity);\r\n        this.set(response);\r\n        return this;\r\n    });\r\n\r\n    async refresh(): Promise<this> {\r\n        return this.lazyRefresh();\r\n    }\r\n}\r\n","import { Cache, scopedLogger, StateObject } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { DFUService, WsDfu } from \"../services/wsDFU\";\r\nimport { ESPExceptions } from \"../espConnection\";\r\n\r\nconst logger = scopedLogger(\"logicalFile.ts\");\r\n\r\nexport class LogicalFileCache extends Cache<{ BaseUrl: string, Cluster: string, Name: string }, LogicalFile> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return `${obj.BaseUrl}-${obj.Cluster}-${obj.Name}`;\r\n        });\r\n    }\r\n}\r\nconst _store = new LogicalFileCache();\r\n\r\nexport interface DFUPartEx extends WsDfu.DFUPart {\r\n    //  From WsDfu.DFUFilePartsOnCluster  ---\r\n    Cluster: string;\r\n    BaseDir: string;\r\n    ReplicateDir: string;\r\n    Replicate: boolean;\r\n    CanReplicate: boolean;\r\n}\r\n\r\nexport interface FileDetailEx extends WsDfu.FileDetail {\r\n    Cluster: string;\r\n    StateID?: number;\r\n}\r\n\r\nexport class LogicalFile extends StateObject<FileDetailEx, FileDetailEx> implements FileDetailEx {\r\n    protected connection: DFUService;\r\n    get BaseUrl() { return this.connection.baseUrl; }\r\n\r\n    get Cluster(): string { return this.get(\"Cluster\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n\r\n    get Filename(): string { return this.get(\"Filename\"); }\r\n    get Prefix(): string { return this.get(\"Prefix\"); }\r\n    get NodeGroup(): string { return this.get(\"NodeGroup\"); }\r\n    get NumParts(): number { return this.get(\"NumParts\"); }\r\n    get Description(): string { return this.get(\"Description\"); }\r\n    get Dir(): string { return this.get(\"Dir\"); }\r\n    get PathMask(): string { return this.get(\"PathMask\"); }\r\n    get Filesize(): string { return this.get(\"Filesize\"); }\r\n    get FileSizeInt64(): number { return this.get(\"FileSizeInt64\"); }\r\n    get RecordSize(): string { return this.get(\"RecordSize\"); }\r\n    get RecordCount(): string { return this.get(\"RecordCount\"); }\r\n    get RecordSizeInt64(): number { return this.get(\"RecordSizeInt64\"); }\r\n    get RecordCountInt64(): number { return this.get(\"RecordCountInt64\"); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get Owner(): string { return this.get(\"Owner\"); }\r\n    get JobName(): string { return this.get(\"JobName\"); }\r\n    get Persistent(): string { return this.get(\"Persistent\"); }\r\n    get Format(): string { return this.get(\"Format\"); }\r\n    get MaxRecordSize(): string { return this.get(\"MaxRecordSize\"); }\r\n    get CsvSeparate(): string { return this.get(\"CsvSeparate\"); }\r\n    get CsvQuote(): string { return this.get(\"CsvQuote\"); }\r\n    get CsvTerminate(): string { return this.get(\"CsvTerminate\"); }\r\n    get CsvEscape(): string { return this.get(\"CsvEscape\"); }\r\n    get Modified(): string { return this.get(\"Modified\"); }\r\n    get Ecl(): string { return this.get(\"Ecl\"); }\r\n    get Stat(): WsDfu.Stat { return this.get(\"Stat\"); }\r\n    get DFUFilePartsOnClusters(): WsDfu.DFUFilePartsOnClusters { return this.get(\"DFUFilePartsOnClusters\"); }\r\n    get isSuperfile(): boolean { return this.get(\"isSuperfile\"); }\r\n    get ShowFileContent(): boolean { return this.get(\"ShowFileContent\"); }\r\n    get subfiles(): WsDfu.subfiles { return this.get(\"subfiles\"); }\r\n    get Superfiles(): WsDfu.Superfiles { return this.get(\"Superfiles\"); }\r\n    get ProtectList(): WsDfu.ProtectList { return this.get(\"ProtectList\"); }\r\n    get FromRoxieCluster(): boolean { return this.get(\"FromRoxieCluster\"); }\r\n    get Graphs(): WsDfu.Graphs { return this.get(\"Graphs\"); }\r\n    get UserPermission(): string { return this.get(\"UserPermission\"); }\r\n    get ContentType(): string { return this.get(\"ContentType\"); }\r\n    get CompressedFileSize(): number { return this.get(\"CompressedFileSize\"); }\r\n    get PercentCompressed(): string { return this.get(\"PercentCompressed\"); }\r\n    get IsCompressed(): boolean { return this.get(\"IsCompressed\"); }\r\n    get BrowseData(): boolean { return this.get(\"BrowseData\"); }\r\n    get jsonInfo(): string { return this.get(\"jsonInfo\"); }\r\n    get binInfo(): WsDfu.base64Binary { return this.get(\"binInfo\"); }\r\n    get PackageID(): string { return this.get(\"PackageID\"); }\r\n    get Partition(): WsDfu.Partition { return this.get(\"Partition\"); }\r\n    get Blooms(): WsDfu.Blooms { return this.get(\"Blooms\"); }\r\n    get ExpireDays(): number { return this.get(\"ExpireDays\"); }\r\n    get KeyType(): string { return this.get(\"KeyType\"); }\r\n    get IsRestricted(): boolean { return this.get(\"IsRestricted\"); }\r\n    get AtRestCost(): number { return this.get(\"AtRestCost\"); }\r\n    get AccessCost(): number { return this.get(\"AccessCost\"); }\r\n    get StateID(): number { return this.get(\"StateID\"); }\r\n    get ExpirationDate(): string { return this.get(\"ExpirationDate\"); }\r\n    get ExtendedIndexInfo(): WsDfu.ExtendedIndexInfo { return this.get(\"ExtendedIndexInfo\"); }\r\n\r\n    get properties(): FileDetailEx { return this.get(); }\r\n\r\n    static attach(optsConnection: IOptions | IConnection | DFUService, Cluster: string, Name: string): LogicalFile {\r\n        const retVal: LogicalFile = _store.get({ BaseUrl: optsConnection.baseUrl, Cluster, Name }, () => {\r\n            return new LogicalFile(optsConnection, Cluster, Name);\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    protected constructor(optsConnection: IOptions | IConnection | DFUService, Cluster: string, Name: string) {\r\n        super();\r\n        if (optsConnection instanceof DFUService) {\r\n            this.connection = optsConnection;\r\n        } else {\r\n            this.connection = new DFUService(optsConnection);\r\n        }\r\n\r\n        this.clear({\r\n            Cluster,\r\n            Name\r\n        });\r\n    }\r\n\r\n    filePartsOnCluster() {\r\n        return [...(this.DFUFilePartsOnClusters?.DFUFilePartsOnCluster || [])];\r\n    }\r\n\r\n    fileParts() {\r\n        const retVal: DFUPartEx[] = [];\r\n        for (const poc of this.DFUFilePartsOnClusters?.DFUFilePartsOnCluster || []) {\r\n            for (const part of poc?.DFUFileParts?.DFUPart || []) {\r\n                const row = { ...poc, ...part };\r\n                delete row.DFUFileParts;\r\n                retVal.push(row);\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    update(request: Partial<WsDfu.DFUInfoRequest>): Promise<WsDfu.DFUInfoResponse> {\r\n        return this.connection.DFUInfo({\r\n            ...request,\r\n            ...{\r\n                Cluster: this.Cluster,\r\n                Name: this.Name\r\n            }\r\n        }).then((response) => {\r\n            this.set({\r\n                Cluster: this.Cluster,\r\n                ...response.FileDetail\r\n            });\r\n            return response;\r\n        });\r\n    }\r\n\r\n    fetchInfo(): Promise<WsDfu.FileDetail> {\r\n        return this.connection.DFUInfo({ Cluster: this.Cluster, Name: this.Name }).then(response => {\r\n            this.set({\r\n                Cluster: this.Cluster,\r\n                ...response.FileDetail\r\n            });\r\n            return response.FileDetail;\r\n        }).catch((e: ESPExceptions) => {\r\n            //  deleted  ---\r\n            const fileMissing = e.Exception.some((exception) => {\r\n                if (exception.Code === 20038) {\r\n                    this.set(\"Name\", this.Name + \" (Deleted)\");\r\n                    this.set(\"StateID\", 999);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!fileMissing) {\r\n                logger.warning(\"Unexpected exception:  \");\r\n                throw e;\r\n            }\r\n            return {} as FileDetailEx;\r\n        });\r\n    }\r\n\r\n    fetchDefFile(format: WsDfu.DFUDefFileFormat): Promise<string> {\r\n        return this.connection.DFUFile({ Name: this.Name, Format: format });\r\n    }\r\n\r\n    fetchListHistory(): Promise<WsDfu.Origin[]> {\r\n        return this.connection.ListHistory({ Name: this.Name }).then(response => {\r\n            return response?.History?.Origin || [];\r\n        });\r\n    }\r\n\r\n    eraseHistory(): Promise<WsDfu.Origin[]> {\r\n        return this.connection.EraseHistory({ Name: this.Name }).then(response => {\r\n            return response?.History?.Origin || [];\r\n        });\r\n    }\r\n}\r\n","import { Cache, StateObject } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { WsMachine, MachineService } from \"../services/wsMachine\";\r\n\r\nexport class MachineCache extends Cache<{ Address: string }, Machine> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return obj.Address;\r\n        });\r\n    }\r\n}\r\nconst _machines = new MachineCache();\r\n\r\nexport interface MachineInfoEx extends WsMachine.MachineInfoEx {\r\n}\r\n\r\nexport class Machine extends StateObject<MachineInfoEx, MachineInfoEx> implements MachineInfoEx {\r\n    protected connection: MachineService;\r\n\r\n    get Address(): string { return this.get(\"Address\"); }\r\n    get ConfigAddress(): string { return this.get(\"ConfigAddress\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get ProcessType(): string { return this.get(\"ProcessType\"); }\r\n    get DisplayType(): string { return this.get(\"DisplayType\"); }\r\n    get Description(): string { return this.get(\"Description\"); }\r\n    get AgentVersion(): string { return this.get(\"AgentVersion\"); }\r\n    get Contact(): string { return this.get(\"Contact\"); }\r\n    get Location(): string { return this.get(\"Location\"); }\r\n    get UpTime(): string { return this.get(\"UpTime\"); }\r\n    get ComponentName(): string { return this.get(\"ComponentName\"); }\r\n    get ComponentPath(): string { return this.get(\"ComponentPath\"); }\r\n    get RoxieState(): string { return this.get(\"RoxieState\"); }\r\n    get RoxieStateDetails(): string { return this.get(\"RoxieStateDetails\"); }\r\n    get OS(): number { return this.get(\"OS\"); }\r\n    get ProcessNumber(): number { return this.get(\"ProcessNumber\"); }\r\n    get Channels(): number { return this.get(\"Channels\"); }\r\n    get Processors(): WsMachine.Processors { return this.get(\"Processors\"); }\r\n    get Storage(): WsMachine.Storage { return this.get(\"Storage\"); }\r\n    get Running(): WsMachine.Running { return this.get(\"Running\"); }\r\n    get PhysicalMemory(): WsMachine.PhysicalMemory { return this.get(\"PhysicalMemory\"); }\r\n    get VirtualMemory(): WsMachine.VirtualMemory { return this.get(\"VirtualMemory\"); }\r\n    get ComponentInfo(): WsMachine.ComponentInfo { return this.get(\"ComponentInfo\"); }\r\n    get Exception(): string { return this.get(\"Exception\"); }\r\n\r\n    static attach(optsConnection: IOptions | IConnection | MachineService, address: string, state?: WsMachine.MachineInfoEx): Machine {\r\n        const retVal: Machine = _machines.get({ Address: address }, () => {\r\n            return new Machine(optsConnection);\r\n        });\r\n        if (state) {\r\n            retVal.set(state);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    private constructor(optsConnection: IOptions | IConnection | MachineService) {\r\n        super();\r\n        if (optsConnection instanceof MachineService) {\r\n            this.connection = optsConnection;\r\n        } else {\r\n            this.connection = new MachineService(optsConnection);\r\n        }\r\n    }\r\n}\r\n","import { Cache, StateObject } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { WsMachine, WsMachineEx, MachineService } from \"../services/wsMachine\";\r\nimport { TopologyService, WsTopology } from \"../services/wsTopology\";\r\nimport { Machine } from \"./machine\";\r\n\r\nexport class TargetClusterCache extends Cache<{ BaseUrl: string, Name: string }, TargetCluster> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return `${obj.BaseUrl}-${obj.Name}`;\r\n        });\r\n    }\r\n}\r\nconst _targetCluster = new TargetClusterCache();\r\n\r\nexport interface TpTargetClusterEx {\r\n    MachineInfoEx: WsMachine.MachineInfoEx[];\r\n}\r\n\r\nexport type UTargetClusterState = WsTopology.TpTargetCluster & WsTopology.TpClusterNameType & TpTargetClusterEx;\r\nexport type ITargetClusterState = WsTopology.TpTargetCluster | WsTopology.TpClusterNameType | TpTargetClusterEx;\r\nexport class TargetCluster extends StateObject<UTargetClusterState, ITargetClusterState> implements UTargetClusterState {\r\n    protected connection: TopologyService;\r\n    protected machineConnection: MachineService;\r\n    get BaseUrl() { return this.connection.baseUrl; }\r\n\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get Prefix(): string { return this.get(\"Prefix\"); }\r\n    get Type(): string { return this.get(\"Type\"); }\r\n    get IsDefault(): boolean { return this.get(\"IsDefault\"); }\r\n    get TpClusters(): WsTopology.TpClusters { return this.get(\"TpClusters\"); }\r\n    get TpEclCCServers(): WsTopology.TpEclCCServers { return this.get(\"TpEclCCServers\"); }\r\n    get TpEclServers(): WsTopology.TpEclServers { return this.get(\"TpEclServers\"); }\r\n    get TpEclAgents(): WsTopology.TpEclAgents { return this.get(\"TpEclAgents\"); }\r\n    get TpEclSchedulers(): WsTopology.TpEclSchedulers { return this.get(\"TpEclSchedulers\"); }\r\n    get MachineInfoEx(): WsMachine.MachineInfoEx[] { return this.get(\"MachineInfoEx\", []); }\r\n    get CMachineInfoEx(): Machine[] {\r\n        return this.MachineInfoEx.map(machineInfoEx => Machine.attach(this.machineConnection, machineInfoEx.Address, machineInfoEx));\r\n    }\r\n\r\n    static attach(optsConnection: IOptions | IConnection | TopologyService, name: string, state?: ITargetClusterState): TargetCluster {\r\n        const retVal: TargetCluster = _targetCluster.get({ BaseUrl: optsConnection.baseUrl, Name: name }, () => {\r\n            return new TargetCluster(optsConnection, name);\r\n        });\r\n        if (state) {\r\n            retVal.set({\r\n                ...state\r\n            });\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    protected constructor(optsConnection: IOptions | IConnection | TopologyService, name: string) {\r\n        super();\r\n        if (optsConnection instanceof TopologyService) {\r\n            this.connection = optsConnection;\r\n            this.machineConnection = new MachineService(optsConnection.connectionOptions());\r\n        } else {\r\n            this.connection = new TopologyService(optsConnection);\r\n            this.machineConnection = new MachineService(optsConnection);\r\n        }\r\n        this.clear({\r\n            Name: name\r\n        });\r\n    }\r\n\r\n    fetchMachines(request: WsMachine.GetTargetClusterInfoRequest = {}): Promise<Machine[]> {\r\n        return this.machineConnection.GetTargetClusterInfo({\r\n            TargetClusters: {\r\n                Item: [`${this.Type}:${this.Name}`]\r\n            },\r\n            ...request\r\n        }).then(response => {\r\n            const retVal: WsMachine.MachineInfoEx[] = [];\r\n            for (const machineInfo of response.TargetClusterInfoList.TargetClusterInfo) {\r\n                for (const machineInfoEx of machineInfo.Processes.MachineInfoEx) {\r\n                    retVal.push(machineInfoEx);\r\n                }\r\n            }\r\n            this.set(\"MachineInfoEx\", retVal);\r\n            return this.CMachineInfoEx;\r\n        });\r\n    }\r\n\r\n    machineStats(): { maxDisk: number; meanDisk: number } {\r\n        let maxDisk = 0;\r\n        let totalFree = 0;\r\n        let total = 0;\r\n        for (const machine of this.CMachineInfoEx) {\r\n            for (const storageInfo of machine.Storage.StorageInfo) {\r\n                totalFree += storageInfo.Available;\r\n                total += storageInfo.Total;\r\n                const usage = 1 - storageInfo.Available / storageInfo.Total;\r\n                if (usage > maxDisk) {\r\n                    maxDisk = usage;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            maxDisk,\r\n            meanDisk: 1 - (total ? totalFree / total : 1)\r\n        };\r\n    }\r\n\r\n    fetchUsage(): Promise<WsMachineEx.TargetClusterUsage[]> {\r\n        return this.machineConnection.GetTargetClusterUsageEx([this.Name]);\r\n    }\r\n}\r\n\r\nexport function targetClusters(optsConnection: IOptions | IConnection | TopologyService): Promise<TargetCluster[]> {\r\n    let connection: TopologyService;\r\n    if (optsConnection instanceof TopologyService) {\r\n        connection = optsConnection;\r\n    } else {\r\n        connection = new TopologyService(optsConnection);\r\n    }\r\n    return connection.TpListTargetClusters({}).then(response => {\r\n        return response.TargetClusters.TpClusterNameType.map(item => TargetCluster.attach(optsConnection, item.Name, item));\r\n    });\r\n}\r\n\r\nconst _defaultTargetCluster: { [baseUrl: string]: Promise<TargetCluster> } = {};\r\nexport function defaultTargetCluster(optsConnection: IOptions | IConnection | TopologyService): Promise<TargetCluster> {\r\n    if (!_defaultTargetCluster[optsConnection.baseUrl]) {\r\n        let connection: TopologyService;\r\n        if (optsConnection instanceof TopologyService) {\r\n            connection = optsConnection;\r\n        } else {\r\n            connection = new TopologyService(optsConnection);\r\n        }\r\n        _defaultTargetCluster[optsConnection.baseUrl] = connection.TpListTargetClusters({}).then(response => {\r\n            let firstItem: WsTopology.TpClusterNameType;\r\n            let defaultItem: WsTopology.TpClusterNameType;\r\n            let hthorItem: WsTopology.TpClusterNameType;\r\n            response.TargetClusters.TpClusterNameType.forEach(item => {\r\n                if (!firstItem) {\r\n                    firstItem = item;\r\n                }\r\n                if (!defaultItem && item.IsDefault === true) {\r\n                    defaultItem = item;\r\n                }\r\n                if (!hthorItem && item.Type === \"hthor\") {\r\n                    hthorItem = item;\r\n                }\r\n            });\r\n            const defItem = defaultItem || hthorItem || firstItem;\r\n            return TargetCluster.attach(optsConnection, defItem.Name, defItem);\r\n        });\r\n    }\r\n    return _defaultTargetCluster[optsConnection.baseUrl];\r\n}\r\n","import { Cache, exists, StateCallback, StateEvents, StateObject, StatePropCallback } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { TopologyService, WsTopology } from \"../services/wsTopology\";\r\nimport { TargetCluster } from \"./targetCluster\";\r\n\r\nexport class TopologyCache extends Cache<{ BaseUrl: string }, Topology> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return obj.BaseUrl;\r\n        });\r\n    }\r\n}\r\nconst _topology = new TopologyCache();\r\n\r\nexport interface TopologyStateEx {\r\n    TargetClusters?: WsTopology.TpTargetCluster[];\r\n    LogicalClusters?: WsTopology.TpLogicalCluster[];\r\n    Services?: WsTopology.ServiceList;\r\n}\r\nexport class Topology extends StateObject<TopologyStateEx, TopologyStateEx> implements TopologyStateEx {\r\n    protected connection: TopologyService;\r\n    get BaseUrl() { return this.connection.baseUrl; }\r\n\r\n    //  Accessors  ---\r\n    get properties(): TopologyStateEx { return this.get(); }\r\n    get TargetClusters(): WsTopology.TpTargetCluster[] { return this.get(\"TargetClusters\"); }\r\n    get CTargetClusters(): TargetCluster[] {\r\n        return this.TargetClusters.map(tc => TargetCluster.attach(this.connection, tc.Name, tc));\r\n    }\r\n    get LogicalClusters(): WsTopology.TpLogicalCluster[] { return this.get(\"LogicalClusters\"); }\r\n    get Services(): WsTopology.ServiceList { return this.get(\"Services\"); }\r\n\r\n    static attach(optsConnection: IOptions | IConnection | TopologyService) {\r\n        const retVal: Topology = _topology.get({ BaseUrl: optsConnection.baseUrl }, () => {\r\n            return new Topology(optsConnection);\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    protected constructor(optsConnection: IOptions | IConnection | TopologyService) {\r\n        super();\r\n        if (optsConnection instanceof TopologyService) {\r\n            this.connection = optsConnection;\r\n        } else {\r\n            this.connection = new TopologyService(optsConnection);\r\n        }\r\n    }\r\n\r\n    GetESPServiceBaseURL(type: string = \"\"): Promise<string> {\r\n        return this.connection.TpServiceQuery({}).then(response => {\r\n            const rootProtocol = this.connection.protocol();\r\n            const ip = this.connection.ip();\r\n            let port = rootProtocol === \"https:\" ? \"18002\" : \"8002\";\r\n            if (exists(\"ServiceList.TpEspServers.TpEspServer\", response)) {\r\n                for (const item of response.ServiceList.TpEspServers.TpEspServer) {\r\n                    if (exists(\"TpBindings.TpBinding\", item)) {\r\n                        for (const binding of item.TpBindings.TpBinding) {\r\n                            if (binding.Service === type && binding.Protocol + \":\" === rootProtocol) {\r\n                                port = binding.Port;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return `${rootProtocol}//${ip}:${port}/`;\r\n        });\r\n    }\r\n\r\n    fetchTargetClusters(): Promise<TargetCluster[]> {\r\n        return this.connection.TpTargetClusterQuery({ Type: \"ROOT\" }).then(response => {\r\n            this.set({\r\n                TargetClusters: response.TpTargetClusters?.TpTargetCluster ?? []\r\n            });\r\n            return this.CTargetClusters;\r\n        });\r\n    }\r\n\r\n    fetchLogicalClusters(request: WsTopology.TpLogicalClusterQueryRequest = {}): Promise<WsTopology.TpLogicalCluster[]> {\r\n        return this.connection.TpLogicalClusterQuery(request).then(response => {\r\n            this.set({\r\n                LogicalClusters: response.TpLogicalClusters.TpLogicalCluster\r\n            });\r\n            return this.LogicalClusters;\r\n        });\r\n    }\r\n\r\n    fetchServices(request: WsTopology.TpServiceQueryRequest = {}): Promise<WsTopology.ServiceList> {\r\n        return this.connection.TpServiceQuery(request).then(response => {\r\n            this.set({\r\n                Services: response.ServiceList\r\n            });\r\n            return this.Services;\r\n        });\r\n    }\r\n\r\n    protected _prevRefresh;\r\n    refresh(force: boolean = false): Promise<this> {\r\n        if (!this._prevRefresh || force) {\r\n            this._prevRefresh = Promise.all([this.fetchTargetClusters(), this.fetchLogicalClusters(), this.fetchServices()]).then(() => {\r\n                return this;\r\n            });\r\n        }\r\n        return this._prevRefresh;\r\n    }\r\n\r\n    //  Monitoring  ---\r\n\r\n    //  Events  ---\r\n    on(eventID: StateEvents, propIDorCallback: StateCallback | keyof TopologyStateEx, callback?: StatePropCallback): this {\r\n        if (this.isCallback(propIDorCallback)) {\r\n            switch (eventID) {\r\n                case \"changed\":\r\n                    super.on(eventID, propIDorCallback);\r\n                    break;\r\n                default:\r\n            }\r\n        } else {\r\n            switch (eventID) {\r\n                case \"changed\":\r\n                    super.on(eventID, propIDorCallback, callback!);\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        this._monitor();\r\n        return this;\r\n    }\r\n}\r\n","//  Ported from:  https://github.com/hpcc-systems/HPCC-Platform/blob/f0ed9dbeca49c39fb55aa28fec295c89407ac663/esp/src/src/ESPGraph.ts\r\n\r\nexport function safeAssign(obj: { [id: string]: any }, key: string, value: string) {\r\n    if (key === \"__proto__\" || key === \"constructor\" || key === \"prototype\") return;\r\n    obj[key] = value;\r\n}\r\n\r\nfunction xmlEncode(str: string): string {\r\n    str = \"\" + str;\r\n    return str.replace(/&/g, \"&amp;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/'/g, \"&apos;\")\r\n        .replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\")\r\n        .replace(/\\n/g, \"&#10;\")\r\n        .replace(/\\r/g, \"&#13;\")\r\n        ;\r\n}\r\n\r\nfunction espTime2Seconds(duration?: string): number {\r\n    if (!duration) {\r\n        return 0;\r\n    } else if (!isNaN(+duration)) {\r\n        return parseFloat(duration);\r\n    }\r\n    const re = /(?:(?:(\\d+).days.)?(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+\\.\\d+|\\d+)s))|(?:(\\d+\\.\\d+|\\d+)ms|(\\d+\\.\\d+|\\d+)us|(\\d+\\.\\d+|\\d+)ns)/;\r\n    const match = re.exec(duration);\r\n    if (!match) return 0;\r\n    const days = +match[1] || 0;\r\n    const hours = +match[2] || 0;\r\n    const mins = +match[3] || 0;\r\n    const secs = +match[4] || 0;\r\n    const ms = +match[5] || 0;\r\n    const us = +match[6] || 0;\r\n    const ns = +match[7] || 0;\r\n    return (days * 24 * 60 * 60) + (hours * 60 * 60) + (mins * 60) + secs + ms / 1000 + us / 1000000 + ns / 1000000000;\r\n}\r\n\r\nfunction unitTest(size: string, unit: string) {\r\n    const nsIndex = size.indexOf(unit);\r\n    if (nsIndex !== -1) {\r\n        return parseFloat(size.substring(0, nsIndex));\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction espSize2Bytes(size: string): number {\r\n    if (!size) {\r\n        return 0;\r\n    } else if (!isNaN(+size)) {\r\n        return parseFloat(size);\r\n    }\r\n    let retVal = unitTest(size, \"Kb\");\r\n    if (retVal >= 0) {\r\n        return retVal * 1024;\r\n    }\r\n    retVal = unitTest(size, \"Mb\");\r\n    if (retVal >= 0) {\r\n        return retVal * Math.pow(1024, 2);\r\n    }\r\n    retVal = unitTest(size, \"Gb\");\r\n    if (retVal >= 0) {\r\n        return retVal * Math.pow(1024, 3);\r\n    }\r\n    retVal = unitTest(size, \"Tb\");\r\n    if (retVal >= 0) {\r\n        return retVal * Math.pow(1024, 4);\r\n    }\r\n    retVal = unitTest(size, \"Pb\");\r\n    if (retVal >= 0) {\r\n        return retVal * Math.pow(1024, 5);\r\n    }\r\n    retVal = unitTest(size, \"Eb\");\r\n    if (retVal >= 0) {\r\n        return retVal * Math.pow(1024, 6);\r\n    }\r\n    retVal = unitTest(size, \"Zb\");\r\n    if (retVal >= 0) {\r\n        return retVal * Math.pow(1024, 7);\r\n    }\r\n    retVal = unitTest(size, \"b\");\r\n    if (retVal >= 0) {\r\n        return retVal;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction espSkew2Number(skew: string): number {\r\n    if (!skew) {\r\n        return 0;\r\n    }\r\n    return parseFloat(skew);\r\n}\r\n\r\nenum GRAPH_TYPE {\r\n    UNKNOWN = 0,\r\n    GRAPH = 1,\r\n    SUBGRAPH = 2,\r\n    VERTEX = 3,\r\n    EDGE = 4,\r\n    LAST = 5\r\n}\r\n\r\nenum GRAPH_TYPE_STRING {\r\n    UNKNOWN = \"Unknown\",\r\n    GRAPH = \"Graph\",\r\n    SUBGRAPH = \"Cluster\",\r\n    VERTEX = \"Vertex\",\r\n    EDGE = \"Edge\",\r\n    LAST = \"Last\"\r\n}\r\n\r\nclass LocalisedXGMMLWriter {\r\n\r\n    graph: QueryGraph;\r\n    m_xgmml: string;\r\n    m_visibleSubgraphs: { [id: string]: Subgraph };\r\n    m_visibleVertices: { [id: string]: Vertex };\r\n    m_semiVisibleVertices: { [id: string]: Vertex };\r\n    m_visibleEdges: { [id: string]: Edge };\r\n    noSpills: boolean;\r\n\r\n    constructor(graph: QueryGraph) {\r\n        this.graph = graph;\r\n\r\n        this.m_xgmml = \"\";\r\n        this.m_visibleSubgraphs = {};\r\n        this.m_visibleVertices = {};\r\n        this.m_semiVisibleVertices = {};\r\n        this.m_visibleEdges = {};\r\n    }\r\n\r\n    calcVisibility(items: GraphItem[], localisationDepth: number, localisationDistance: number, noSpills: boolean): void {\r\n        this.noSpills = noSpills;\r\n        items.forEach((item) => {\r\n            if (this.graph.isVertex(item)) {\r\n                this.calcInVertexVisibility(item, localisationDistance);\r\n                this.calcOutVertexVisibility(item, localisationDistance);\r\n            } else if (this.graph.isEdge(item)) {\r\n                this.calcInVertexVisibility(item.getSource(), localisationDistance - 1);\r\n                this.calcOutVertexVisibility(item.getTarget(), localisationDistance - 1);\r\n            } else if (this.graph.isSubgraph(item)) {\r\n                this.m_visibleSubgraphs[item.__hpcc_id] = item;\r\n                this.calcSubgraphVisibility(item, localisationDepth - 1);\r\n            }\r\n        });\r\n        this.calcVisibility2();\r\n    }\r\n\r\n    calcInVertexVisibility(vertex: Vertex, localisationDistance: number) {\r\n        if (this.noSpills && vertex.isSpill()) {\r\n            localisationDistance++;\r\n        }\r\n        this.m_visibleVertices[vertex.__hpcc_id] = vertex;\r\n        if (localisationDistance > 0) {\r\n            vertex.getInEdges().forEach(edge => {\r\n                this.calcInVertexVisibility(edge.getSource(), localisationDistance - 1);\r\n            });\r\n        }\r\n    }\r\n\r\n    calcOutVertexVisibility(vertex: Vertex, localisationDistance: number): void {\r\n        if (this.noSpills && vertex.isSpill()) {\r\n            localisationDistance++;\r\n        }\r\n        this.m_visibleVertices[vertex.__hpcc_id] = vertex;\r\n        if (localisationDistance > 0) {\r\n            vertex.getOutEdges().forEach(edge => {\r\n                this.calcOutVertexVisibility(edge.getTarget(), localisationDistance - 1);\r\n            });\r\n        }\r\n    }\r\n\r\n    calcSubgraphVisibility(subgraph: Subgraph, localisationDepth: number): void {\r\n        if (localisationDepth < 0) {\r\n            return;\r\n        }\r\n\r\n        if (localisationDepth > 0) {\r\n            subgraph.__hpcc_subgraphs.forEach((subgraph, idx) => {\r\n                this.calcSubgraphVisibility(subgraph, localisationDepth - 1);\r\n            });\r\n        }\r\n\r\n        subgraph.__hpcc_subgraphs.forEach((subgraph, idx) => {\r\n            this.m_visibleSubgraphs[subgraph.__hpcc_id] = subgraph;\r\n        });\r\n        subgraph.__hpcc_vertices.forEach((vertex, idx) => {\r\n            this.m_visibleVertices[vertex.__hpcc_id] = vertex;\r\n        });\r\n\r\n        //  Calculate edges that pass through the subgraph  ---\r\n        const dedupEdges = {};\r\n        this.graph.edges.forEach((edge: Edge, idx: any) => {\r\n            if (edge.getSource().__hpcc_parent !== edge.getTarget().__hpcc_parent && subgraph === this.getCommonAncestor(edge)) {\r\n                //  Only include one unique edge between subgraphs  ---\r\n                if (!dedupEdges[edge.getSource().__hpcc_parent.__hpcc_id + \"::\" + edge.getTarget().__hpcc_parent.__hpcc_id]) {\r\n                    dedupEdges[edge.getSource().__hpcc_parent.__hpcc_id + \"::\" + edge.getTarget().__hpcc_parent.__hpcc_id] = true;\r\n                    this.m_visibleEdges[edge.__hpcc_id] = edge;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    buildVertexString(vertex: Vertex, isPoint: boolean): string {\r\n        let attrStr = \"\";\r\n        let propsStr = \"\";\r\n        const props = vertex.getProperties();\r\n        for (const key in props) {\r\n            if (isPoint && key.indexOf(\"_kind\") >= 0) {\r\n                propsStr += \"<att name=\\\"_kind\\\" value=\\\"point\\\"/>\";\r\n            } else if (key === \"id\" || key === \"label\") {\r\n                attrStr += \" \" + key + \"=\\\"\" + xmlEncode(props[key]) + \"\\\"\";\r\n            } else {\r\n                propsStr += \"<att name=\\\"\" + key + \"\\\" value=\\\"\" + xmlEncode(props[key]) + \"\\\"/>\";\r\n            }\r\n        }\r\n        return \"<node\" + attrStr + \">\" + propsStr + \"</node>\";\r\n    }\r\n\r\n    buildEdgeString(edge: Edge): string {\r\n        let attrStr: string = \"\";\r\n        let propsStr: string = \"\";\r\n        const props = edge.getProperties();\r\n        for (const key in props) {\r\n            if (key.toLowerCase() === \"id\" ||\r\n                key.toLowerCase() === \"label\" ||\r\n                key.toLowerCase() === \"source\" ||\r\n                key.toLowerCase() === \"target\") {\r\n                attrStr += \" \" + key + \"=\\\"\" + xmlEncode(props[key]) + \"\\\"\";\r\n            } else {\r\n                propsStr += \"<att name=\\\"\" + key + \"\\\" value=\\\"\" + xmlEncode(props[key]) + \"\\\"/>\";\r\n            }\r\n        }\r\n        return \"<edge\" + attrStr + \">\" + propsStr + \"</edge>\";\r\n    }\r\n\r\n    getAncestors(v: Vertex, ancestors: Subgraph[]): void {\r\n        let parent = v.__hpcc_parent;\r\n        while (parent) {\r\n            ancestors.push(parent);\r\n            parent = parent.__hpcc_parent;\r\n        }\r\n    }\r\n\r\n    getCommonAncestorV(v1: Vertex, v2: Vertex): Subgraph | null {\r\n        const v1_ancestors = [];\r\n        const v2_ancestors = [];\r\n        this.getAncestors(v1, v1_ancestors);\r\n        this.getAncestors(v2, v2_ancestors);\r\n        let finger1 = v1_ancestors.length - 1;\r\n        let finger2 = v2_ancestors.length - 1;\r\n        let retVal = null;\r\n        while (finger1 >= 0 && finger2 >= 0 && v1_ancestors[finger1] === v2_ancestors[finger2]) {\r\n            retVal = v1_ancestors[finger1];\r\n            --finger1;\r\n            --finger2;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    getCommonAncestor(e: Edge): Subgraph | null {\r\n        return this.getCommonAncestorV(e.getSource(), e.getTarget());\r\n    }\r\n\r\n    calcAncestorVisibility(vertex: Vertex): void {\r\n        const ancestors = [];\r\n        this.getAncestors(vertex, ancestors);\r\n        ancestors.forEach((item, idx) => {\r\n            this.m_visibleSubgraphs[item.__hpcc_id] = item;\r\n        });\r\n    }\r\n\r\n    calcVisibility2(): void {\r\n        for (const key in this.m_visibleVertices) {\r\n            const vertex = this.m_visibleVertices[key];\r\n            vertex.getInEdges().forEach((edge: Edge, idx: any) => {\r\n                this.m_visibleEdges[edge.__hpcc_id] = edge;\r\n            });\r\n            vertex.getOutEdges().forEach((edge: Edge, idx: any) => {\r\n                this.m_visibleEdges[edge.__hpcc_id] = edge;\r\n            });\r\n            this.calcAncestorVisibility(vertex);\r\n        }\r\n        this.calcSemiVisibleVertices();\r\n    }\r\n\r\n    addSemiVisibleEdge(edge: Edge): void {\r\n        if (edge && !this.m_visibleEdges[edge.__hpcc_id]) {\r\n            this.m_visibleEdges[edge.__hpcc_id] = edge;\r\n        }\r\n    }\r\n\r\n    addSemiVisibleVertex(vertex: Vertex): void {\r\n        if (!this.m_visibleVertices[vertex.__hpcc_id]) {\r\n            this.m_semiVisibleVertices[vertex.__hpcc_id] = vertex;\r\n            this.calcAncestorVisibility(vertex);\r\n        }\r\n    }\r\n\r\n    calcSemiVisibleVertices(): void {\r\n        for (const key in this.m_visibleEdges) {\r\n            const edge = this.m_visibleEdges[key];\r\n            let source = edge.getSource();\r\n            this.addSemiVisibleVertex(source);\r\n            while (this.noSpills && source.isSpill()) {\r\n                const inEdges = source.getInEdges();\r\n                if (inEdges.length) {\r\n                    this.addSemiVisibleEdge(inEdges[0]);\r\n                    source = inEdges[0].getSource();\r\n                    this.addSemiVisibleVertex(source);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            let target = edge.getTarget();\r\n            this.addSemiVisibleVertex(target);\r\n            while (this.noSpills && target.isSpill()) {\r\n                const outEdges = target.getOutEdges();\r\n                if (outEdges.length) {\r\n                    this.addSemiVisibleEdge(outEdges[0]);\r\n                    target = outEdges[0].getTarget();\r\n                    this.addSemiVisibleVertex(target);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    writeXgmml(): void {\r\n        this.subgraphVisited(this.graph.subgraphs[0], true);\r\n        this.graph.edges.forEach((edge: any, idx: any) => {\r\n            this.edgeVisited(edge);\r\n        });\r\n    }\r\n\r\n    subgraphVisited(subgraph: Subgraph, root: boolean = false): boolean {\r\n        if (this.m_visibleSubgraphs[subgraph.__hpcc_id]) {\r\n            let propsStr = \"\";\r\n            this.m_xgmml += root ? \"\" : \"<node id=\\\"\" + subgraph.__hpcc_id + \"\\\"><att><graph>\";\r\n            const xgmmlLen = this.m_xgmml.length;\r\n            subgraph.walkSubgraphs(this);\r\n            subgraph.walkVertices(this);\r\n            if (xgmmlLen === this.m_xgmml.length) {\r\n                //  Add at least one child otherwise subgraphs will render as a vertex  ---\r\n                const vertex = subgraph.__hpcc_vertices[0];\r\n                if (vertex) {\r\n                    this.m_xgmml += this.buildVertexString(vertex, true);\r\n                }\r\n            }\r\n\r\n            const props = subgraph.getProperties();\r\n            for (const key in props) {\r\n                propsStr += \"<att name=\\\"\" + key + \"\\\" value=\\\"\" + xmlEncode(props[key]) + \"\\\"/>\";\r\n            }\r\n            this.m_xgmml += root ? \"\" : \"</graph></att>\" + propsStr + \"</node>\";\r\n        }\r\n        return false;\r\n    }\r\n\r\n    vertexVisited(vertex: Vertex) {\r\n        if (this.m_visibleVertices[vertex.__hpcc_id]) {\r\n            this.m_xgmml += this.buildVertexString(vertex, false);\r\n        } else if (this.m_semiVisibleVertices[vertex.__hpcc_id]) {\r\n            this.m_xgmml += this.buildVertexString(vertex, true);\r\n        }\r\n    }\r\n\r\n    edgeVisited(edge: Edge) {\r\n        if (this.m_visibleEdges[edge.__hpcc_id]) {\r\n            this.m_xgmml += this.buildEdgeString(edge);\r\n        }\r\n    }\r\n}\r\n\r\nabstract class GraphItem {\r\n\r\n    abstract _globalType: \"Graph\" | \"Cluster\" | \"Vertex\" | \"Edge\";\r\n\r\n    __hpcc_graph: QueryGraph;\r\n    __hpcc_parent: Subgraph;\r\n    __widget: any;\r\n\r\n    __hpcc_id: string;\r\n    _globalID: string;\r\n\r\n    constructor(graph: QueryGraph, id: string) {\r\n        this.__hpcc_graph = graph;\r\n        this.__hpcc_id = id;\r\n        this._globalID = id;\r\n    }\r\n\r\n    getProperties() {\r\n        const retVal: { [id: string]: any } = {};\r\n        for (const key in this) {\r\n            if (key.indexOf(\"__\") !== 0 && this.hasOwnProperty(key)) {\r\n                retVal[key] = this[key];\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n}\r\n\r\nclass Subgraph extends GraphItem {\r\n    _globalType: \"Graph\" | \"Cluster\" | \"Vertex\" | \"Edge\";\r\n\r\n    __hpcc_subgraphs: any[];\r\n    __hpcc_vertices: any[];\r\n    __hpcc_edges: any[];\r\n    id: string;\r\n\r\n    constructor(graph: QueryGraph, id: string) {\r\n        super(graph, id);\r\n        this._globalType = id === \"0\" ? \"Graph\" : \"Cluster\";\r\n        this.__hpcc_subgraphs = [];\r\n        this.__hpcc_vertices = [];\r\n        this.__hpcc_edges = [];\r\n        this.id = id;\r\n    }\r\n\r\n    addSubgraph(subgraph) {\r\n        subgraph.__hpcc_parent = this;\r\n        if (!this.__hpcc_subgraphs.some(subgraph2 => subgraph === subgraph2)) {\r\n            this.__hpcc_subgraphs.push(subgraph);\r\n        }\r\n    }\r\n\r\n    addVertex(vertex) {\r\n        vertex.__hpcc_parent = this;\r\n        if (!this.__hpcc_vertices.some(vertex2 => vertex === vertex2)) {\r\n            this.__hpcc_vertices.push(vertex);\r\n        }\r\n    }\r\n\r\n    removeVertex(vertex: any) {\r\n        this.__hpcc_vertices = this.__hpcc_vertices.filter(vertex2 => vertex !== vertex2);\r\n    }\r\n\r\n    addEdge(edge) {\r\n        edge.__hpcc_parent = this;\r\n        if (!this.__hpcc_edges.some(edge2 => edge === edge2)) {\r\n            this.__hpcc_edges.push(edge);\r\n        }\r\n    }\r\n\r\n    removeEdge(edge: any) {\r\n        this.__hpcc_edges = this.__hpcc_edges.filter(edge2 => edge !== edge2);\r\n    }\r\n\r\n    remove() {\r\n        this.__hpcc_subgraphs.forEach(subgraph => subgraph.__hpcc_parent = this.__hpcc_parent);\r\n        this.__hpcc_vertices.forEach(vertex => vertex.__hpcc_parent = this.__hpcc_parent);\r\n        this.__hpcc_edges.forEach(edge => edge.__hpcc_parent = this.__hpcc_parent);\r\n        delete this.__hpcc_parent;\r\n        this.__hpcc_graph.removeItem(this);\r\n    }\r\n\r\n    walkSubgraphs(visitor: { subgraphVisited: (arg0: Subgraph) => boolean; }) {\r\n        this.__hpcc_subgraphs.forEach((subgraph, idx) => {\r\n            if (visitor.subgraphVisited(subgraph)) {\r\n                subgraph.walkSubgraphs(visitor);\r\n            }\r\n        });\r\n    }\r\n\r\n    walkVertices(visitor: { vertexVisited: (arg0: Vertex) => void; }) {\r\n        this.__hpcc_vertices.forEach((vertex, idx) => {\r\n            visitor.vertexVisited(vertex);\r\n        });\r\n    }\r\n}\r\n\r\nclass Vertex extends GraphItem {\r\n    _globalType: \"Graph\" | \"Cluster\" | \"Vertex\" | \"Edge\" = \"Vertex\";\r\n    _isSpill: boolean;\r\n\r\n    constructor(graph: QueryGraph, id: string) {\r\n        super(graph, id);\r\n    }\r\n\r\n    isSpill() {\r\n        return this._isSpill;\r\n    }\r\n\r\n    remove() {\r\n        const inVertices = this.getInVertices();\r\n        if (inVertices.length <= 1) {\r\n            console.warn(this.__hpcc_id + \":  remove only supports single or zero inputs activities...\");\r\n        }\r\n        this.getInEdges().forEach((edge: Edge) => {\r\n            edge.remove();\r\n        });\r\n        this.getOutEdges().forEach((edge: Edge) => {\r\n            edge.setSource(inVertices[0]);\r\n        });\r\n        this.__hpcc_parent?.removeVertex(this);\r\n        this.__hpcc_graph.removeItem(this);\r\n    }\r\n\r\n    getInVertices(): Vertex[] {\r\n        return this.getInEdges().map((edge) => {\r\n            return edge.getSource();\r\n        });\r\n    }\r\n\r\n    getInEdges(): Edge[] {\r\n        return this.__hpcc_graph.edges.filter((edge) => {\r\n            return edge.getTarget() === this;\r\n        });\r\n    }\r\n\r\n    getOutVertices(): Vertex[] {\r\n        return this.getOutEdges().map((edge) => {\r\n            return edge.getTarget();\r\n        });\r\n    }\r\n\r\n    getOutEdges(): Edge[] {\r\n        return this.__hpcc_graph.edges.filter((edge) => {\r\n            return edge.getSource() === this;\r\n        });\r\n    }\r\n}\r\n\r\nclass Edge extends GraphItem {\r\n    _globalType: \"Graph\" | \"Cluster\" | \"Vertex\" | \"Edge\" = \"Edge\";\r\n\r\n    _sourceActivity: any;\r\n    source: any;\r\n    _targetActivity: any;\r\n    target: any;\r\n\r\n    constructor(graph: QueryGraph, id: string) {\r\n        super(graph, id);\r\n        this._globalType = \"Edge\";\r\n    }\r\n\r\n    remove() {\r\n        this.__hpcc_graph.subgraphs.forEach((subgraph) => {\r\n            subgraph.removeEdge(this);\r\n        });\r\n        this.__hpcc_graph.removeItem(this);\r\n    }\r\n\r\n    getSource(): Vertex {\r\n        return this.__hpcc_graph.idx[this._sourceActivity || this.source] as Vertex;\r\n    }\r\n\r\n    setSource(source: Vertex) {\r\n        if (this._sourceActivity) {\r\n            this._sourceActivity = source.__hpcc_id;\r\n        } else if (this.source) {\r\n            this.source = source.__hpcc_id;\r\n        }\r\n        if (this.__widget) {\r\n            this.__widget.setSource(this.getSource().__widget);\r\n        }\r\n    }\r\n\r\n    getTarget(): Vertex {\r\n        return this.__hpcc_graph.idx[this._targetActivity || this.target] as Vertex;\r\n    }\r\n}\r\n\r\nexport class QueryGraph {\r\n    idx: { [id: string]: Subgraph | Vertex | Edge } = {};\r\n    subgraphs: Subgraph[] = [];\r\n    vertices: Vertex[] = [];\r\n    edges: Edge[] = [];\r\n\r\n    xgmml: string = \"\";\r\n\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        this.xgmml = \"\";\r\n\r\n        this.idx = {};\r\n        this.subgraphs = [];\r\n        this.vertices = [];\r\n        this.edges = [];\r\n    }\r\n\r\n    load(xgmml: string) {\r\n        this.clear();\r\n        this.merge(xgmml);\r\n    }\r\n\r\n    merge(xgmml: string) {\r\n        this.xgmml = xgmml;\r\n        const parser = new DOMParser();\r\n        const dom = parser.parseFromString(xgmml, \"text/xml\");\r\n        this.walkDocument(dom.documentElement, \"0\");\r\n    }\r\n\r\n    isSubgraph(item: GraphItem): item is Subgraph {\r\n        return item instanceof Subgraph;\r\n    }\r\n\r\n    isVertex(item: GraphItem): item is Vertex {\r\n        return item instanceof Vertex;\r\n    }\r\n\r\n    isEdge(item: GraphItem): item is Edge {\r\n        return item instanceof Edge;\r\n    }\r\n\r\n    getGlobalType(item: QueryGraph | Subgraph | Vertex | Edge): GRAPH_TYPE {\r\n        if (item instanceof Vertex) {\r\n            return GRAPH_TYPE.VERTEX;\r\n        } else if (item instanceof Edge) {\r\n            return GRAPH_TYPE.EDGE;\r\n        } else if (item instanceof Subgraph) {\r\n            return GRAPH_TYPE.SUBGRAPH;\r\n        } else if (item instanceof QueryGraph) {\r\n            return GRAPH_TYPE.GRAPH;\r\n        }\r\n        return GRAPH_TYPE.UNKNOWN;\r\n    }\r\n\r\n    getGlobalTypeString(item: QueryGraph | Subgraph | Vertex | Edge): GRAPH_TYPE_STRING {\r\n        if (item instanceof Vertex) {\r\n            return GRAPH_TYPE_STRING.VERTEX;\r\n        } else if (item instanceof Edge) {\r\n            return GRAPH_TYPE_STRING.EDGE;\r\n        } else if (item instanceof Subgraph) {\r\n            return GRAPH_TYPE_STRING.SUBGRAPH;\r\n        } else if (item instanceof QueryGraph) {\r\n            return GRAPH_TYPE_STRING.GRAPH;\r\n        }\r\n        return GRAPH_TYPE_STRING.UNKNOWN;\r\n    }\r\n\r\n    getItem(docNode: HTMLElement, id: string): Subgraph | Vertex | Edge {\r\n        if (!this.idx[id]) {\r\n            switch (docNode.tagName) {\r\n                case \"graph\":\r\n                    const subgraph = new Subgraph(this, id);\r\n                    this.subgraphs.push(subgraph);\r\n                    this.idx[id] = subgraph;\r\n                    break;\r\n                case \"node\":\r\n                    const vertex = new Vertex(this, id);\r\n                    this.vertices.push(vertex);\r\n                    this.idx[id] = vertex;\r\n                    break;\r\n                case \"edge\":\r\n                    const edge = new Edge(this, id);\r\n                    this.edges.push(edge);\r\n                    this.idx[id] = edge;\r\n                    break;\r\n                default:\r\n                    console.warn(\"Graph.getItem - Unknown Node Type!\");\r\n                    break;\r\n            }\r\n        }\r\n        const retVal = this.idx[id];\r\n        Array.from(docNode.attributes).forEach(attr => {\r\n            safeAssign(retVal, attr.name, attr.value);\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    removeItem(item: Subgraph | Vertex | Edge) {\r\n        delete this.idx[item.__hpcc_id];\r\n        if (item instanceof Subgraph) {\r\n            this.subgraphs = this.subgraphs.filter((subgraph: Subgraph) => {\r\n                return item !== subgraph;\r\n            });\r\n        } else if (item instanceof Vertex) {\r\n            this.vertices = this.vertices.filter(vertex => {\r\n                return item !== vertex;\r\n            });\r\n        } else if (item instanceof Edge) {\r\n            this.edges = this.edges.filter((edge: Edge) => {\r\n                return item !== edge;\r\n            });\r\n        }\r\n    }\r\n\r\n    getChildByTagName(docNode: HTMLElement, tagName: string): HTMLElement | null {\r\n        let retVal = null;\r\n        Array.from(docNode.childNodes).some((childNode: HTMLElement, idx) => {\r\n            if (childNode.tagName === tagName) {\r\n                retVal = childNode;\r\n                return true;\r\n            }\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    walkDocument(docNode: HTMLElement, id: string): Subgraph | Vertex | Edge {\r\n        const retVal: any = this.getItem(docNode, id);\r\n        docNode.childNodes.forEach((childNode: HTMLElement, idx) => {\r\n            switch (childNode.nodeType) {\r\n                case 1:     // \tELEMENT_NODE\r\n                    switch (childNode.tagName) {\r\n                        case \"graph\":\r\n                            break;\r\n                        case \"node\":\r\n                            let isSubgraph = false;\r\n                            const attNode = this.getChildByTagName(childNode, \"att\");\r\n                            if (attNode) {\r\n                                const graphNode = this.getChildByTagName(attNode, \"graph\");\r\n                                if (graphNode) {\r\n                                    isSubgraph = true;\r\n                                    const subgraph = this.walkDocument(graphNode, childNode.getAttribute(\"id\"));\r\n                                    retVal.addSubgraph(subgraph);\r\n                                }\r\n                            }\r\n                            if (!isSubgraph) {\r\n                                const vertex = this.walkDocument(childNode, childNode.getAttribute(\"id\"));\r\n                                retVal.addVertex(vertex);\r\n                            }\r\n                            break;\r\n                        case \"att\":\r\n                            const name = childNode.getAttribute(\"name\");\r\n                            const uname = \"_\" + name;\r\n                            const value = childNode.getAttribute(\"value\");\r\n                            if (name.indexOf(\"Time\") === 0) {\r\n                                safeAssign(retVal, uname, value);\r\n                                safeAssign(retVal, name, \"\" + espTime2Seconds(value));\r\n                            } else if (name.indexOf(\"Size\") === 0) {\r\n                                safeAssign(retVal, uname, value);\r\n                                safeAssign(retVal, name, \"\" + espSize2Bytes(value));\r\n                            } else if (name.indexOf(\"Skew\") === 0) {\r\n                                safeAssign(retVal, uname, value);\r\n                                safeAssign(retVal, name, \"\" + espSkew2Number(value));\r\n                            } else {\r\n                                safeAssign(retVal, name, value);\r\n                            }\r\n                            break;\r\n                        case \"edge\":\r\n                            const edge: any = this.walkDocument(childNode, childNode.getAttribute(\"id\"));\r\n                            if (edge.NumRowsProcessed !== undefined) {\r\n                                edge._eclwatchCount = edge.NumRowsProcessed.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n                            } else if (edge.Count !== undefined) {\r\n                                edge._eclwatchCount = edge.Count.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n                            } else if (edge.count !== undefined) {\r\n                                edge._eclwatchCount = edge.count.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n                            }\r\n                            if (edge.inputProgress) {\r\n                                edge._eclwatchInputProgress = \"[\" + edge.inputProgress.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \"]\";\r\n                            }\r\n                            if (edge.SkewMaxRowsProcessed && edge.SkewMinRowsProcessed) {\r\n                                edge._eclwatchSkew = \"+\" + edge.SkewMaxRowsProcessed + \", \" + edge.SkewMinRowsProcessed;\r\n                            }\r\n                            if (edge._dependsOn) {\r\n                            } else if (edge._childGraph) {\r\n                            } else if (edge._sourceActivity || edge._targetActivity) {\r\n                                edge._isSpill = true;\r\n                                const source = edge.getSource();\r\n                                source._isSpill = true;\r\n                                const target = edge.getTarget();\r\n                                target._isSpill = true;\r\n                            }\r\n                            retVal.addEdge(edge);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    break;\r\n                case 2:     // \tATTRIBUTE_NODE\r\n                case 3:     // \tTEXT_NODE\r\n                case 4:     // \tCDATA_SECTION_NODE\r\n                case 5:     // \tENTITY_REFERENCE_NODE\r\n                case 6:     // \tENTITY_NODE\r\n                case 7:     // \tPROCESSING_INSTRUCTION_NODE\r\n                case 8:     // \tCOMMENT_NODE\r\n                case 9:     // \tDOCUMENT_NODE\r\n                case 10:    // \tDOCUMENT_TYPE_NODE\r\n                case 11:    // \tDOCUMENT_FRAGMENT_NODE\r\n                case 12:    // \tNOTATION_NODE\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    removeSubgraphs(): void {\r\n        const subgraphs = [...this.subgraphs];\r\n        subgraphs.forEach((subgraph) => {\r\n            if (subgraph.__hpcc_parent instanceof Subgraph) {\r\n                subgraph.remove();\r\n            }\r\n        });\r\n    }\r\n\r\n    removeSpillVertices(): void {\r\n        const vertices = [...this.vertices];\r\n        vertices.forEach((vertex) => {\r\n            if (vertex.isSpill()) {\r\n                vertex.remove();\r\n            }\r\n        });\r\n    }\r\n\r\n    getLocalisedXGMML(items: GraphItem[], localisationDepth: number, localisationDistance: number, noSpills: boolean): string {\r\n        const xgmmlWriter = new LocalisedXGMMLWriter(this);\r\n        xgmmlWriter.calcVisibility(items, localisationDepth, localisationDistance, noSpills);\r\n        xgmmlWriter.writeXgmml();\r\n        return \"<graph>\" + xgmmlWriter.m_xgmml + \"</graph>\";\r\n    }\r\n}\r\n","import { Cache, StateObject, scopedLogger, RecursivePartial } from \"@hpcc-js/util\";\r\nimport { format as d3Format } from \"d3-format\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { EclService, IWsEclRequest, IWsEclResponse, IWsEclResult } from \"../services/wsEcl\";\r\nimport { WorkunitsService, WsWorkunits } from \"../services/wsWorkunits\";\r\nimport { Topology } from \"./topology\";\r\nimport { Workunit, IScope } from \"./workunit\";\r\nimport { QueryGraph } from \"./queryGraph\";\r\n\r\nexport { QueryGraph };\r\n\r\nconst logger = scopedLogger(\"@hpcc-js/comms/ecl/query.ts\");\r\n\r\nconst siFormatter = d3Format(\"~s\");\r\n\r\nfunction isNumber(n) {\r\n    return !isNaN(parseFloat(n)) && !isNaN(n - 0);\r\n}\r\nexport interface QueryEx extends WsWorkunits.WUQueryDetailsResponse {\r\n    BaseUrl: string;\r\n}\r\n\r\nclass QueryCache extends Cache<QueryEx, Query> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return Cache.hash([obj.QueryId, obj.QuerySet]);\r\n        });\r\n    }\r\n}\r\nconst _queries = new QueryCache();\r\n\r\nexport class Query extends StateObject<QueryEx, QueryEx> implements QueryEx {\r\n    protected wsWorkunitsService: WorkunitsService;\r\n    get BaseUrl() { return this.wsWorkunitsService.baseUrl; }\r\n    protected topology: Topology;\r\n    protected _requestSchema: IWsEclRequest;\r\n    protected _responseSchema: IWsEclResponse;\r\n\r\n    get properties(): WsWorkunits.WUQueryDetailsResponse { return this.get(); }\r\n    get Exceptions(): WsWorkunits.Exceptions { return this.get(\"Exceptions\"); }\r\n    get QueryId(): string { return this.get(\"QueryId\"); }\r\n    get QuerySet(): string { return this.get(\"QuerySet\"); }\r\n    get QueryName(): string { return this.get(\"QueryName\"); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get Dll(): string { return this.get(\"Dll\"); }\r\n    get Suspended(): boolean { return this.get(\"Suspended\"); }\r\n    get Activated(): boolean { return this.get(\"Activated\"); }\r\n    get SuspendedBy(): string { return this.get(\"SuspendedBy\"); }\r\n    get Clusters(): WsWorkunits.Clusters2 { return this.get(\"Clusters\"); }\r\n    get PublishedBy(): string { return this.get(\"PublishedBy\"); }\r\n    get Comment() { return this.get(\"Comment\"); }\r\n    get LogicalFiles(): WsWorkunits.LogicalFiles { return this.get(\"LogicalFiles\"); }\r\n    get SuperFiles(): WsWorkunits.SuperFiles { return this.get(\"SuperFiles\"); }\r\n    get IsLibrary(): boolean { return this.get(\"IsLibrary\"); }\r\n    get Priority(): string { return this.get(\"Priority\"); }\r\n    get WUSnapShot(): string { return this.get(\"WUSnapShot\"); }\r\n    get CompileTime(): string { return this.get(\"CompileTime\"); }\r\n    get LibrariesUsed(): WsWorkunits.LibrariesUsed { return this.get(\"LibrariesUsed\"); }\r\n    get CountGraphs(): number { return this.get(\"CountGraphs\"); }\r\n    get ResourceURLCount(): number { return this.get(\"ResourceURLCount\"); }\r\n    get WsEclAddresses(): WsWorkunits.WsEclAddresses { return this.get(\"WsEclAddresses\"); }\r\n    get WUGraphs(): WsWorkunits.WUGraphs { return this.get(\"WUGraphs\"); }\r\n    get WUTimers(): WsWorkunits.WUTimers { return this.get(\"WUTimers\"); }\r\n    get PriorityID(): number { return this.get(\"PriorityID\"); }\r\n\r\n    private constructor(optsConnection: IOptions | IConnection | WorkunitsService, querySet: string, queryID: string, queryDetails?: WsWorkunits.WUQueryDetailsResponse) {\r\n        super();\r\n        if (optsConnection instanceof WorkunitsService) {\r\n            this.wsWorkunitsService = optsConnection;\r\n        } else {\r\n            this.wsWorkunitsService = new WorkunitsService(optsConnection);\r\n        }\r\n        this.topology = Topology.attach(this.wsWorkunitsService.opts());\r\n        this.set({\r\n            QuerySet: querySet,\r\n            QueryId: queryID,\r\n            ...queryDetails\r\n        } as QueryEx);\r\n    }\r\n\r\n    static attach(optsConnection: IOptions | IConnection, querySet: string, queryId: string): Query {\r\n        const retVal: Query = _queries.get({ BaseUrl: optsConnection.baseUrl, QuerySet: querySet, QueryId: queryId } as QueryEx, () => {\r\n            return new Query(optsConnection, querySet, queryId);\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    private _eclService: Promise<EclService>;\r\n    protected async wsEclService(): Promise<EclService | undefined> {\r\n        if (!this._eclService) {\r\n            this._eclService = this.topology.fetchServices({}).then(services => {\r\n                for (const espServer of services?.TpEspServers?.TpEspServer ?? []) {\r\n                    for (const binding of espServer?.TpBindings?.TpBinding ?? []) {\r\n                        if (binding?.Service === \"ws_ecl\") {\r\n                            const baseUrl = `${binding.Protocol}://${globalThis.location.hostname}:${binding.Port}`;\r\n                            return new EclService({ baseUrl });\r\n                        }\r\n                    }\r\n                }\r\n                return undefined;\r\n            });\r\n        }\r\n        return this._eclService;\r\n    }\r\n\r\n    private async fetchDetails(): Promise<void> {\r\n        const queryDetails = await this.wsWorkunitsService.WUQueryDetails({\r\n            QuerySet: this.QuerySet,\r\n            QueryId: this.QueryId,\r\n            IncludeStateOnClusters: true,\r\n            IncludeSuperFiles: true,\r\n            IncludeWsEclAddresses: true,\r\n            CheckAllNodes: false\r\n        });\r\n        this.set({ ...queryDetails } as QueryEx);\r\n    }\r\n\r\n    private async fetchRequestSchema(): Promise<void> {\r\n        const wsEclService = await this.wsEclService();\r\n        try {\r\n            this._requestSchema = await wsEclService?.requestJson(this.QuerySet, this.QueryId) ?? [];\r\n        } catch (e) {\r\n            //  See:  https://track.hpccsystems.com/browse/HPCC-29827\r\n            logger.debug(e);\r\n            this._requestSchema = [];\r\n        }\r\n    }\r\n\r\n    private async fetchResponseSchema(): Promise<void> {\r\n        const wsEclService = await this.wsEclService();\r\n        try {\r\n            this._responseSchema = await wsEclService?.responseJson(this.QuerySet, this.QueryId) ?? {};\r\n        } catch (e) {\r\n            //  See:  https://track.hpccsystems.com/browse/HPCC-29827\r\n            logger.debug(e);\r\n            this._responseSchema = {};\r\n        }\r\n    }\r\n\r\n    private async fetchSchema(): Promise<void> {\r\n        await Promise.all([this.fetchRequestSchema(), this.fetchResponseSchema()]);\r\n    }\r\n\r\n    fetchSummaryStats() {\r\n        return this.wsWorkunitsService.WUQueryGetSummaryStats({ Target: this.QuerySet, QueryId: this.QueryId });\r\n    }\r\n\r\n    fetchGraph(GraphName: string = \"\", SubGraphId: string = \"\"): Promise<QueryGraph> {\r\n        return this.wsWorkunitsService.WUQueryGetGraph({ Target: this.QuerySet, QueryId: this.QueryId, GraphName, SubGraphId }).then(response => {\r\n            const graph = new QueryGraph();\r\n            let first = true;\r\n            for (const graphItem of response?.Graphs?.ECLGraphEx || []) {\r\n                if (first) {\r\n                    graph.load(graphItem.Graph);\r\n                    first = false;\r\n                } else {\r\n                    graph.merge(graphItem.Graph);\r\n                }\r\n            }\r\n            return graph;\r\n        });\r\n    }\r\n\r\n    fetchDetailsNormalized(request: RecursivePartial<WsWorkunits.WUDetails> = {}): Promise<{ meta: WsWorkunits.WUDetailsMetaResponse | undefined, columns: { [id: string]: any } | undefined, data: IScope[] | undefined }> {\r\n        const wu = Workunit.attach(this.wsWorkunitsService, this.Wuid);\r\n        if (wu) {\r\n            return Promise.all([this.fetchGraph(), wu.fetchDetailsMeta(), wu.fetchDetailsRaw(request)]).then(promises => {\r\n                const graph = promises[0];\r\n                const meta = promises[1];\r\n                const metrics: WsWorkunits.Scope[] = promises[2];\r\n                const data = metrics.map(metric => {\r\n                    if (metric.Id[0] === \"a\" || metric.Id[0] === \"e\") {\r\n                        const item = graph.idx[metric.Id.substring(1)];\r\n                        for (const key in item) {\r\n                            if (key.charAt(0) !== \"_\" && key.charAt(0) === key.charAt(0).toUpperCase() && (typeof item[key] === \"string\" || typeof item[key] === \"number\" || typeof item[key] === \"boolean\")) {\r\n\r\n                                if (!metric.Properties.Property.some(row => row.Name === key)) {\r\n                                    const isNum = isNumber(item[key]);\r\n                                    let rawValue = isNum ? parseFloat(item[key] as string) : item[key];\r\n                                    let formatted = item[key];\r\n                                    if (key.indexOf(\"Time\") >= 0) {\r\n                                        rawValue = rawValue as number / 1000000000;\r\n                                        formatted = siFormatter(rawValue) + \"s\";\r\n                                    }\r\n                                    metric.Properties.Property.push({\r\n                                        Name: key,\r\n                                        RawValue: rawValue as any,\r\n                                        Formatted: formatted\r\n                                    } as WsWorkunits.Property);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return metric;\r\n                });\r\n\r\n                return wu.normalizeDetails(meta, data);\r\n            });\r\n        }\r\n        return Promise.resolve({ meta: undefined, columns: undefined, data: undefined });\r\n    }\r\n\r\n    async submit(request: object): Promise<Array<{ [key: string]: object[] }>> {\r\n        const wsEclService = await this.wsEclService();\r\n        try {\r\n            return wsEclService?.submit(this.QuerySet, this.QueryId, request).then(results => {\r\n                for (const key in results) {\r\n                    results[key] = results[key].Row;\r\n                }\r\n                return results;\r\n            }) ?? [];\r\n        } catch (e) {\r\n            //  See:  https://track.hpccsystems.com/browse/HPCC-29827\r\n            logger.debug(e);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    async refresh(): Promise<this> {\r\n        await Promise.all([\r\n            this.fetchDetails(),\r\n            this.fetchSchema()\r\n        ]);\r\n        return this;\r\n    }\r\n\r\n    requestFields(): IWsEclRequest {\r\n        if (!this._requestSchema) return [];\r\n        return this._requestSchema;\r\n    }\r\n\r\n    responseFields(): IWsEclResponse {\r\n        if (!this._responseSchema) return {};\r\n        return this._responseSchema;\r\n    }\r\n\r\n    resultNames(): string[] {\r\n        const retVal: string[] = [];\r\n        for (const key in this.responseFields()) {\r\n            retVal.push(key);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    resultFields(resultName: string): IWsEclResult {\r\n        if (!this._responseSchema[resultName]) return [];\r\n        return this._responseSchema[resultName];\r\n    }\r\n}\r\n","import { Cache, Dispatch, IObserverHandle, Message } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { StoreService } from \"../services/wsStore\";\r\n\r\nexport class StoreCache extends Cache<{ BaseUrl: string, Name: string, UserSpecific: boolean, Namespace: string }, Store> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return `${obj.BaseUrl}-${obj.Name}:${obj.UserSpecific}-${obj.Namespace}`;\r\n        });\r\n    }\r\n}\r\nconst _store = new StoreCache();\r\n\r\nexport class ValueChangedMessage extends Message {\r\n\r\n    constructor(readonly key: string, public value: any, public oldValue?: any) {\r\n        super();\r\n    }\r\n\r\n    get canConflate(): boolean { return true; }\r\n    conflate(other: ValueChangedMessage): boolean {\r\n        if (this.key === other.key) {\r\n            this.value = other.value;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    void(): boolean {\r\n        return this.value === this.oldValue;\r\n    }\r\n}\r\n\r\nexport class Store {\r\n    protected connection: StoreService;\r\n    get BaseUrl() { return this.connection.baseUrl; }\r\n    readonly Name: string;\r\n    readonly UserSpecific: boolean;\r\n    readonly Namespace: string;\r\n\r\n    protected _dispatch = new Dispatch();\r\n\r\n    static attach(optsConnection: IOptions | IConnection | StoreService, Name: string = \"HPCCApps\", Namespace: string, UserSpecific: boolean = true): Store {\r\n        const retVal: Store = _store.get({ BaseUrl: optsConnection.baseUrl, Name, UserSpecific, Namespace }, () => {\r\n            return new Store(optsConnection, Name, Namespace, UserSpecific);\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    protected constructor(optsConnection: IOptions | IConnection | StoreService, Name: string, Namespace: string, UserSpecific: boolean) {\r\n        if (optsConnection instanceof StoreService) {\r\n            this.connection = optsConnection;\r\n        } else {\r\n            this.connection = new StoreService(optsConnection);\r\n        }\r\n        this.Name = Name;\r\n        this.UserSpecific = UserSpecific;\r\n        this.Namespace = Namespace;\r\n    }\r\n\r\n    private _knownValues: { [key: string]: any } = {};\r\n\r\n    protected create() {\r\n        this.connection.CreateStore({ Name: this.Name, UserSpecific: this.UserSpecific, Type: \"\", Description: \"\" });\r\n    }\r\n\r\n    set(key: string, value: string, broadcast = true): Promise<void> {\r\n        return this.connection.Set({\r\n            StoreName: this.Name,\r\n            UserSpecific: this.UserSpecific,\r\n            Namespace: this.Namespace,\r\n            Key: key,\r\n            Value: value\r\n        }).then(response => {\r\n            const oldValue = this._knownValues[key];\r\n            this._knownValues[key] = value;\r\n            if (broadcast) {\r\n                this._dispatch.post(new ValueChangedMessage(key, value, oldValue));\r\n            }\r\n        }).catch(e => {\r\n            console.error(`Store.set(\"${key}\", \"${value}\") failed:`, e);\r\n        });\r\n    }\r\n\r\n    get(key: string, broadcast = true): Promise<string | undefined> {\r\n        return this.connection.Fetch({\r\n            StoreName: this.Name,\r\n            UserSpecific: this.UserSpecific,\r\n            Namespace: this.Namespace,\r\n            Key: key\r\n        }).then(response => {\r\n            const oldValue = this._knownValues[key];\r\n            this._knownValues[key] = response.Value;\r\n            if (broadcast) {\r\n                this._dispatch.post(new ValueChangedMessage(key, response.Value, oldValue));\r\n            }\r\n            return response.Value;\r\n        }).catch(e => {\r\n            console.error(`Store.get(${key}) failed:`, e);\r\n            return undefined;\r\n        });\r\n    }\r\n\r\n    getAll(broadcast = true): Promise<{ [key: string]: string }> {\r\n        return this.connection.FetchAll({\r\n            StoreName: this.Name,\r\n            UserSpecific: this.UserSpecific,\r\n            Namespace: this.Namespace\r\n        }).then(response => {\r\n            const retVal: { [key: string]: string } = {};\r\n            const deletedValues = this._knownValues;\r\n            this._knownValues = {};\r\n            response.Pairs.Pair.forEach(pair => {\r\n                const oldValue = this._knownValues[pair.Key];\r\n                this._knownValues[pair.Key] = pair.Value;\r\n                delete deletedValues[pair.Key];\r\n                retVal[pair.Key] = pair.Value;\r\n                if (broadcast) {\r\n                    this._dispatch.post(new ValueChangedMessage(pair.Key, pair.Value, oldValue));\r\n                }\r\n            });\r\n            if (broadcast) {\r\n                for (const key in deletedValues) {\r\n                    this._dispatch.post(new ValueChangedMessage(key, undefined, deletedValues[key]));\r\n                }\r\n            }\r\n            return retVal;\r\n        }).catch(e => {\r\n            console.error(\"Store.getAll failed:\", e);\r\n            return {};\r\n        });\r\n    }\r\n\r\n    delete(key: string, broadcast = true): Promise<void> {\r\n        return this.connection.Delete({\r\n            StoreName: this.Name,\r\n            UserSpecific: this.UserSpecific,\r\n            Namespace: this.Namespace,\r\n            Key: key\r\n        }).then(response => {\r\n            const oldValue = this._knownValues[key];\r\n            delete this._knownValues[key];\r\n            if (broadcast) {\r\n                this._dispatch.post(new ValueChangedMessage(key, undefined, oldValue));\r\n            }\r\n        }).catch(e => {\r\n            console.error(`Store.delete(${key}) failed:`, e);\r\n        });\r\n    }\r\n\r\n    monitor(callback: (messages: ValueChangedMessage[]) => void): IObserverHandle {\r\n        return this._dispatch.attach(callback);\r\n    }\r\n}\r\n","import { Cache, IEvent, scopedLogger, StateCallback, StateEvents, StateObject, StatePropCallback } from \"@hpcc-js/util\";\r\nimport { IConnection, IOptions } from \"../connection\";\r\nimport { ESPExceptions } from \"../espConnection\";\r\nimport { WsSMC } from \"../services/wsSMC\";\r\nimport { FileSpray, FileSprayService, UpdateDFUWorkunitEx } from \"../services/fileSpray\";\r\nimport * as WsTopology from \"../services/wsTopology\";\r\n\r\nconst logger = scopedLogger(\"@hpcc-js/comms/dfuWorkunit.ts\");\r\n\r\nenum States {\r\n    Unknown = 0,\r\n    Scheduled,\r\n    Queued,\r\n    Started,\r\n    Aborted,\r\n    Failed,\r\n    Finished,\r\n    Monitoring,\r\n    Aborting,\r\n    NotFound = 999\r\n}\r\n\r\nexport class DFUWorkunitCache extends Cache<{ BaseUrl: string, ID: string }, DFUWorkunit> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return `${obj.BaseUrl}-${obj.ID}`;\r\n        });\r\n    }\r\n}\r\nconst _workunits = new DFUWorkunitCache();\r\n\r\nexport type DFUWorkunitEvents = \"finished\" | StateEvents;\r\nexport type UDFUWorkunitState = FileSpray.DFUWorkunit;\r\nexport type IDFUWorkunitState = FileSpray.DFUWorkunit | WsSMC.ActiveWorkunit;\r\nexport class DFUWorkunit extends StateObject<UDFUWorkunitState, IDFUWorkunitState> implements FileSpray.DFUWorkunit {\r\n    connection: FileSprayService;\r\n    topologyConnection: WsTopology.TopologyService;\r\n    get BaseUrl() { return this.connection.baseUrl; }\r\n\r\n    //  Accessors  ---\r\n    get properties(): FileSpray.DFUWorkunit { return this.get(); }\r\n    get ID(): string { return this.get(\"ID\"); }\r\n    get DFUServerName(): string { return this.get(\"DFUServerName\"); }\r\n    get ClusterName(): string { return this.get(\"ClusterName\"); }\r\n    get JobName(): string { return this.get(\"JobName\"); }\r\n    get Queue(): string { return this.get(\"Queue\"); }\r\n    get User(): string { return this.get(\"User\"); }\r\n    get isProtected(): boolean { return this.get(\"isProtected\"); }\r\n    get Command(): number { return this.get(\"Command\"); }\r\n    get CommandMessage(): string { return this.get(\"CommandMessage\"); }\r\n    get PercentDone(): number { return this.get(\"PercentDone\"); }\r\n    get SecsLeft(): number { return this.get(\"SecsLeft\"); }\r\n    get ProgressMessage(): string { return this.get(\"ProgressMessage\"); }\r\n    get SummaryMessage(): string { return this.get(\"SummaryMessage\"); }\r\n    get State(): number { return this.get(\"State\", States.Unknown); }\r\n    get SourceLogicalName(): string { return this.get(\"SourceLogicalName\"); }\r\n    get SourceIP(): string { return this.get(\"SourceIP\"); }\r\n    get SourceFilePath(): string { return this.get(\"SourceFilePath\"); }\r\n    get SourceDali(): string { return this.get(\"SourceDali\"); }\r\n    get SourceRecordSize(): number { return this.get(\"SourceRecordSize\"); }\r\n    get SourceFormat(): number { return this.get(\"SourceFormat\"); }\r\n    get RowTag(): string { return this.get(\"RowTag\"); }\r\n    get SourceNumParts(): number { return this.get(\"SourceNumParts\"); }\r\n    get SourceDirectory(): string { return this.get(\"SourceDirectory\"); }\r\n    get DestLogicalName(): string { return this.get(\"DestLogicalName\"); }\r\n    get DestGroupName(): string { return this.get(\"DestGroupName\"); }\r\n    get DestDirectory(): string { return this.get(\"DestDirectory\"); }\r\n    get DestIP(): string { return this.get(\"DestIP\"); }\r\n    get DestFilePath(): string { return this.get(\"DestFilePath\"); }\r\n    get DestFormat(): number { return this.get(\"DestFormat\"); }\r\n    get DestNumParts(): number { return this.get(\"DestNumParts\"); }\r\n    get DestRecordSize(): number { return this.get(\"DestRecordSize\"); }\r\n    get Replicate(): boolean { return this.get(\"Replicate\"); }\r\n    get Overwrite(): boolean { return this.get(\"Overwrite\"); }\r\n    get Compress(): boolean { return this.get(\"Compress\"); }\r\n    get SourceCsvSeparate(): string { return this.get(\"SourceCsvSeparate\"); }\r\n    get SourceCsvQuote(): string { return this.get(\"SourceCsvQuote\"); }\r\n    get SourceCsvTerminate(): string { return this.get(\"SourceCsvTerminate\"); }\r\n    get SourceCsvEscape(): string { return this.get(\"SourceCsvEscape\"); }\r\n    get TimeStarted(): string { return this.get(\"TimeStarted\"); }\r\n    get TimeStopped(): string { return this.get(\"TimeStopped\"); }\r\n    get StateMessage(): string { return this.get(\"StateMessage\"); }\r\n    get MonitorEventName(): string { return this.get(\"MonitorEventName\"); }\r\n    get MonitorSub(): boolean { return this.get(\"MonitorSub\"); }\r\n    get MonitorShotLimit(): number { return this.get(\"MonitorShotLimit\"); }\r\n    get SourceDiffKeyName(): string { return this.get(\"SourceDiffKeyName\"); }\r\n    get DestDiffKeyName(): string { return this.get(\"DestDiffKeyName\"); }\r\n    get Archived(): boolean { return this.get(\"Archived\"); }\r\n    get encrypt(): string { return this.get(\"encrypt\"); }\r\n    get decrypt(): string { return this.get(\"decrypt\"); }\r\n    get failIfNoSourceFile(): boolean { return this.get(\"failIfNoSourceFile\"); }\r\n    get recordStructurePresent(): boolean { return this.get(\"recordStructurePresent\"); }\r\n    get quotedTerminator(): boolean { return this.get(\"quotedTerminator\"); }\r\n    get preserveCompression(): boolean { return this.get(\"preserveCompression\"); }\r\n    get expireDays(): number { return this.get(\"expireDays\"); }\r\n    get PreserveFileParts(): boolean { return this.get(\"PreserveFileParts\"); }\r\n    get FileAccessCost(): number { return this.get(\"FileAccessCost\"); }\r\n    get KbPerSecAve(): number { return this.get(\"KbPerSecAve\"); }\r\n    get KbPerSec(): number { return this.get(\"KbPerSec\"); }\r\n\r\n    //  Factories  ---\r\n    static create(optsConnection: IOptions | IConnection, dfuServerQueue: string): Promise<DFUWorkunit> {\r\n        const retVal: DFUWorkunit = new DFUWorkunit(optsConnection);\r\n        return retVal.connection.CreateDFUWorkunit({ DFUServerQueue: dfuServerQueue }).then((response) => {\r\n            _workunits.set(retVal);\r\n            retVal.set(response.result);\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    static attach(optsConnection: IOptions | IConnection, wuid: string, state?: IDFUWorkunitState): DFUWorkunit {\r\n        const retVal: DFUWorkunit = _workunits.get({ BaseUrl: optsConnection.baseUrl, ID: wuid }, () => {\r\n            return new DFUWorkunit(optsConnection, wuid);\r\n        });\r\n        if (state) {\r\n            retVal.set(state);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    static sprayFixed(server: IOptions | IConnection, request: Partial<FileSpray.SprayFixed>): Promise<DFUWorkunit> {\r\n        const service = new FileSprayService(server);\r\n        return service.SprayFixedEx({\r\n            ...request\r\n        }).then(response => {\r\n            const wuid = response.wuid;\r\n            return service.GetDFUWorkunit({ wuid }).then(response => {\r\n                return DFUWorkunit.attach(server, wuid, response.result);\r\n            });\r\n        });\r\n    }\r\n\r\n    static sprayVariable(server: IOptions | IConnection, request: Partial<FileSpray.SprayVariable>): Promise<DFUWorkunit> {\r\n        const service = new FileSprayService(server);\r\n        return service.SprayVariableEx({\r\n            ...request\r\n        }).then(response => {\r\n            const wuid = response.wuid;\r\n            return service.GetDFUWorkunit({ wuid }).then(response => {\r\n                return DFUWorkunit.attach(server, wuid, response.result);\r\n            });\r\n        });\r\n    }\r\n\r\n    static despray(server: IOptions | IConnection, request: Partial<FileSpray.Despray>): Promise<DFUWorkunit> {\r\n        const service = new FileSprayService(server);\r\n        return service.DesprayEx({\r\n            ...request\r\n        }).then(response => {\r\n            const wuid = response.wuid;\r\n            return service.GetDFUWorkunit({ wuid }).then(response => {\r\n                return DFUWorkunit.attach(server, wuid, response.result);\r\n            });\r\n        });\r\n    }\r\n\r\n    update(request: Partial<UpdateDFUWorkunitEx>): Promise<FileSpray.UpdateDFUWorkunitResponse> {\r\n        return this.connection.UpdateDFUWorkunitEx({\r\n            wu: {\r\n                JobName: request?.wu?.JobName ?? this.JobName,\r\n                isProtected: request?.wu?.isProtected ?? this.isProtected,\r\n                ID: this.ID,\r\n                State: this.State\r\n            },\r\n            ClusterOrig: this.ClusterName,\r\n            JobNameOrig: this.JobName,\r\n            isProtectedOrig: this.isProtected,\r\n            StateOrig: this.State\r\n        });\r\n    }\r\n\r\n    isComplete(): boolean {\r\n        switch (this.State) {\r\n            case States.Finished:\r\n            case States.Failed:\r\n            case States.Aborted:\r\n            case States.NotFound:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isFailed() {\r\n        if (this.isComplete() && this.State !== States.Finished) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDeleted() {\r\n        switch (this.State) {\r\n            case States.NotFound:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isRunning(): boolean {\r\n        return !this.isComplete();\r\n    }\r\n\r\n    abort(): Promise<FileSpray.AbortDFUWorkunitResponse> {\r\n        return this.connection.AbortDFUWorkunit({ wuid: this.ID });\r\n    }\r\n\r\n    delete() {\r\n        return this.DFUWUAction(FileSpray.DFUWUActions.Delete).then(response => {\r\n            return this.refresh().then(() => {\r\n                this._monitor();\r\n                return response;\r\n            });\r\n        });\r\n    }\r\n\r\n    async refresh(full: boolean = false): Promise<this> {\r\n        await this.GetDFUWorkunit();\r\n        return this;\r\n    }\r\n\r\n    fetchXML(callback?: void): Promise<string> {\r\n        return this.DFUWUFile();\r\n    }\r\n\r\n    //  Monitoring  ---\r\n    protected _monitor(): void {\r\n        if (this.isComplete()) {\r\n            this._monitorTickCount = 0;\r\n            return;\r\n        }\r\n        super._monitor();\r\n    }\r\n\r\n    protected _monitorTimeoutDuration(): number {\r\n        const retVal = super._monitorTimeoutDuration();\r\n        if (this._monitorTickCount <= 1) {          //  Once\r\n            return 3000;\r\n        } else if (this._monitorTickCount <= 5) {   //  Twice\r\n            return 6000;\r\n        } else if (this._monitorTickCount <= 7) {   //  Twice\r\n            return 12000;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    protected DFUWUFile(_request: Partial<FileSpray.DFUWUFileRequest> = {}): Promise<string> {\r\n        return this.connection.DFUWUFileEx({\r\n            ..._request, Wuid: this.ID\r\n        }).then(response => {\r\n            //TODO: additional processing?\r\n            return response;\r\n        }).catch((e: ESPExceptions) => {\r\n            return \"\";\r\n        });\r\n    }\r\n\r\n    protected DFUWUAction(actionType: FileSpray.DFUWUActions): Promise<FileSpray.DFUWorkunitsActionResponse> {\r\n        return this.connection.DFUWorkunitsAction({\r\n            wuids: { Item: [this.ID] },\r\n            Type: actionType\r\n        }).then((response) => {\r\n            if (actionType === FileSpray.DFUWUActions.Delete) return response;\r\n            return this.refresh().then(() => {\r\n                this._monitor();\r\n                return response;\r\n            });\r\n        });\r\n    }\r\n\r\n    //  Events  ---\r\n    on(eventID: DFUWorkunitEvents, propIDorCallback: StateCallback | keyof UDFUWorkunitState, callback?: StatePropCallback): this {\r\n        if (this.isCallback(propIDorCallback)) {\r\n            switch (eventID) {\r\n                case \"finished\":\r\n                    super.on(\"propChanged\", \"State\", (changeInfo: IEvent) => {\r\n                        if (this.isComplete()) {\r\n                            propIDorCallback([changeInfo]);\r\n                        }\r\n                    });\r\n                    break;\r\n                case \"changed\":\r\n                    super.on(eventID, propIDorCallback);\r\n                    break;\r\n                default:\r\n            }\r\n        } else {\r\n            switch (eventID) {\r\n                case \"changed\":\r\n                    super.on(eventID, propIDorCallback, callback!);\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        this._monitor();\r\n        return this;\r\n    }\r\n\r\n    watchUntilComplete(callback?: StateCallback): Promise<this> {\r\n        return new Promise((resolve, _) => {\r\n            const watchHandle = this.watch((changes) => {\r\n                if (callback) {\r\n                    callback(changes);\r\n                }\r\n                if (this.isComplete()) {\r\n                    watchHandle.release();\r\n                    resolve(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    watchUntilRunning(callback?: StateCallback): Promise<this> {\r\n        return new Promise((resolve, _) => {\r\n            const watchHandle = this.watch((changes) => {\r\n                if (callback) {\r\n                    callback(changes);\r\n                }\r\n                if (this.isComplete() || this.isRunning()) {\r\n                    watchHandle.release();\r\n                    resolve(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    //  ---  ---  ---\r\n    protected constructor(optsConnection: IOptions | IConnection, wuid?: string) {\r\n        super();\r\n        this.connection = new FileSprayService(optsConnection);\r\n        this.topologyConnection = new WsTopology.TopologyService(optsConnection);\r\n        this.clearState(wuid);\r\n    }\r\n\r\n    clearState(wuid?: string) {\r\n        this.clear({\r\n            ID: wuid,\r\n            State: States.Unknown\r\n        });\r\n    }\r\n\r\n    //  FileSpray passthroughs  ---\r\n    protected GetDFUWorkunit(_request: Partial<FileSpray.GetDFUWorkunit> = {}): Promise<FileSpray.GetDFUWorkunitResponse> {\r\n        return this.connection.GetDFUWorkunit({ ..._request, wuid: this.ID }).then((response) => {\r\n            this.set(response.result);\r\n            return response;\r\n        }).catch((e: ESPExceptions) => {\r\n            //  deleted  ---\r\n            const wuMissing = e.Exception.some((exception) => {\r\n                if (exception.Code === 20080 || exception.Code === 20081) {\r\n                    this.clearState(this.ID);\r\n                    this.set(\"State\", States.NotFound);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!wuMissing) {\r\n                logger.warning(\"Unexpected exception:  \");\r\n                throw e;\r\n            }\r\n            return {} as FileSpray.GetDFUWorkunitResponse;\r\n        });\r\n    }\r\n}","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n\r\nimport { Dictionary, DictionaryNoCase, find, SAXStackParser, scopedLogger, XMLNode } from \"@hpcc-js/util\";\r\nimport { ClientTools, locateClientTools } from \"./eclcc\";\r\n\r\nconst logger = scopedLogger(\"clienttools/eclmeta\");\r\n\r\nexport interface IFilePath {\r\n    scope: ECLScope;\r\n}\r\n\r\nconst _inspect = false;\r\nfunction inspect(obj: any, _id: string, known: any) {\r\n    if (_inspect) {\r\n        for (const key in obj) {\r\n            const id = `${_id}.${key}`;\r\n            if (key !== \"$\" && known[key] === undefined && known[key.toLowerCase() + \"s\"] === undefined) {\r\n                logger.debug(id);\r\n            }\r\n        }\r\n        if (obj.$) {\r\n            inspect(obj.$, _id + \".$\", known);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Attr {\r\n    __attrs: { [id: string]: string };\r\n    name: string;\r\n\r\n    constructor(xmlAttr: XMLNode) {\r\n        this.__attrs = xmlAttr.$;\r\n        this.name = xmlAttr.$.name;\r\n    }\r\n}\r\n\r\nexport class Field {\r\n    __attrs: { [id: string]: string };\r\n    definition: Definition;\r\n    get scope(): ECLScope {\r\n        return this.definition;\r\n    }\r\n    name: string;\r\n    type: string;\r\n\r\n    constructor(definition: Definition, xmlField: XMLNode) {\r\n        this.__attrs = xmlField.$;\r\n        this.definition = definition;\r\n        this.name = xmlField.$.name;\r\n        this.type = xmlField.$.type;\r\n    }\r\n}\r\n\r\nexport interface ECLDefinitionLocation {\r\n    filePath: string;\r\n    line: number;\r\n    charPos: number;\r\n    definition?: Definition;\r\n    source?: Source;\r\n}\r\n\r\nexport interface ISuggestion {\r\n    name: string;\r\n    type: string;\r\n}\r\n\r\nexport class ECLScope implements IFilePath {\r\n    get scope(): ECLScope {\r\n        return this;\r\n    }\r\n    name: string;\r\n    type: string;\r\n    sourcePath: string;\r\n    line: number;\r\n    start: number;\r\n    body: number;\r\n    end: number;\r\n    definitions: Definition[];\r\n\r\n    constructor(name: string, type: string, sourcePath: string, xmlDefinitions: XMLNode[], line: number = 1, start: number = 0, body: number = 0, end: number = Number.MAX_VALUE) {\r\n        this.name = name;\r\n        this.type = type;\r\n        this.sourcePath = path.normalize(sourcePath);\r\n        this.line = +line - 1;\r\n        this.start = +start;\r\n        this.body = +body;\r\n        this.end = +end;\r\n        this.definitions = this.parseDefinitions(xmlDefinitions);\r\n    }\r\n\r\n    private parseDefinitions(definitions: XMLNode[] = []): Definition[] {\r\n        return definitions.map(definition => {\r\n            const retVal = new Definition(this.sourcePath, definition);\r\n            inspect(definition, \"definition\", retVal);\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    contains(charOffset: number) {\r\n        return charOffset >= this.start && charOffset <= this.end;\r\n    }\r\n\r\n    scopeStackAt(charOffset: number): ECLScope[] {\r\n        let retVal: ECLScope[] = [];\r\n        if (this.contains(charOffset)) {\r\n            retVal.push(this);\r\n            this.definitions.forEach(def => {\r\n                retVal = def.scopeStackAt(charOffset).concat(retVal);\r\n            });\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    private _resolve(defs: Definition[] = [], qualifiedID: string): Definition | undefined {\r\n        const qualifiedIDParts = qualifiedID.split(\".\");\r\n        const base = qualifiedIDParts.shift();\r\n        const retVal = find(defs, def => {\r\n            if (typeof def.name === \"string\" && typeof base === \"string\" && def.name.toLowerCase() === base.toLowerCase()) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        if (retVal && retVal.definitions.length && qualifiedIDParts.length) {\r\n            return this._resolve(retVal.definitions, qualifiedIDParts.join(\".\"));\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    resolve(qualifiedID: string): Definition | undefined {\r\n        return this._resolve(this.definitions, qualifiedID);\r\n    }\r\n\r\n    suggestions(): ISuggestion[] {\r\n        return this.definitions.map(def => {\r\n            return {\r\n                name: def.name,\r\n                type: this.type\r\n            };\r\n        });\r\n    }\r\n}\r\n\r\nexport class Definition extends ECLScope {\r\n    __attrs: { [id: string]: string };\r\n    exported: boolean;\r\n    shared: boolean;\r\n    fullname: string;\r\n    inherittype: string;\r\n    attrs: Attr[];\r\n    fields: Field[];\r\n\r\n    constructor(sourcePath: string, xmlDefinition: XMLNode) {\r\n        super(xmlDefinition.$.name, xmlDefinition.$.type, sourcePath, xmlDefinition.children(\"Definition\"), xmlDefinition.$.line, xmlDefinition.$.start, xmlDefinition.$.body, xmlDefinition.$.end);\r\n        this.__attrs = xmlDefinition.$;\r\n        this.exported = !!xmlDefinition.$.exported;\r\n        this.shared = !!xmlDefinition.$.shared;\r\n        this.fullname = xmlDefinition.$.fullname;\r\n        this.inherittype = xmlDefinition.$.inherittype;\r\n        this.attrs = this.parseAttrs(xmlDefinition.children(\"Attr\"));\r\n        this.fields = this.parseFields(xmlDefinition.children(\"Field\"));\r\n    }\r\n\r\n    private parseAttrs(attrs: XMLNode[] = []): Attr[] {\r\n        return attrs.map(attr => {\r\n            const retVal = new Attr(attr);\r\n            inspect(attr, \"attr\", retVal);\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    private parseFields(fields: XMLNode[] = []): Field[] {\r\n        return fields.map(field => {\r\n            const retVal = new Field(this, field);\r\n            inspect(field, \"field\", retVal);\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    suggestions() {\r\n        return super.suggestions().concat(this.fields.map(field => {\r\n            return {\r\n                name: field.name,\r\n                type: field.type\r\n            };\r\n        }));\r\n    }\r\n}\r\n\r\nexport class Import {\r\n    __attrs: { [id: string]: string };\r\n    name: string;\r\n    ref: string;\r\n    start: number;\r\n    end: number;\r\n    line: number;\r\n\r\n    constructor(xmlImport: XMLNode) {\r\n        this.__attrs = xmlImport.$;\r\n        this.name = xmlImport.$.name;\r\n        this.ref = xmlImport.$.ref;\r\n        this.start = xmlImport.$.start;\r\n        this.end = xmlImport.$.end;\r\n        this.line = xmlImport.$.line;\r\n    }\r\n}\r\n\r\nexport class Source extends ECLScope {\r\n    imports: Import[];\r\n    __attrs: { [id: string]: string };\r\n\r\n    constructor(xmlSource: XMLNode) {\r\n        super(xmlSource.$.name, \"source\", xmlSource.$.sourcePath, xmlSource.children(\"Definition\"));\r\n        this.__attrs = xmlSource.$;\r\n        const nameParts = xmlSource.$.name.split(\".\");\r\n        nameParts.pop();\r\n        const fakeNode = new XMLNode(\"\");\r\n        fakeNode.appendAttribute(\"name\", \"$\");\r\n        fakeNode.appendAttribute(\"ref\", nameParts.join(\".\"));\r\n        this.imports = [\r\n            new Import(fakeNode),\r\n            ...this.parseImports(xmlSource.children(\"Import\"))\r\n        ];\r\n    }\r\n\r\n    private parseImports(imports: XMLNode[] = []): Import[] {\r\n        return imports.map(imp => {\r\n            const retVal = new Import(imp);\r\n            inspect(imp, \"import\", retVal);\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    resolve(qualifiedID: string, charOffset?: number): Definition | undefined {\r\n        let retVal;\r\n\r\n        //  Check Inner Scopes  ---\r\n        if (!retVal && charOffset !== undefined) {\r\n            const scopes = this.scopeStackAt(charOffset);\r\n            scopes.some(scope => {\r\n                retVal = scope.resolve(qualifiedID);\r\n                return !!retVal;\r\n            });\r\n        }\r\n\r\n        //  Check Definitions  ---\r\n        if (!retVal) {\r\n            retVal = super.resolve(qualifiedID);\r\n        }\r\n        return retVal;\r\n    }\r\n}\r\n\r\nconst isHiddenDirectory = source => path.basename(source).indexOf(\".\") === 0;\r\nconst isDirectory = source => fs.lstatSync(source).isDirectory() && !isHiddenDirectory(source);\r\nconst isEcl = source => [\".ecl\", \".ecllib\"].indexOf(path.extname(source).toLowerCase()) >= 0;\r\nconst modAttrs = source => fs.readdirSync(source).map(name => path.join(source, name)).filter(path => isDirectory(path) || isEcl(path));\r\n\r\nexport class File extends ECLScope {\r\n\r\n    constructor(name: string, sourcePath: string) {\r\n        super(name, \"file\", sourcePath, []);\r\n    }\r\n\r\n    suggestions(): ISuggestion[] {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport class Folder extends ECLScope {\r\n\r\n    constructor(name: string, sourcePath: string) {\r\n        super(name, \"folder\", sourcePath, []);\r\n    }\r\n\r\n    suggestions(): ISuggestion[] {\r\n        return modAttrs(this.sourcePath).map(folder => {\r\n            return {\r\n                name: path.basename(folder, \".ecl\"),\r\n                type: \"folder\"\r\n            };\r\n        });\r\n    }\r\n}\r\n\r\nexport class Workspace {\r\n    _workspacePath: string;\r\n    _eclccPath?: string;\r\n    _clientTools: ClientTools;\r\n    _sourceByID: DictionaryNoCase<Source> = new DictionaryNoCase<Source>();\r\n    _sourceByPath: Dictionary<Source> = new Dictionary<Source>();\r\n    private _test: DictionaryNoCase<IFilePath> = new DictionaryNoCase<IFilePath>();\r\n\r\n    constructor(workspacePath: string, eclccPath?: string) {\r\n        this._workspacePath = workspacePath;\r\n        this._eclccPath = eclccPath;\r\n    }\r\n\r\n    refresh() {\r\n        this.primeWorkspace();\r\n        this.primeClientTools();\r\n    }\r\n\r\n    primeClientTools(): Promise<this> {\r\n        return locateClientTools(this._eclccPath, \"\", this._workspacePath).then(clientTools => {\r\n            this._clientTools = clientTools;\r\n            return clientTools.paths();\r\n        }).then(paths => {\r\n            for (const knownFolder of [\"ECLCC_ECLLIBRARY_PATH\", \"ECLCC_PLUGIN_PATH\"]) {\r\n                if (paths[knownFolder] && fs.existsSync(paths[knownFolder])) {\r\n                    this.walkChildFolders(paths[knownFolder], paths[knownFolder]);\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n\r\n    primeWorkspace() {\r\n        if (fs.existsSync(this._workspacePath)) {\r\n            this.visitFolder(this._workspacePath, this._workspacePath);\r\n        }\r\n    }\r\n\r\n    walkChildFolders(folderPath: string, refPath: string, force: boolean = false) {\r\n        for (const child of modAttrs(folderPath)) {\r\n            if (!isDirectory(child)) {\r\n                this.visitFile(child, refPath, force);\r\n            } else {\r\n                this.visitFolder(child, refPath, force);\r\n            }\r\n        }\r\n    }\r\n\r\n    visitFile(filePath: string, refPath: string, force: boolean = false) {\r\n        const filePathInfo = path.parse(filePath);\r\n        const pathNoExt = path.join(filePathInfo.dir, filePathInfo.name);\r\n        const name = path.relative(refPath, pathNoExt).split(path.sep).join(\".\");\r\n        if (force || !this._test.has(name)) {\r\n            this._test.set(name, new File(\"\", filePath));\r\n        }\r\n    }\r\n\r\n    visitFolder(folderPath: string, refPath: string, force: boolean = false) {\r\n        const name = path.relative(refPath, folderPath).split(path.sep).join(\".\");\r\n        if (force || !this._test.has(name)) {\r\n            this._test.set(name, new Folder(name, folderPath));\r\n            this.walkChildFolders(folderPath, refPath, force);\r\n        }\r\n    }\r\n\r\n    buildStack(parentStack: string[], name: string, removeDupID: boolean): { stack: string[], qid: string } {\r\n        const nameStack = name.split(\".\");\r\n        if (removeDupID && parentStack[parentStack.length - 1] === nameStack[0]) {\r\n            nameStack.shift();\r\n        }\r\n        const stack = [...parentStack, ...nameStack];\r\n        const qid: string = stack.join(\".\");\r\n        return {\r\n            stack,\r\n            qid\r\n        };\r\n    }\r\n\r\n    walkECLScope(parentStack: string[], scope: ECLScope) {\r\n        const info = this.buildStack(parentStack, scope.name, true);\r\n        this._test.set(info.qid, scope);\r\n        for (const def of scope.definitions) {\r\n            this.walkDefinition(info.stack, def);\r\n        }\r\n    }\r\n\r\n    walkField(parentStack: string[], field: Field) {\r\n        const info = this.buildStack(parentStack, field.name, false);\r\n        this._test.set(info.qid, field);\r\n    }\r\n\r\n    walkDefinition(parentStack: string[], definition: Definition) {\r\n        const info = this.buildStack(parentStack, definition.name, true);\r\n        this.walkECLScope(parentStack, definition);\r\n        for (const field of definition.fields) {\r\n            this.walkField(info.stack, field);\r\n        }\r\n    }\r\n\r\n    walkSource(source: Source) {\r\n        // const dirName = path.dirname(source.sourcePath);\r\n        // const relName = path.relative(this._workspacePath, dirName).split(path.sep).join(\".\");\r\n        // const folder = new Folder(relName, dirName);\r\n        // this._test.set(folder.name, folder);\r\n        this.walkECLScope([], source);\r\n    }\r\n\r\n    parseSources(sources: XMLNode[] = []): void {\r\n        for (const _source of sources) {\r\n            if (_source.$.name) {   //  Plugins have no name...\r\n                const source = new Source(_source);\r\n                inspect(_source, \"source\", source);\r\n                this._sourceByID.set(source.name, source);\r\n                this._sourceByPath.set(source.sourcePath, source);\r\n\r\n                //  If external source like \"std.system.ThorLib\" then need to backup to \"std\" and add its folder\r\n                if (source.name) {\r\n                    const sourceNameParts = source.name.split(\".\");\r\n                    let depth = sourceNameParts.length;\r\n                    if (depth > 1) {\r\n                        let sourcePath = source.sourcePath;\r\n                        while (depth > 1) {\r\n                            sourcePath = path.dirname(sourcePath);\r\n                            --depth;\r\n                        }\r\n                        this.visitFolder(sourcePath, path.dirname(sourcePath));\r\n                    }\r\n                }\r\n                this.walkSource(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    parseMetaXML(metaXML: string): string[] {\r\n        const metaParser = new MetaParser();\r\n        metaParser.parse(metaXML);\r\n        this.parseSources(metaParser.sources);\r\n        return metaParser.sources.map(source => path.normalize(source.$.sourcePath));\r\n    }\r\n\r\n    resolveQualifiedID(filePath: string, qualifiedID: string, charOffset?: number): ECLScope | undefined {\r\n        let retVal: ECLScope | undefined;\r\n        if (!retVal && this._test.has(qualifiedID)) {\r\n            retVal = this._test.get(qualifiedID).scope;\r\n        }\r\n        if (!retVal && this._sourceByPath.has(filePath)) {\r\n            const eclSource = this._sourceByPath.get(filePath);\r\n\r\n            //  Resolve Imports  ---\r\n            const qualifiedIDParts = qualifiedID.split(\".\");\r\n            for (const imp of eclSource.imports) {\r\n                if (imp.name.toLowerCase() === qualifiedIDParts[0].toLowerCase()) {\r\n                    if (imp.ref) {\r\n                        qualifiedIDParts[0] = imp.ref;\r\n                    } else {\r\n                        qualifiedIDParts.shift();\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            let realQID = qualifiedIDParts.join(\".\");\r\n            if (!retVal && this._test.has(realQID)) {\r\n                retVal = this._test.get(realQID).scope;\r\n            }\r\n            if (!retVal) {\r\n                realQID = [...eclSource.name.split(\".\"), ...qualifiedIDParts].join(\".\");\r\n                if (this._test.has(realQID)) {\r\n                    retVal = this._test.get(realQID).scope;\r\n                }\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    resolvePartialID(filePath: string, partialID: string, charOffset: number): ECLScope | undefined {\r\n        partialID = partialID.toLowerCase();\r\n        const partialIDParts = partialID.split(\".\");\r\n        partialIDParts.pop();\r\n        const partialIDQualifier = partialIDParts.length === 1 ? partialIDParts[0] : partialIDParts.join(\".\");\r\n        return this.resolveQualifiedID(filePath, partialIDQualifier, charOffset);\r\n    }\r\n}\r\n\r\nconst workspaceCache = new Dictionary<Workspace>();\r\nexport function attachWorkspace(_workspacePath: string, eclccPath?: string): Workspace {\r\n    const workspacePath = path.normalize(_workspacePath);\r\n    if (!workspaceCache.has(workspacePath)) {\r\n        const workspace = new Workspace(workspacePath, eclccPath);\r\n        workspaceCache.set(workspacePath, workspace);\r\n        workspace.refresh();\r\n    }\r\n    return workspaceCache.get(workspacePath);\r\n}\r\n\r\nfunction isQualifiedIDChar(lineText: string, charPos: number, reverse: boolean) {\r\n    if (charPos < 0) return false;\r\n    const testChar = lineText.charAt(charPos);\r\n    return (reverse ? /[a-zA-Z\\d_\\.$]/ : /[a-zA-Z\\d_]/).test(testChar);\r\n}\r\n\r\nexport function qualifiedIDBoundary(lineText: string, charPos: number, reverse: boolean) {\r\n    while (isQualifiedIDChar(lineText, charPos, reverse)) {\r\n        charPos += reverse ? -1 : 1;\r\n    }\r\n    return charPos + (reverse ? 1 : -1);\r\n}\r\n\r\nclass MetaParser extends SAXStackParser {\r\n    sources: XMLNode[] = [];\r\n\r\n    endXMLNode(e: XMLNode) {\r\n        switch (e.name) {\r\n            case \"Source\":\r\n                this.sources.push(e);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        super.endXMLNode(e);\r\n    }\r\n}\r\n","import * as cp from \"child_process\";\r\nimport * as fs from \"fs\";\r\nimport * as os from \"os\";\r\nimport * as path from \"path\";\r\nimport * as tmp from \"tmp\";\r\n\r\nimport { exists, scopedLogger, xml2json, XMLNode } from \"@hpcc-js/util\";\r\nimport { attachWorkspace, Workspace } from \"./eclMeta\";\r\n\r\nconst logger = scopedLogger(\"clienttools/eclcc\");\r\nconst exeExt = os.type() === \"Windows_NT\" ? \".exe\" : \"\";\r\n\r\nfunction tidyCRLF(inStr: string): string {\r\n    return inStr.split(\"\\r\\n\").join(\"\\n\").split(\"\\r\").join(\"\\n\");\r\n}\r\n\r\nexport class Version {\r\n    readonly prefix: string = \"\";\r\n    readonly major: number = 0;\r\n    readonly minor: number = 0;\r\n    readonly patch: number = 0;\r\n    readonly postfix: string = \"\";\r\n\r\n    constructor(build: string) {\r\n        const parts = build.split(\" \");\r\n        if (parts.length) {\r\n            const match = /(?:(\\w+)_)?(\\d+)\\.(\\d+)\\.(\\d+)(?:-(.*))?/.exec(parts[parts.length - 1]);\r\n            if (match) {\r\n                this.prefix = match[1] || \"\";\r\n                this.major = +match[2] || 0;\r\n                this.minor = +match[3] || 0;\r\n                this.patch = +match[4] || 0;\r\n                this.postfix = match[5] || \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(build: string) {\r\n    }\r\n\r\n    exists(): boolean {\r\n        return this.major !== 0 || this.minor !== 0 || this.patch !== 0 || this.postfix !== \"\";\r\n    }\r\n\r\n    compare(other: Version): number {\r\n        if (this.major > other.major) return 1;\r\n        if (this.major < other.major) return -1;\r\n        if (this.minor > other.minor) return 1;\r\n        if (this.minor < other.minor) return -1;\r\n        if (this.patch > other.patch) return 1;\r\n        if (this.patch < other.patch) return -1;\r\n        if (this.postfix === \"\" && other.postfix !== \"\") return 1;\r\n        return this.postfix.localeCompare(other.postfix);\r\n    }\r\n\r\n    toString(): string {\r\n        return `${this.prefix}_${this.major}.${this.minor}.${this.patch}-${this.postfix}`;\r\n    }\r\n}\r\n\r\ninterface IExecFile {\r\n    code: number;\r\n    stderr: string;\r\n    stdout: string;\r\n}\r\n\r\nexport interface IECLErrorWarning {\r\n    filePath: string;\r\n    line: number;\r\n    col: number;\r\n    msg: string;\r\n    severity: string;\r\n}\r\n\r\nconst ERROR = \"error\";\r\nconst WARN = \"warning\";\r\n\r\nexport class Errors {\r\n    protected _checked: string[];\r\n    protected errWarn: IECLErrorWarning[] = [];\r\n    protected errOther: string[] = [];\r\n\r\n    constructor(checked: string[]) {\r\n        this._checked = checked;\r\n    }\r\n\r\n    checked(): string[] {\r\n        return this._checked;\r\n    }\r\n\r\n    all(): IECLErrorWarning[] {\r\n        return this.errWarn;\r\n    }\r\n\r\n    errors(): IECLErrorWarning[] {\r\n        return this.errWarn.filter(e => e.severity === ERROR);\r\n    }\r\n\r\n    hasError(): boolean {\r\n        return this.errors().length > 0;\r\n    }\r\n\r\n    warnings(): IECLErrorWarning[] {\r\n        return this.errWarn.filter(e => e.severity === WARN);\r\n    }\r\n\r\n    hasWarning(): boolean {\r\n        return this.warnings().length > 0;\r\n    }\r\n\r\n    info(): IECLErrorWarning[] {\r\n        return this.errWarn.filter(e => [ERROR, WARN].indexOf(e.severity) < 0);\r\n    }\r\n\r\n    hasOther(): boolean {\r\n        return this.info().length > 0;\r\n    }\r\n\r\n    unknown(): string[] {\r\n        return this.errOther;\r\n    }\r\n\r\n    hasUnknown(): boolean {\r\n        return this.unknown().length > 0;\r\n    }\r\n}\r\n\r\nexport class EclccErrors extends Errors {\r\n\r\n    constructor(stdErr: string, checked: string[]) {\r\n        super(checked);\r\n        if (stdErr && stdErr.length) {\r\n            for (const errLine of stdErr.split(os.EOL)) {\r\n                let match = /([a-zA-Z]:\\\\(?:[- \\w\\.\\d]+\\\\)*(?:[- \\w\\.\\d]+)?|(?:\\/[\\w\\.\\-]+)+)\\((\\d*),(\\d*)\\) ?: ?(error|warning|info) C(\\d*) ?: ?(.*)/.exec(errLine);\r\n                if (match) {\r\n                    const [, filePath, row, _col, severity, code, _msg] = match;\r\n                    const line: number = +row;\r\n                    const col: number = +_col;\r\n                    const msg = code + \":  \" + _msg;\r\n                    this.errWarn.push({ filePath, line, col, msg, severity });\r\n                    continue;\r\n                }\r\n                match = /(error|warning|info): (.*)/i.exec(errLine);\r\n                if (match) {\r\n                    const [, severity, msg] = match;\r\n                    this.errWarn.push({ filePath: \"\", line: 0, col: 0, msg, severity });\r\n                    continue;\r\n                }\r\n                match = /\\d error(s?), \\d warning(s?)/.exec(errLine);\r\n                if (match) {\r\n                    continue;\r\n                }\r\n                logger.warning(`parseECLErrors:  Unable to parse \"${errLine}\"`);\r\n                this.errOther.push(errLine);\r\n            }\r\n        }\r\n        this._checked = checked;\r\n    }\r\n}\r\n\r\nexport class EnvchkErrors extends Errors {\r\n\r\n    private _lines: string[];\r\n\r\n    constructor(filePath: string, stdErr: string, checked: string[]) {\r\n        super(checked);\r\n        let content: string = fs.readFileSync(filePath, \"utf8\");\r\n        content = content.replace(/\\r\\n/g, \"\\n\");\r\n        this._lines = content.split(\"\\n\");\r\n        if (stdErr && stdErr.length) {\r\n            for (const errLine of stdErr.split(os.EOL)) {\r\n                const match = /(Warning|Error) : Path\\=(\\S*?)(\\[\\S*\\])? Message\\=(.*)/.exec(errLine);\r\n                if (match) {\r\n                    const [, severity, _path, _attr, _msg] = match;\r\n                    const msg = `${_path} ${_attr ? _attr : \"\"}:  ${_msg}`;\r\n                    const [line, col] = this.locate(_path);\r\n                    this.errWarn.push({ filePath, line, col, msg, severity });\r\n                    continue;\r\n                }\r\n                if (match) {\r\n                    continue;\r\n                }\r\n                logger.warning(`parseECLErrors:  Unable to parse \"${errLine}\"`);\r\n                this.errOther.push(errLine);\r\n            }\r\n        }\r\n        this._checked = checked;\r\n    }\r\n\r\n    locate(path: string): [number, number] {\r\n        const pathParts = path.split(\"/\");\r\n        if (pathParts.length && pathParts[0] === \"\") {\r\n            pathParts.shift();\r\n        }\r\n        if (pathParts.length > 0) {\r\n            let lineIdx = 0;\r\n            for (const line of this._lines) {\r\n                const testStr = \"<\" + pathParts[0];\r\n                if (line.indexOf(testStr + \" \") >= 0 || line.indexOf(testStr + \">\") >= 0) {\r\n                    pathParts.shift();\r\n                    if (pathParts.length === 0) {\r\n                        return [lineIdx + 1, line.indexOf(testStr) + 1];\r\n                    }\r\n                }\r\n                ++lineIdx;\r\n            }\r\n        }\r\n        return [0, 0];\r\n    }\r\n}\r\n\r\nexport function walkXmlJson(node: any, callback: (key: string, childNode: any, stack: any[]) => void, stack?: any[]) {\r\n    stack = stack || [];\r\n    stack.push(node);\r\n    for (const key in node) {\r\n        if (node.hasOwnProperty(key)) {\r\n            const childNode = node[key];\r\n            callback(key, childNode, stack);\r\n            if (childNode instanceof Array) {\r\n                childNode.forEach(child => {\r\n                    walkXmlJson(child, callback, stack);\r\n                });\r\n            } else if (typeof childNode === \"object\") {\r\n                walkXmlJson(childNode, callback, stack);\r\n            }\r\n        }\r\n    }\r\n    stack.pop();\r\n}\r\n\r\nexport class LocalWorkunit {\r\n    jsonWU: any;\r\n\r\n    constructor(jsonWU: any) {\r\n        this.jsonWU = jsonWU;\r\n    }\r\n\r\n    bpGetValidLocations(filePath: any) {\r\n        const retVal: any[] = [];\r\n        if (exists(\"W_LOCAL.Graphs\", this.jsonWU)) {\r\n            let id = \"\";\r\n            walkXmlJson(this.jsonWU.W_LOCAL.Graphs, (key: string, item: any, _stack: any[]) => {\r\n                if (key === \"$\" && item.id) {\r\n                    id = item.id;\r\n                }\r\n                if (key === \"$\" && item.name === \"definition\") {\r\n                    const match = /([a-z,A-Z]:\\\\(?:[-\\w\\.\\d]+\\\\)*(?:[-\\w\\.\\d]+)?|(?:\\/[\\w\\.\\-]+)+)\\((\\d*),(\\d*)\\)/.exec(item.value);\r\n                    if (match) {\r\n                        const [, file, row, _col] = match;\r\n                        const line: number = +row;\r\n                        const col: number = +_col;\r\n                        if (filePath === file) {\r\n                            retVal.push({ file, line, col, id });\r\n                        }\r\n                    }\r\n                }\r\n                // console.log(`${key}:  ` + JSON.stringify(item));\r\n            });\r\n        }\r\n        return retVal;\r\n    }\r\n}\r\n\r\nexport interface IArchive {\r\n    content: string;\r\n    err: EclccErrors;\r\n}\r\n\r\nexport interface IBundle {\r\n    name: string;\r\n    description: string;\r\n    url: string;\r\n    props?: { [key: string]: string | number | boolean };\r\n}\r\n\r\nexport class ClientTools {\r\n    readonly eclccPath: string;\r\n    readonly envchkPath: string;\r\n    readonly eclBundlePath: string;\r\n    readonly binPath: string;\r\n    protected cwd: string;\r\n    protected includeFolders: string[];\r\n    protected _legacyMode: boolean;\r\n    protected _args: string[];\r\n    protected _version: Version;\r\n\r\n    constructor(eclccPath: string, cwd?: string, includeFolders: string[] = [], legacyMode: boolean = false, args: string[] = [], version?: Version) {\r\n        this.eclccPath = eclccPath;\r\n        this.binPath = path.dirname(this.eclccPath);\r\n        this.envchkPath = path.join(this.binPath, \"envchk\" + exeExt);\r\n        this.eclBundlePath = path.join(this.binPath, \"ecl-bundle\" + exeExt);\r\n        this.cwd = path.normalize(cwd || this.binPath);\r\n        this.includeFolders = includeFolders;\r\n        this._legacyMode = legacyMode;\r\n        this._args = args;\r\n        this._version = version!;\r\n    }\r\n\r\n    clone(cwd?: string, includeFolders?: string[], legacyMode: boolean = false, args: string[] = []) {\r\n        return new ClientTools(this.eclccPath, cwd, includeFolders, legacyMode, args, this._version);\r\n    }\r\n\r\n    exists(filePath: string) {\r\n        try {\r\n            fs.accessSync(filePath);\r\n            return true;\r\n        } catch (e) { }\r\n        return false;\r\n    }\r\n\r\n    args(additionalItems: string[] = []): string[] {\r\n        const retVal: string[] = [...this._args];\r\n        if (this._legacyMode) {\r\n            retVal.push(\"-legacy\");\r\n        }\r\n        return retVal.concat(this.includeFolders.map(includePath => {\r\n            return \"-I\" + path.normalize(includePath);\r\n        })).concat(additionalItems);\r\n    }\r\n\r\n    version(): Promise<Version> {\r\n        if (this._version) {\r\n            return Promise.resolve(this._version);\r\n        }\r\n        return this.execFile(this.eclccPath, this.binPath, this.args([\"--version\"]), \"eclcc\", `Cannot find ${this.eclccPath}`).then((response: IExecFile): Version => {\r\n            this._version = new Version(response.stdout);\r\n            return this._version;\r\n        });\r\n    }\r\n\r\n    versionSync(): Version {\r\n        return this._version;\r\n    }\r\n\r\n    _paths = {};\r\n    paths() {\r\n        return this.execFile(this.eclccPath, this.cwd, this.args([\"-showpaths\"]), \"eclcc\", `Cannot find ${this.eclccPath}`).then((response: IExecFile) => {\r\n            if (response && response.stdout && response.stdout.length) {\r\n                const paths = response.stdout.split(/\\r?\\n/);\r\n                for (const path of paths) {\r\n                    const parts = path.split(\"=\");\r\n                    if (parts.length === 2) {\r\n                        this._paths[parts[0]] = parts[1];\r\n                    }\r\n                }\r\n            }\r\n            return this._paths;\r\n        });\r\n    }\r\n\r\n    private loadXMLDoc(filePath: any, removeOnRead?: boolean): Promise<XMLNode> {\r\n        return new Promise((resolve, _reject) => {\r\n            const fileData = fs.readFileSync(filePath, \"ascii\");\r\n            const retVal = xml2json(fileData as any);\r\n            if (removeOnRead) {\r\n                fs.unlink(filePath, (err) => { });\r\n            }\r\n            resolve(retVal);\r\n        });\r\n    }\r\n\r\n    createWU(filename: string): Promise<LocalWorkunit> {\r\n        const tmpName = tmp.tmpNameSync({ prefix: \"eclcc-wu-tmp\", postfix: \"\" });\r\n        const args = [\"-o\" + tmpName, \"-wu\"].concat([filename]);\r\n        return this.execFile(this.eclccPath, this.cwd, this.args(args), \"eclcc\", `Cannot find ${this.eclccPath}`).then((_response: IExecFile) => {\r\n            const xmlPath = path.normalize(tmpName + \".xml\");\r\n            const contentPromise = this.exists(xmlPath) ? this.loadXMLDoc(xmlPath, true) : Promise.resolve({});\r\n            return contentPromise.then((content) => {\r\n                return new LocalWorkunit(content);\r\n            });\r\n        });\r\n    }\r\n\r\n    createArchive(filename: string): Promise<IArchive> {\r\n        const args = [\"-E\"].concat([filename]);\r\n        return this.execFile(this.eclccPath, this.cwd, this.args(args), \"eclcc\", `Cannot find ${this.eclccPath}`).then((response: IExecFile): IArchive => {\r\n            return {\r\n                content: response.stdout,\r\n                err: new EclccErrors(response.stderr, [])\r\n            };\r\n        });\r\n    }\r\n\r\n    attachWorkspace(): Workspace {\r\n        return attachWorkspace(this.cwd);\r\n    }\r\n\r\n    fetchMeta(filePath: string): Promise<Workspace> {\r\n        return Promise.all([\r\n            attachWorkspace(this.cwd),\r\n            this.execFile(this.eclccPath, this.cwd, this.args([\"-M\", filePath]), \"eclcc\", `Cannot find ${this.eclccPath}`)\r\n        ]).then(([metaWorkspace, execFileResponse]: [Workspace, IExecFile]) => {\r\n            if (execFileResponse && execFileResponse.stdout && execFileResponse.stdout.length) {\r\n                metaWorkspace.parseMetaXML(execFileResponse.stdout);\r\n            }\r\n            return metaWorkspace;\r\n        });\r\n    }\r\n\r\n    syntaxCheck(filePath: string, args: string[] = [\"-syntax\"]): Promise<Errors> {\r\n        return Promise.all([\r\n            attachWorkspace(this.cwd),\r\n            this.execFile(this.eclccPath, this.cwd, this.args([...args, \"-M\", filePath]), \"eclcc\", `Cannot find ${this.eclccPath}`)\r\n        ]).then(([metaWorkspace, execFileResponse]: [Workspace, IExecFile]) => {\r\n            let checked: string[] = [];\r\n            if (execFileResponse && execFileResponse.stdout && execFileResponse.stdout.length) {\r\n                checked = metaWorkspace.parseMetaXML(execFileResponse.stdout);\r\n            }\r\n            return new EclccErrors(execFileResponse ? execFileResponse.stderr : \"\", checked);\r\n        });\r\n    }\r\n\r\n    envCheck(filePath: string, args: string[] = []): Promise<Errors> {\r\n        return Promise.all([\r\n            attachWorkspace(this.cwd),\r\n            this.execFile(this.envchkPath, this.cwd, this.args([...args, filePath]), \"envchk\", `Cannot find ${this.envchkPath}`)\r\n        ]).then(([metaWorkspace, execFileResponse]: [Workspace, IExecFile]) => {\r\n            return new EnvchkErrors(filePath, execFileResponse ? execFileResponse.stderr : \"\", []);\r\n        });\r\n    }\r\n\r\n    bundleList(): Promise<IBundle[]> {\r\n        const bundlesRegEx = /\\|(.*)\\|(.*)\\|(.*)\\|/g;\r\n        return Promise.all([\r\n            fetch(\"https://raw.githubusercontent.com/hpcc-systems/ecl-bundles/master/README.rst\")\r\n                .then(response => response.text())\r\n                .then(readme => {\r\n                    const retVal: IBundle[] = [];\r\n                    let m = bundlesRegEx.exec(readme);\r\n                    while (m) {\r\n                        retVal.push({\r\n                            name: m[1].trim(),\r\n                            description: m[2].trim(),\r\n                            url: m[3].trim()\r\n                        });\r\n                        m = bundlesRegEx.exec(readme);\r\n                    }\r\n                    return retVal;\r\n                }),\r\n            this.execFile(this.eclBundlePath, this.cwd, this.args([\"list\"]), \"ecl-bundle\", `Cannot find ${this.eclBundlePath}`)\r\n                .then(installedText => {\r\n                    return tidyCRLF(installedText.stdout).split(\"\\n\");\r\n                }).then(installedItems => {\r\n                    const allProps = {};\r\n                    return Promise.all(installedItems.filter(ii => !!ii).map(ii => {\r\n                        return this.execFile(this.eclBundlePath, this.cwd, this.args([\"info\", ii]), \"ecl-bundle\", `Cannot find ${this.eclBundlePath}`)\r\n                            .then(infoText => {\r\n                                return tidyCRLF(infoText.stdout).split(\"\\n\");\r\n                            }).then(info => {\r\n                                const props = {};\r\n                                info.forEach(line => {\r\n                                    const parts = line.split(\":\");\r\n                                    props[parts.shift().trim()] = parts.join(\":\").trim();\r\n                                });\r\n                                allProps[ii] = {\r\n                                    name: ii,\r\n                                    props\r\n                                };\r\n                            });\r\n                    })).then(() => allProps);\r\n                })\r\n        ]).then(([bundles, installed]) => {\r\n            bundles.forEach(b => {\r\n                if (installed[b.name]) {\r\n                    b.props = installed[b.name].props;\r\n                    delete installed[b.name];\r\n                }\r\n            });\r\n            for (const key in installed) {\r\n                bundles.push({\r\n                    name: key,\r\n                    url: \"\",\r\n                    description: \"\",\r\n                    props: installed[key].props\r\n                });\r\n            }\r\n            return bundles;\r\n        }).catch(e => {\r\n            return [];\r\n        });\r\n    }\r\n\r\n    bundleInstall(bundleUrl) {\r\n        return Promise.all([\r\n            attachWorkspace(this.cwd),\r\n            this.execFile(this.eclBundlePath, this.cwd, this.args([\"install\", bundleUrl]), \"ecl-bundle\", `Cannot find ${this.eclBundlePath}`)\r\n        ]).then(([metaWorkspace, execFileResponse]: [Workspace, IExecFile]) => {\r\n            return execFileResponse;\r\n        });\r\n    }\r\n\r\n    bundleUninstall(name) {\r\n        return Promise.all([\r\n            attachWorkspace(this.cwd),\r\n            this.execFile(this.eclBundlePath, this.cwd, this.args([\"uninstall\", name]), \"ecl-bundle\", `Cannot find ${this.eclBundlePath}`)\r\n        ]).then(([metaWorkspace, execFileResponse]: [Workspace, IExecFile]) => {\r\n            return execFileResponse;\r\n        });\r\n    }\r\n\r\n    private execFile(cmd: string, cwd: string, args: string[], _toolName: string, _notFoundError?: string): Promise<{ code: number, stdout: string, stderr: string }> {\r\n        return new Promise((resolve, _reject) => {\r\n            logger.debug(`${cmd} ${args.join(\" \")}`);\r\n            const child = cp.spawn(cmd, args, { cwd });\r\n            let stdOut = \"\";\r\n            let stdErr = \"\";\r\n            child.stdout.on(\"data\", (data) => {\r\n                stdOut += data.toString();\r\n            });\r\n            child.stderr.on(\"data\", (data) => {\r\n                stdErr += data.toString();\r\n            });\r\n            child.on(\"close\", (_code, _signal) => {\r\n                resolve({\r\n                    code: _code,\r\n                    stdout: stdOut.trim(),\r\n                    stderr: stdErr.trim()\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nfunction locateClientToolsInFolder(rootFolder: string, clientTools: ClientTools[]) {\r\n    if (rootFolder) {\r\n        const hpccSystemsFolder = path.join(rootFolder, \"HPCCSystems\");\r\n        if (fs.existsSync(hpccSystemsFolder) && fs.statSync(hpccSystemsFolder).isDirectory()) {\r\n            if (os.type() !== \"Windows_NT\") {\r\n                const eclccPath = path.join(hpccSystemsFolder, \"bin\", \"eclcc\");\r\n                if (fs.existsSync(eclccPath)) {\r\n                    clientTools.push(new ClientTools(eclccPath));\r\n                }\r\n            }\r\n            fs.readdirSync(hpccSystemsFolder).forEach((versionFolder) => {\r\n                const eclccPath = path.join(hpccSystemsFolder, versionFolder, \"clienttools\", \"bin\", \"eclcc\" + exeExt);\r\n                if (fs.existsSync(eclccPath)) {\r\n                    const name = path.basename(versionFolder);\r\n                    const version = new Version(name);\r\n                    if (version.exists()) {\r\n                        clientTools.push(new ClientTools(eclccPath));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nlet allClientToolsCache: Promise<ClientTools[]>;\r\nexport function clearAllClientToolsCache() {\r\n    allClientToolsCache = undefined;\r\n}\r\n\r\nexport function locateAllClientTools() {\r\n    if (allClientToolsCache) return allClientToolsCache;\r\n    const clientTools: ClientTools[] = [];\r\n    switch (os.type()) {\r\n        case \"Windows_NT\":\r\n            const rootFolder86 = process.env[\"ProgramFiles(x86)\"] || \"\";\r\n            if (rootFolder86) {\r\n                locateClientToolsInFolder(rootFolder86, clientTools);\r\n            }\r\n            const rootFolder = process.env[\"ProgramFiles\"] || \"\";\r\n            if (rootFolder) {\r\n                locateClientToolsInFolder(rootFolder, clientTools);\r\n            }\r\n            if (!rootFolder86 && !rootFolder) {\r\n                locateClientToolsInFolder(\"c:\\\\Program Files (x86)\", clientTools);\r\n            }\r\n            break;\r\n        case \"Linux\":\r\n        case \"Darwin\":\r\n            locateClientToolsInFolder(\"/opt\", clientTools);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    allClientToolsCache = Promise.all(clientTools.map(ct => ct.version())).then(() => {\r\n        clientTools.sort((l: ClientTools, r: ClientTools) => {\r\n            return r.versionSync().compare(l.versionSync());\r\n        });\r\n        return clientTools;\r\n    });\r\n    return allClientToolsCache;\r\n}\r\n\r\nlet eclccPathMsg = \"\";\r\nfunction logEclccPath(eclccPath: string) {\r\n    const msg = `Using eclccPath setting:  ${eclccPath}`;\r\n    if (eclccPathMsg !== msg) {\r\n        logger.info(msg);\r\n        eclccPathMsg = msg;\r\n    }\r\n}\r\n\r\nexport function locateClientTools(overridePath: string = \"\", build: string = \"\", cwd: string = \".\", includeFolders: string[] = [], legacyMode: boolean = false, args: string[] = []): Promise<ClientTools> {\r\n    if (overridePath && fs.existsSync(overridePath)) {\r\n        logEclccPath(overridePath);\r\n        return Promise.resolve(new ClientTools(overridePath, cwd, includeFolders, legacyMode, args));\r\n    }\r\n    return locateAllClientTools().then((allClientToolsCache2) => {\r\n        if (!allClientToolsCache2.length) {\r\n            throw new Error(\"Unable to locate ECL Client Tools.\");\r\n        }\r\n        const buildVersion = new Version(build);\r\n        let latest: ClientTools | undefined;\r\n        let bestMajor: ClientTools | undefined;\r\n        for (const ct of allClientToolsCache2) {\r\n            const ctVersion = ct.versionSync();\r\n            if (ctVersion.exists()) {\r\n                if (!latest) latest = ct;\r\n                if (!bestMajor && buildVersion.major === ctVersion.major) bestMajor = ct;\r\n                if (buildVersion.major === ctVersion.major && buildVersion.minor === ctVersion.minor) return ct.clone(cwd, includeFolders, legacyMode, args);\r\n            }\r\n        }\r\n        const best: ClientTools = bestMajor || latest!;\r\n        logEclccPath(best.eclccPath);\r\n        return best.clone(cwd, includeFolders, legacyMode, args);\r\n    });\r\n}\r\n","// DOM Parser polyfill  ---\r\nimport { root } from \"@hpcc-js/util\";\r\nimport { DOMParser } from \"@xmldom/xmldom\";\r\nroot.DOMParser = DOMParser;\r\n\r\n//  fetch polyfill  ---\r\nimport fetch from \"node-fetch\";\r\nimport * as https from \"https\";\r\nimport { Agent, setGlobalDispatcher } from \"undici\";\r\n\r\nif (typeof root.fetch === \"undefined\") {\r\n    //  NodeJS < v18  ---\r\n    root.fetch = fetch;\r\n    root.fetch.__rejectUnauthorizedAgent = new https.Agent({\r\n        rejectUnauthorized: false\r\n    });\r\n} else {\r\n    //  NodeJS >= v18  ---\r\n    root.fetch.__defaultAgent = new Agent();\r\n    root.fetch.__rejectUnauthorizedAgent = new Agent({\r\n        connect: {\r\n            rejectUnauthorized: false\r\n        }\r\n    });\r\n    root.fetch.__setGlobalDispatcher = setGlobalDispatcher;\r\n}\r\n\r\n//  AbortController polyfill  ---\r\nimport AbortController from \"abort-controller\";\r\nif (typeof root.AbortController === \"undefined\") {\r\n    root.AbortController = AbortController;\r\n}\r\n\r\nimport { trustwave } from \"./pem/trustwave\";\r\n\r\nlet globalCA = \"\";\r\nif (https.globalAgent.options.ca !== undefined) {\r\n    if (Array.isArray(https.globalAgent.options.ca) && https.globalAgent.options.ca.length) {\r\n        if (typeof https.globalAgent.options.ca[0] === \"string\") {\r\n            globalCA = https.globalAgent.options.ca.join(\"\\n\");\r\n        } else if (https.globalAgent.options.ca[0] instanceof Buffer) {\r\n            globalCA = https.globalAgent.options.ca.map(row => row.toString()).join(\"\\n\");\r\n        }\r\n    } else if (typeof https.globalAgent.options.ca === \"string\") {\r\n        globalCA = https.globalAgent.options.ca;\r\n    } else if (https.globalAgent.options.ca instanceof Buffer) {\r\n        globalCA = https.globalAgent.options.ca.toString();\r\n    }\r\n    globalCA += \"\\n\";\r\n}\r\n\r\nroot.fetch.__trustwaveAgent = new https.Agent({\r\n    ca: globalCA + trustwave\r\n});\r\n\r\n//  btoa polyfill  ---\r\nimport { Buffer } from \"safe-buffer\";\r\nif (typeof root.btoa === \"undefined\") {\r\n    root.btoa = function (str: string) {\r\n        return Buffer.from(str || \"\", \"utf8\").toString(\"base64\");\r\n    };\r\n}\r\n\r\nexport * from \"./index-common\";\r\n\r\n//  Client Tools  ---\r\nexport * from \"./clienttools/eclcc\";\r\nexport * from \"./clienttools/eclMeta\";\r\n"],"names":["logger","locale","defaultLocale","formatLocale","interval","day","timeMonday","timeDay","timeYear","timeSunday","timeThursday","walkXmlJson","Subgraph","Vertex","Edge","espTime2Seconds","d3Format","_workunits","WsTopology.TopologyService","_store","DOMParser","fetch"],"mappings":"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","x_google_ignoreList":[2,24,25,26,27,28,29,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66]}