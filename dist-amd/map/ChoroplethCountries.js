(function(e,t){typeof define=="function"&&define.amd?define(["d3","topojson","./Choropleth","./countries"],t):e.map_ChoroplethCountries=t(e.d3,e.topojson,e.map_Choropleth,e.map_countries)})(this,function(e,t,n,r){function u(){n.call(this),this._choroTopology=r.topology,this._choroTopologyObjects=r.topology.objects.countries}var i=t.feature(r.topology,r.topology.objects.countries).features,s={};for(var o in i)i[o].id&&r.countryNames[i[o].id]&&(s[r.countryNames[i[o].id].name]=i[o]);return u.prototype=Object.create(n.prototype),u.prototype.constructor=u,u.prototype._class+=" map_ChoroplethCountries",u.prototype.layerEnter=function(t,r,i){n.prototype.layerEnter.apply(this,arguments),this._selection.widgetElement(this._choroplethData),this.choroPaths=e.select(null);var s=this;this.tooltipHTML(function(e){return s.tooltipFormat({label:e[0],value:e[1]})})},u.prototype.layerUpdate=function(e){n.prototype.layerUpdate.apply(this,arguments),this.choroPaths=this._choroplethData.selectAll(".data").data(this.visible()?this.data():[],function(e){return e[0]});var t=this;this.choroPaths.enter().append("path").attr("class","data").call(this._selection.enter.bind(this._selection)).on("click",function(e){t._dataMap[e[0]]&&t.click(t.rowToObj(t._dataMap[e[0]]),"weight",t._selection.selected(this))}).on("mouseout.tooltip",this.tooltip.hide).on("mousemove.tooltip",this.tooltip.show),this.choroPaths.attr("d",function(t){var n=e._d3GeoPath(s[t[0]]);return n||console.log("Unknown Country:  "+t),n}).style("fill",function(e){var n=t._palette(e[1],t._dataMinWeight,t._dataMaxWeight);return n}),this.choroPaths.exit().remove()},u});